<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-prometheus-prometheus-0.13.3-3.fc23">
  <packages>
    <package importpath="github.com/prometheus/prometheus/web">
      <types>
        <type type="struct" name="WebService">
          <field type="pointer" name="StatusHandler">
            <type type="ident" def="PrometheusStatusHandler"/>
          </field>
          <field type="pointer" name="MetricsHandler">
            <type type="selector">
              <prefix value="api"/>
              <item value="MetricsService"/>
            </type>
          </field>
          <field type="pointer" name="AlertsHandler">
            <type type="ident" def="AlertsHandler"/>
          </field>
          <field type="pointer" name="ConsolesHandler">
            <type type="ident" def="ConsolesHandler"/>
          </field>
          <field type="pointer" name="GraphsHandler">
            <type type="ident" def="GraphsHandler"/>
          </field>
          <field type="channel" dir="3" name="QuitChan">
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="PrometheusStatusHandler">
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="BuildInfo">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Config"/>
          <field type="map" name="Flags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="RuleManager">
            <type type="selector">
              <prefix value="rules"/>
              <item value="Manager"/>
            </type>
          </field>
          <field type="map" name="TargetPools">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="retrieval"/>
                <item value="TargetPool"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="Birth">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="PathPrefix"/>
        </type>
        <type type="struct" name="GraphsHandler">
          <field type="ident" def="string" name="PathPrefix"/>
        </type>
        <type type="struct" name="ConsolesHandler">
          <field type="pointer" name="QueryEngine">
            <type type="selector">
              <prefix value="promql"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="ident" def="string" name="PathPrefix"/>
        </type>
        <type type="struct" name="AlertStatus">
          <field type="slice" name="AlertingRules">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="rules"/>
                <item value="AlertingRule"/>
              </type>
            </elmtype>
          </field>
          <field type="map" name="AlertStateToRowClass">
            <keytype type="selector">
              <prefix value="rules"/>
              <item value="AlertState"/>
            </keytype>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="AlertsHandler">
          <field type="pointer" name="RuleManager">
            <type type="selector">
              <prefix value="rules"/>
              <item value="Manager"/>
            </type>
          </field>
          <field type="ident" def="string" name="PathPrefix"/>
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ServeForever">
          <recvList>
            <type type="ident" def="WebService"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MustBuildServerURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TargetStateToClass">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusStatusHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="retrieval"/>
                <item value="TargetState"/>
              </keytype>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusStatusHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GraphsHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConsolesHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="byAlertStateSorter"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byAlertStateSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="byAlertStateSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertsHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/utility/test">
      <types>
        <type name="Closer" type="interface">
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="TemporaryDirectory" type="interface">
          <method name="Path">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="T" type="interface">
          <method name="Fatal">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatalf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="ErrorEqual">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="ident" def="nilCloser"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="ident" def="callbackCloser"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewCallbackCloser">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="callbackCloser"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="ident" def="temporaryDirectory"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Path">
          <recvList>
            <type type="ident" def="temporaryDirectory"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewTemporaryDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="T"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="TemporaryDirectory"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="NilCloser"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/local/flock">
      <types>
        <type name="Releaser" type="interface">
          <method name="Release">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="windowsLock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixLock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixLock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plan9Lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Releaser"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/web/httputils">
      <types>
        <type type="struct" name="CompressionHandler">
          <field type="selector" name="Handler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="GetQueryParams">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="ErrorJSON">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RespondJSON">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Value"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="compressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="compressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="ident" def="CompressionHandler"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/remote">
      <types>
        <type name="StorageClient" type="interface">
          <method name="Store">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Samples"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="StorageQueueManager">
          <field type="ident" def="StorageClient" name="tsdb"/>
          <field type="channel" dir="3" name="queue">
            <type type="pointer">
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Sample"/>
              </type>
            </type>
          </field>
          <field type="selector" name="pendingSamples">
            <prefix value="clientmodel"/>
            <item value="Samples"/>
          </field>
          <field type="channel" dir="3" name="sendSemaphore">
            <type type="ident" def="bool"/>
          </field>
          <field type="channel" dir="3" name="drained">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="samplesCount">
            <type type="selector">
              <prefix value="prometheus"/>
              <item value="CounterVec"/>
            </type>
          </field>
          <field type="selector" name="sendLatency">
            <prefix value="prometheus"/>
            <item value="Summary"/>
          </field>
          <field type="selector" name="sendErrors">
            <prefix value="prometheus"/>
            <item value="Counter"/>
          </field>
          <field type="selector" name="queueLength">
            <prefix value="prometheus"/>
            <item value="Gauge"/>
          </field>
          <field type="selector" name="queueCapacity">
            <prefix value="prometheus"/>
            <item value="Metric"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorageQueueManager">
          <recvList/>
          <paramsList>
            <type type="ident" def="StorageClient"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Sample"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="prometheus"/>
                  <item value="Desc"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="selector">
                <prefix value="prometheus"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StorageQueueManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/web/blob">
      <types>
        <type type="struct" name="Handler"/>
      </types>
      <functions>
        <function name="GetFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="ident" def="Handler"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="TemplateFiles"/>
        <name value="StaticFiles"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage">
      <types>
        <type name="SampleAppender" type="interface">
          <method name="Append">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="clientmodel"/>
                  <item value="Sample"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Fanout" type="slice">
          <elmtype type="ident" def="SampleAppender"/>
        </type>
      </types>
      <functions>
        <function name="Append">
          <recvList>
            <type type="ident" def="Fanout"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Sample"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/remote/influxdb">
      <types>
        <type type="struct" name="Client">
          <field type="ident" def="string" name="url"/>
          <field type="pointer" name="httpClient">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StoreSamplesRequest">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="RetentionPolicy"/>
          <field type="slice" name="Points">
            <elmtype type="ident" def="point"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </resultsList>
        </function>
        <function name="Store">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Samples"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="Client"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/local/codable">
      <types>
        <type name="Metric" type="selector">
          <prefix value="clientmodel"/>
          <item value="Metric"/>
        </type>
        <type name="Fingerprint" type="selector">
          <prefix value="clientmodel"/>
          <item value="Fingerprint"/>
        </type>
        <type name="FingerprintSet" type="map">
          <keytype type="selector">
            <prefix value="clientmodel"/>
            <item value="Fingerprint"/>
          </keytype>
          <valtype type="struct" name=""/>
        </type>
        <type name="Fingerprints" type="selector">
          <prefix value="clientmodel"/>
          <item value="Fingerprints"/>
        </type>
        <type name="LabelPair" type="selector">
          <prefix value="metric"/>
          <item value="LabelPair"/>
        </type>
        <type name="LabelName" type="selector">
          <prefix value="clientmodel"/>
          <item value="LabelName"/>
        </type>
        <type name="LabelValueSet" type="map">
          <keytype type="selector">
            <prefix value="clientmodel"/>
            <item value="LabelValue"/>
          </keytype>
          <valtype type="struct" name=""/>
        </type>
        <type name="LabelValues" type="selector">
          <prefix value="clientmodel"/>
          <item value="LabelValues"/>
        </type>
        <type type="struct" name="TimeRange">
          <field type="selector" name="First">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="Last">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="EncodeVarint">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeUvarint">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeUint64">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeUint64">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFromReader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="byteReader"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="Fingerprint"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fingerprint"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="FingerprintSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FingerprintSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="Fingerprints"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fingerprints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="LabelPair"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="LabelName"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelName"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="LabelValueSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelValueSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="LabelValues"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelValues"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalBinary">
          <recvList>
            <type type="ident" def="TimeRange"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalBinary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TimeRange"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/local/index">
      <types>
        <type type="struct" name="LevelDB">
          <field type="pointer" name="storage">
            <type type="selector">
              <prefix value="leveldb"/>
              <item value="DB"/>
            </type>
          </field>
          <field type="pointer" name="readOpts">
            <type type="selector">
              <prefix value="leveldb_opt"/>
              <item value="ReadOptions"/>
            </type>
          </field>
          <field type="pointer" name="writeOpts">
            <type type="selector">
              <prefix value="leveldb_opt"/>
              <item value="WriteOptions"/>
            </type>
          </field>
        </type>
        <type type="struct" name="LevelDBOptions">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="int" name="CacheSizeBytes"/>
        </type>
        <type type="struct" name="LevelDBBatch">
          <field type="pointer" name="batch">
            <type type="selector">
              <prefix value="leveldb"/>
              <item value="Batch"/>
            </type>
          </field>
        </type>
        <type name="KeyValueStore" type="interface">
          <method name="Put">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryUnmarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Has">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewBatch">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Batch"/>
            </resultsList>
          </method>
          <method name="Commit">
            <paramsList>
              <type type="ident" def="Batch"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ForEach">
            <paramsList>
              <type type="func">
                <paramsList>
                  <type type="ident" def="KeyValueAccessor"/>
                </paramsList>
                <resultsList>
                  <type type="ident" def="error"/>
                </resultsList>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="KeyValueAccessor" type="interface">
          <method name="Key">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryUnmarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Value">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryUnmarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Batch" type="interface">
          <method name="Put">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="encoding"/>
                <item value="BinaryMarshaler"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Reset">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="FingerprintMetricMapping" type="map">
          <keytype type="selector">
            <prefix value="clientmodel"/>
            <item value="Fingerprint"/>
          </keytype>
          <valtype type="selector">
            <prefix value="clientmodel"/>
            <item value="Metric"/>
          </valtype>
        </type>
        <type type="struct" name="FingerprintMetricIndex">
          <field type="ident" def="KeyValueStore" name=""/>
        </type>
        <type name="LabelNameLabelValuesMapping" type="map">
          <keytype type="selector">
            <prefix value="clientmodel"/>
            <item value="LabelName"/>
          </keytype>
          <valtype type="selector">
            <prefix value="codable"/>
            <item value="LabelValueSet"/>
          </valtype>
        </type>
        <type type="struct" name="LabelNameLabelValuesIndex">
          <field type="ident" def="KeyValueStore" name=""/>
        </type>
        <type name="LabelPairFingerprintsMapping" type="map">
          <keytype type="selector">
            <prefix value="metric"/>
            <item value="LabelPair"/>
          </keytype>
          <valtype type="selector">
            <prefix value="codable"/>
            <item value="FingerprintSet"/>
          </valtype>
        </type>
        <type type="struct" name="LabelPairFingerprintIndex">
          <field type="ident" def="KeyValueStore" name=""/>
        </type>
        <type type="struct" name="FingerprintTimeRangeIndex">
          <field type="ident" def="KeyValueStore" name=""/>
        </type>
      </types>
      <functions>
        <function name="NewLevelDB">
          <recvList/>
          <paramsList>
            <type type="ident" def="LevelDBOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="KeyValueStore"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Batch"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryUnmarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Commit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Batch"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForEach">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDB"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="ident" def="KeyValueAccessor"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDBBatch"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDBBatch"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryMarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LevelDBBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Key">
          <recvList>
            <type type="pointer">
              <type type="ident" def="levelDBKeyValueAccessor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryUnmarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="levelDBKeyValueAccessor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="BinaryUnmarshaler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IndexBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FingerprintMetricIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="FingerprintMetricMapping"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnindexBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FingerprintMetricIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="FingerprintMetricMapping"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FingerprintMetricIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Metric"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFingerprintMetricIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FingerprintMetricIndex"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IndexBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelNameLabelValuesIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelNameLabelValuesMapping"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelNameLabelValuesIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelName"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValues"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupSet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelNameLabelValuesIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelName"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="clientmodel"/>
                <item value="LabelValue"/>
              </keytype>
              <valtype type="struct" name=""/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLabelNameLabelValuesIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LabelNameLabelValuesIndex"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteLabelNameLabelValuesIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IndexBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairFingerprintIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelPairFingerprintsMapping"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairFingerprintIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="LabelPair"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprints"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupSet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairFingerprintIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="LabelPair"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="clientmodel"/>
                <item value="Fingerprint"/>
              </keytype>
              <valtype type="struct" name=""/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLabelPairFingerprintIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LabelPairFingerprintIndex"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteLabelPairFingerprintIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FingerprintTimeRangeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFingerprintTimeRangeIndex">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FingerprintTimeRangeIndex"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/rules">
      <types>
        <type name="Rule" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="EvalRaw">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="promql"/>
                  <item value="Engine"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="promql"/>
                <item value="Vector"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Eval">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="promql"/>
                  <item value="Engine"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="promql"/>
                <item value="Vector"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DotGraph">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="HTMLSnippet">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="template"/>
                <item value="HTML"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RecordingRule">
          <field type="ident" def="string" name="name"/>
          <field type="selector" name="vector">
            <prefix value="promql"/>
            <item value="Expr"/>
          </field>
          <field type="selector" name="labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
        </type>
        <type type="struct" name="Manager">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="rules">
            <elmtype type="ident" def="Rule"/>
          </field>
          <field type="channel" dir="3" name="done">
            <type type="ident" def="bool"/>
          </field>
          <field type="selector" name="interval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="pointer" name="queryEngine">
            <type type="selector">
              <prefix value="promql"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="selector" name="sampleAppender">
            <prefix value="storage"/>
            <item value="SampleAppender"/>
          </field>
          <field type="pointer" name="notificationHandler">
            <type type="selector">
              <prefix value="notification"/>
              <item value="NotificationHandler"/>
            </type>
          </field>
          <field type="ident" def="string" name="prometheusURL"/>
          <field type="ident" def="string" name="pathPrefix"/>
        </type>
        <type type="struct" name="ManagerOptions">
          <field type="selector" name="EvaluationInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="pointer" name="QueryEngine">
            <type type="selector">
              <prefix value="promql"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="pointer" name="NotificationHandler">
            <type type="selector">
              <prefix value="notification"/>
              <item value="NotificationHandler"/>
            </type>
          </field>
          <field type="selector" name="SampleAppender">
            <prefix value="storage"/>
            <item value="SampleAppender"/>
          </field>
          <field type="ident" def="string" name="PrometheusURL"/>
          <field type="ident" def="string" name="PathPrefix"/>
        </type>
        <type name="AlertState" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Alert">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
          <field type="ident" def="AlertState" name="State"/>
          <field type="selector" name="ActiveSince">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
        </type>
        <type type="struct" name="AlertingRule">
          <field type="ident" def="string" name="name"/>
          <field type="selector" name="Vector">
            <prefix value="promql"/>
            <item value="Expr"/>
          </field>
          <field type="selector" name="holdDuration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
          <field type="ident" def="string" name="Summary"/>
          <field type="ident" def="string" name="Description"/>
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="activeAlerts">
            <keytype type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </keytype>
            <valtype type="pointer">
              <type type="ident" def="Alert"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="Name">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EvalRaw">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="promql"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Vector"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Eval">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="promql"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Vector"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HTMLSnippet">
          <recvList>
            <type type="ident" def="RecordingRule"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="template"/>
              <item value="HTML"/>
            </type>
          </resultsList>
        </function>
        <function name="NewManager">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ManagerOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="LoadRuleFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Rules">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Rule"/>
            </type>
          </resultsList>
        </function>
        <function name="AlertingRules">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="AlertingRule"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="AlertState"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EvalRaw">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="promql"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Vector"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Eval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="promql"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Vector"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HTMLSnippet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="template"/>
              <item value="HTML"/>
            </type>
          </resultsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="AlertState"/>
          </resultsList>
        </function>
        <function name="ActiveAlerts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Alert"/>
            </type>
          </resultsList>
        </function>
        <function name="NewAlertingRule">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="promql"/>
              <item value="Expr"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AlertingRule"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="AlertMetricName"/>
        <name value="AlertNameLabel"/>
        <name value="AlertStateLabel"/>
        <name value="Inactive"/>
        <name value="Pending"/>
        <name value="Firing"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/templates">
      <types/>
      <functions>
        <function name="Len">
          <recvList>
            <type type="ident" def="queryResultByLabelSorter"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="queryResultByLabelSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="queryResultByLabelSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewTemplateExpander">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="promql"/>
                <item value="Engine"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="templateExpander"/>
            </type>
          </resultsList>
        </function>
        <function name="Expand">
          <recvList>
            <type type="ident" def="templateExpander"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExpandHTML">
          <recvList>
            <type type="ident" def="templateExpander"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/config">
      <types>
        <type type="struct" name="Config">
          <field type="selector" name="">
            <prefix value="pb"/>
            <item value="PrometheusConfig"/>
          </field>
        </type>
        <type type="struct" name="JobConfig">
          <field type="selector" name="">
            <prefix value="pb"/>
            <item value="JobConfig"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="LoadFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Config"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadFromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Config"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetJobByName">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="GlobalLabels">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </resultsList>
        </function>
        <function name="Jobs">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="JobConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="ScrapeInterval">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="EvaluationInterval">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="ScrapeInterval">
          <recvList>
            <type type="ident" def="JobConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="ScrapeTimeout">
          <recvList>
            <type type="ident" def="JobConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/notification">
      <types>
        <type type="struct" name="NotificationReq">
          <field type="ident" def="string" name="Summary"/>
          <field type="ident" def="string" name="Description"/>
          <field type="selector" name="Labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
          <field type="selector" name="ActiveSince">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="RuleString"/>
          <field type="ident" def="string" name="GeneratorURL"/>
        </type>
        <type name="NotificationReqs" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="NotificationReq"/>
          </elmtype>
        </type>
        <type type="struct" name="NotificationHandler">
          <field type="ident" def="string" name="alertmanagerURL"/>
          <field type="channel" dir="3" name="pendingNotifications">
            <type type="ident" def="NotificationReqs"/>
          </field>
          <field type="ident" def="httpPoster" name="httpClient"/>
          <field type="selector" name="notificationLatency">
            <prefix value="prometheus"/>
            <item value="Summary"/>
          </field>
          <field type="selector" name="notificationErrors">
            <prefix value="prometheus"/>
            <item value="Counter"/>
          </field>
          <field type="selector" name="notificationDropped">
            <prefix value="prometheus"/>
            <item value="Counter"/>
          </field>
          <field type="selector" name="notificationsQueueLength">
            <prefix value="prometheus"/>
            <item value="Gauge"/>
          </field>
          <field type="selector" name="notificationsQueueCapacity">
            <prefix value="prometheus"/>
            <item value="Metric"/>
          </field>
          <field type="channel" dir="3" name="stopped">
            <type type="struct" name=""/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewNotificationHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SubmitReqs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NotificationReqs"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="prometheus"/>
                  <item value="Desc"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotificationHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="selector">
                <prefix value="prometheus"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/utility">
      <types>
        <type name="Set" type="map">
          <keytype type="interface"/>
          <valtype type="struct" name=""/>
        </type>
      </types>
      <functions>
        <function name="DurationToString">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StringToDuration">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TableLinkForExpression">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GraphLinkForExpression">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Elements">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Intersection">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Set"/>
          </resultsList>
        </function>
        <function name="NewDeadlineClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/retrieval">
      <types>
        <type type="struct" name="TargetPool">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="ident" def="TargetManager" name="manager"/>
          <field type="map" name="targetsByURL">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Target"/>
          </field>
          <field type="selector" name="interval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="sampleAppender">
            <prefix value="storage"/>
            <item value="SampleAppender"/>
          </field>
          <field type="channel" dir="3" name="addTargetQueue">
            <type type="ident" def="Target"/>
          </field>
          <field type="ident" def="TargetProvider" name="targetProvider"/>
          <field type="channel" dir="3" name="stopping">
            <type type="struct" name=""/>
          </field>
          <field type="channel" dir="3" name="stopped">
            <type type="struct" name=""/>
          </field>
        </type>
        <type name="TargetManager" type="interface">
          <method name="AddTarget">
            <paramsList>
              <type type="selector">
                <prefix value="config"/>
                <item value="JobConfig"/>
              </type>
              <type type="ident" def="Target"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ReplaceTargets">
            <paramsList>
              <type type="selector">
                <prefix value="config"/>
                <item value="JobConfig"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="Target"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Remove">
            <paramsList>
              <type type="ident" def="Target"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="AddTargetsFromConfig">
            <paramsList>
              <type type="selector">
                <prefix value="config"/>
                <item value="Config"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Pools">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="TargetPool"/>
                </valtype>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="TargetProvider" type="interface">
          <method name="Targets">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Target"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="TargetState" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Target" type="interface">
          <method name="LastError">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="State">
            <paramsList/>
            <resultsList>
              <type type="ident" def="TargetState"/>
            </resultsList>
          </method>
          <method name="LastScrape">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="URL">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="InstanceIdentifier">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GlobalURL">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="BaseLabels">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="LabelSet"/>
              </type>
            </resultsList>
          </method>
          <method name="BaseLabelsWithoutJobAndInstance">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="LabelSet"/>
              </type>
            </resultsList>
          </method>
          <method name="SetBaseLabelsFrom">
            <paramsList>
              <type type="ident" def="Target"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="RunScraper">
            <paramsList>
              <type type="selector">
                <prefix value="storage"/>
                <item value="SampleAppender"/>
              </type>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="StopScraper">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Ingest">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Samples"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewTargetPool">
          <recvList/>
          <paramsList>
            <type type="ident" def="TargetProvider"/>
            <type type="selector">
              <prefix value="storage"/>
              <item value="SampleAppender"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AddTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Target"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReplaceTargets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Target"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="targetsByURL"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="targetsByURL"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="targetsByURL"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Targets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetPool"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Target"/>
            </type>
          </resultsList>
        </function>
        <function name="NewTargetManager">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="storage"/>
              <item value="SampleAppender"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="TargetManager"/>
          </resultsList>
        </function>
        <function name="AddTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="config"/>
              <item value="JobConfig"/>
            </type>
            <type type="ident" def="Target"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReplaceTargets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="config"/>
              <item value="JobConfig"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="Target"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Target"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddTargetsFromConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="config"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Pools">
          <recvList>
            <type type="pointer">
              <type type="ident" def="targetManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="TargetPool"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="NewSdTargetProvider">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="config"/>
              <item value="JobConfig"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="sdTargetProvider"/>
            </type>
          </resultsList>
        </function>
        <function name="Targets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="sdTargetProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Target"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TargetState"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewTarget">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Target"/>
          </resultsList>
        </function>
        <function name="Ingest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Samples"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunScraper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="storage"/>
              <item value="SampleAppender"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StopScraper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="LastError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TargetState"/>
          </resultsList>
        </function>
        <function name="LastScrape">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="URL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="InstanceIdentifier">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GlobalURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="BaseLabels">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </resultsList>
        </function>
        <function name="BaseLabelsWithoutJobAndInstance">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelSet"/>
            </type>
          </resultsList>
        </function>
        <function name="SetBaseLabelsFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="target"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Target"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="InstanceLabel"/>
        <name value="Unknown"/>
        <name value="Healthy"/>
        <name value="Unhealthy"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/metric">
      <types>
        <type type="struct" name="SamplePair">
          <field type="selector" name="Timestamp">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
        </type>
        <type name="Values" type="slice">
          <elmtype type="ident" def="SamplePair"/>
        </type>
        <type type="struct" name="Interval">
          <field type="selector" name="OldestInclusive">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="NewestInclusive">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
        </type>
        <type name="MatchType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="LabelMatchers" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="LabelMatcher"/>
          </elmtype>
        </type>
        <type type="struct" name="LabelMatcher">
          <field type="ident" def="MatchType" name="Type"/>
          <field type="selector" name="Name">
            <prefix value="clientmodel"/>
            <item value="LabelName"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="LabelValue"/>
          </field>
          <field type="pointer" name="re">
            <type type="selector">
              <prefix value="regexp"/>
              <item value="Regexp"/>
            </type>
          </field>
        </type>
        <type type="struct" name="LabelPair">
          <field type="selector" name="Name">
            <prefix value="clientmodel"/>
            <item value="LabelName"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="LabelValue"/>
          </field>
        </type>
        <type name="LabelPairs" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="LabelPair"/>
          </elmtype>
        </type>
      </types>
      <functions>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="SamplePair"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SamplePair"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="SamplePair"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SamplePair"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MatchType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewLabelMatcher">
          <recvList/>
          <paramsList>
            <type type="ident" def="MatchType"/>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelName"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValue"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LabelMatcher"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelMatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelMatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValue"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Filter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelMatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValues"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValues"/>
            </type>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="LabelPairs"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="LabelPairs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="LabelPairs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Equal"/>
        <name value="NotEqual"/>
        <name value="RegexMatch"/>
        <name value="RegexNoMatch"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/remote/opentsdb">
      <types>
        <type name="TagValue" type="selector">
          <prefix value="clientmodel"/>
          <item value="LabelValue"/>
        </type>
        <type type="struct" name="Client">
          <field type="ident" def="string" name="url"/>
          <field type="pointer" name="httpClient">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StoreSamplesRequest">
          <field type="ident" def="TagValue" name="Metric"/>
          <field type="ident" def="int64" name="Timestamp"/>
          <field type="ident" def="float64" name="Value"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="TagValue"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="TagValue"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </resultsList>
        </function>
        <function name="Store">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Samples"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="Client"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/config/generated">
      <types>
        <type type="struct" name="LabelPair">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LabelPairs">
          <field type="slice" name="Label">
            <elmtype type="pointer">
              <type type="ident" def="LabelPair"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GlobalConfig">
          <field type="pointer" name="ScrapeInterval">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="EvaluationInterval">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Labels">
            <type type="ident" def="LabelPairs"/>
          </field>
          <field type="slice" name="RuleFile">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TargetGroup">
          <field type="slice" name="Target">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Labels">
            <type type="ident" def="LabelPairs"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="JobConfig">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ScrapeInterval">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ScrapeTimeout">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="SdName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="SdRefreshInterval">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="TargetGroup">
            <elmtype type="pointer">
              <type type="ident" def="TargetGroup"/>
            </elmtype>
          </field>
          <field type="pointer" name="MetricsPath">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PrometheusConfig">
          <field type="pointer" name="Global">
            <type type="ident" def="GlobalConfig"/>
          </field>
          <field type="slice" name="Job">
            <elmtype type="pointer">
              <type type="ident" def="JobConfig"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPair"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LabelPairs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LabelPair"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetScrapeInterval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEvaluationInterval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetLabels">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LabelPairs"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRuleFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLabels">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TargetGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LabelPairs"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetScrapeInterval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetScrapeTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSdName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSdRefreshInterval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTargetGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TargetGroup"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricsPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JobConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGlobal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GlobalConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="GetJob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PrometheusConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="JobConfig"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Default_GlobalConfig_ScrapeInterval"/>
        <name value="Default_GlobalConfig_EvaluationInterval"/>
        <name value="Default_JobConfig_ScrapeTimeout"/>
        <name value="Default_JobConfig_SdRefreshInterval"/>
        <name value="Default_JobConfig_MetricsPath"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/stats">
      <types>
        <type type="struct" name="Timer">
          <field type="selector" name="name">
            <prefix value="fmt"/>
            <item value="Stringer"/>
          </field>
          <field type="selector" name="created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="start">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="duration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="TimerGroup">
          <field type="map" name="timers">
            <keytype type="selector">
              <prefix value="fmt"/>
              <item value="Stringer"/>
            </keytype>
            <valtype type="pointer">
              <type type="ident" def="Timer"/>
            </valtype>
          </field>
          <field type="pointer" name="child">
            <type type="ident" def="TimerGroup"/>
          </field>
        </type>
        <type name="Timers" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Timer"/>
          </elmtype>
        </type>
        <type name="QueryTiming" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ElapsedTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewTimerGroup">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TimerGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTimer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TimerGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="fmt"/>
              <item value="Stringer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Timer"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="Timers"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="Timers"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byCreationTimeSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TimerGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="QueryTiming"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="TotalEvalTime"/>
        <name value="ResultSortTime"/>
        <name value="JSONEncodeTime"/>
        <name value="PreloadTime"/>
        <name value="TotalQueryPreparationTime"/>
        <name value="InnerViewBuildingTime"/>
        <name value="InnerEvalTime"/>
        <name value="ResultAppendTime"/>
        <name value="QueryAnalysisTime"/>
        <name value="GetValueAtTimeTime"/>
        <name value="GetBoundaryValuesTime"/>
        <name value="GetRangeValuesTime"/>
        <name value="ExecQueueTime"/>
        <name value="ViewDiskPreparationTime"/>
        <name value="ViewDataExtractionTime"/>
        <name value="ViewDiskExtractionTime"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/storage/local">
      <types>
        <type name="SyncStrategy" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="MemorySeriesStorageOptions">
          <field type="ident" def="int" name="MemoryChunks"/>
          <field type="ident" def="int" name="MaxChunksToPersist"/>
          <field type="ident" def="string" name="PersistenceStoragePath"/>
          <field type="selector" name="PersistenceRetentionPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="CheckpointInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="CheckpointDirtySeriesLimit"/>
          <field type="ident" def="bool" name="Dirty"/>
          <field type="ident" def="bool" name="PedanticChecks"/>
          <field type="ident" def="SyncStrategy" name="SyncStrategy"/>
        </type>
        <type name="Storage" type="interface">
          <method name="Append">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="clientmodel"/>
                  <item value="Sample"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="NewPreloader">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Preloader"/>
            </resultsList>
          </method>
          <method name="GetFingerprintsForLabelMatchers">
            <paramsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="LabelMatchers"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Fingerprints"/>
              </type>
            </resultsList>
          </method>
          <method name="GetLabelValuesForLabelName">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="LabelName"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="LabelValues"/>
              </type>
            </resultsList>
          </method>
          <method name="GetMetricForFingerprint">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Fingerprint"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="COWMetric"/>
              </type>
            </resultsList>
          </method>
          <method name="NewIterator">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Fingerprint"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="SeriesIterator"/>
            </resultsList>
          </method>
          <method name="Start">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WaitForIndexing">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="SeriesIterator" type="interface">
          <method name="GetValueAtTime">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="Values"/>
              </type>
            </resultsList>
          </method>
          <method name="GetBoundaryValues">
            <paramsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="Interval"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="Values"/>
              </type>
            </resultsList>
          </method>
          <method name="GetRangeValues">
            <paramsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="Interval"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="metric"/>
                <item value="Values"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="Preloader" type="interface">
          <method name="PreloadRange">
            <paramsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Fingerprint"/>
              </type>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="testStorageCloser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewTestStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="test"/>
              <item value="T"/>
            </type>
            <type type="ident" def="chunkEncoding"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
            <type type="selector">
              <prefix value="test"/>
              <item value="Closer"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMemorySeriesStorage">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="MemorySeriesStorageOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Storage"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WaitForIndexing">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewIterator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="SeriesIterator"/>
          </resultsList>
        </function>
        <function name="NewPreloader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Preloader"/>
          </resultsList>
        </function>
        <function name="GetFingerprintsForLabelMatchers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="LabelMatchers"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprints"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLabelValuesForLabelName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelName"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="LabelValues"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricForFingerprint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="COWMetric"/>
            </type>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Sample"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="prometheus"/>
                  <item value="Desc"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="selector">
                <prefix value="prometheus"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetValueAtTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesIterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBoundaryValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesIterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Interval"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRangeValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesIterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Interval"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValueAtTime">
          <recvList>
            <type type="ident" def="nopSeriesIterator"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBoundaryValues">
          <recvList>
            <type type="ident" def="nopSeriesIterator"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Interval"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRangeValues">
          <recvList>
            <type type="ident" def="nopSeriesIterator"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Interval"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="metric"/>
              <item value="Values"/>
            </type>
          </resultsList>
        </function>
        <function name="PreloadRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesPreloader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memorySeriesPreloader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistence"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="prometheus"/>
                  <item value="Desc"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistence"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="selector">
                <prefix value="prometheus"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Lock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fingerprintLocker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fingerprintLocker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Never"/>
        <name value="Always"/>
        <name value="Adaptive"/>
        <name value="Version"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/prometheus/web/api">
      <types>
        <type type="struct" name="MetricsService">
          <field type="func" name="Now">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="clientmodel"/>
                <item value="Timestamp"/>
              </type>
            </resultsList>
          </field>
          <field type="selector" name="Storage">
            <prefix value="local"/>
            <item value="Storage"/>
          </field>
          <field type="pointer" name="QueryEngine">
            <type type="selector">
              <prefix value="promql"/>
              <item value="Engine"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="Query">
          <recvList>
            <type type="ident" def="MetricsService"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="QueryRange">
          <recvList>
            <type type="ident" def="MetricsService"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Metrics">
          <recvList>
            <type type="ident" def="MetricsService"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisterHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricsService"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/prometheus/promql">
      <types>
        <type type="struct" name="ParseErr">
          <field type="ident" def="int" name="Line"/>
          <field type="ident" def="int" name="Pos"/>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type name="Pos" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Function">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="ArgTypes">
            <elmtype type="ident" def="ExprType"/>
          </field>
          <field type="ident" def="int" name="OptionalArgs"/>
          <field type="ident" def="ExprType" name="ReturnType"/>
          <field type="func" name="Call">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="evaluator"/>
              </type>
              <type type="ident" def="Expressions"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Value"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="SampleStream">
          <field type="selector" name="Metric">
            <prefix value="clientmodel"/>
            <item value="COWMetric"/>
          </field>
          <field type="selector" name="Values">
            <prefix value="metric"/>
            <item value="Values"/>
          </field>
        </type>
        <type type="struct" name="Sample">
          <field type="selector" name="Metric">
            <prefix value="clientmodel"/>
            <item value="COWMetric"/>
          </field>
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
          <field type="selector" name="Timestamp">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
        </type>
        <type type="struct" name="Scalar">
          <field type="selector" name="Value">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
          <field type="selector" name="Timestamp">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
        </type>
        <type type="struct" name="String">
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="Timestamp">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
        </type>
        <type name="Vector" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Sample"/>
          </elmtype>
        </type>
        <type name="Matrix" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="SampleStream"/>
          </elmtype>
        </type>
        <type name="Value" type="interface">
          <method name="Type">
            <paramsList/>
            <resultsList>
              <type type="ident" def="ExprType"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Result">
          <field type="ident" def="error" name="Err"/>
          <field type="ident" def="Value" name="Value"/>
        </type>
        <type name="ErrQueryTimeout" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ErrQueryCanceled" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Query" type="interface">
          <method name="Exec">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Result"/>
              </type>
            </resultsList>
          </method>
          <method name="Statements">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Statements"/>
            </resultsList>
          </method>
          <method name="Stats">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="stats"/>
                  <item value="TimerGroup"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Cancel">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Engine">
          <field type="selector" name="storage">
            <prefix value="local"/>
            <item value="Storage"/>
          </field>
          <field type="selector" name="baseCtx">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="func" name="cancelQueries">
            <paramsList/>
            <resultsList/>
          </field>
          <field type="pointer" name="gate">
            <type type="ident" def="queryGate"/>
          </field>
        </type>
        <type name="Node" type="interface">
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="DotGraph">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Statement" type="interface">
          <method name="stmt">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Statements" type="slice">
          <elmtype type="ident" def="Statement"/>
        </type>
        <type type="struct" name="AlertStmt">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Expr" name="Expr"/>
          <field type="selector" name="Duration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
          <field type="ident" def="string" name="Summary"/>
          <field type="ident" def="string" name="Description"/>
        </type>
        <type type="struct" name="EvalStmt">
          <field type="ident" def="Expr" name="Expr"/>
          <field type="selector" name="Start">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="End">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="Interval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="RecordStmt">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Expr" name="Expr"/>
          <field type="selector" name="Labels">
            <prefix value="clientmodel"/>
            <item value="LabelSet"/>
          </field>
        </type>
        <type name="ExprType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Expr" type="interface">
          <method name="Type">
            <paramsList/>
            <resultsList>
              <type type="ident" def="ExprType"/>
            </resultsList>
          </method>
          <method name="expr">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Expressions" type="slice">
          <elmtype type="ident" def="Expr"/>
        </type>
        <type type="struct" name="AggregateExpr">
          <field type="ident" def="itemType" name="Op"/>
          <field type="ident" def="Expr" name="Expr"/>
          <field type="selector" name="Grouping">
            <prefix value="clientmodel"/>
            <item value="LabelNames"/>
          </field>
          <field type="ident" def="bool" name="KeepExtraLabels"/>
        </type>
        <type type="struct" name="BinaryExpr">
          <field type="ident" def="itemType" name="Op"/>
          <field type="ident" def="Expr" name="LHS"/>
          <field type="ident" def="Expr" name="RHS"/>
          <field type="pointer" name="VectorMatching">
            <type type="ident" def="VectorMatching"/>
          </field>
        </type>
        <type type="struct" name="Call">
          <field type="pointer" name="Func">
            <type type="ident" def="Function"/>
          </field>
          <field type="ident" def="Expressions" name="Args"/>
        </type>
        <type type="struct" name="MatrixSelector">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Range">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Offset">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="LabelMatchers">
            <prefix value="metric"/>
            <item value="LabelMatchers"/>
          </field>
          <field type="map" name="iterators">
            <keytype type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </keytype>
            <valtype type="selector">
              <prefix value="local"/>
              <item value="SeriesIterator"/>
            </valtype>
          </field>
          <field type="map" name="metrics">
            <keytype type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </keytype>
            <valtype type="selector">
              <prefix value="clientmodel"/>
              <item value="COWMetric"/>
            </valtype>
          </field>
          <field type="selector" name="fingerprints">
            <prefix value="clientmodel"/>
            <item value="Fingerprints"/>
          </field>
        </type>
        <type type="struct" name="NumberLiteral">
          <field type="selector" name="Val">
            <prefix value="clientmodel"/>
            <item value="SampleValue"/>
          </field>
        </type>
        <type type="struct" name="ParenExpr">
          <field type="ident" def="Expr" name="Expr"/>
        </type>
        <type type="struct" name="StringLiteral">
          <field type="ident" def="string" name="Val"/>
        </type>
        <type type="struct" name="UnaryExpr">
          <field type="ident" def="itemType" name="Op"/>
          <field type="ident" def="Expr" name="Expr"/>
        </type>
        <type type="struct" name="VectorSelector">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Offset">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="LabelMatchers">
            <prefix value="metric"/>
            <item value="LabelMatchers"/>
          </field>
          <field type="map" name="iterators">
            <keytype type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </keytype>
            <valtype type="selector">
              <prefix value="local"/>
              <item value="SeriesIterator"/>
            </valtype>
          </field>
          <field type="map" name="metrics">
            <keytype type="selector">
              <prefix value="clientmodel"/>
              <item value="Fingerprint"/>
            </keytype>
            <valtype type="selector">
              <prefix value="clientmodel"/>
              <item value="COWMetric"/>
            </valtype>
          </field>
          <field type="selector" name="fingerprints">
            <prefix value="clientmodel"/>
            <item value="Fingerprints"/>
          </field>
        </type>
        <type name="VectorMatchCardinality" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="VectorMatching">
          <field type="ident" def="VectorMatchCardinality" name="Card"/>
          <field type="selector" name="On">
            <prefix value="clientmodel"/>
            <item value="LabelNames"/>
          </field>
          <field type="selector" name="Include">
            <prefix value="clientmodel"/>
            <item value="LabelNames"/>
          </field>
        </type>
        <type name="Visitor" type="interface">
          <method name="Visit">
            <paramsList>
              <type type="ident" def="Node"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Visitor"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Analyzer">
          <field type="selector" name="Storage">
            <prefix value="local"/>
            <item value="Storage"/>
          </field>
          <field type="ident" def="Expr" name="Expr"/>
          <field type="selector" name="Start">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="selector" name="End">
            <prefix value="clientmodel"/>
            <item value="Timestamp"/>
          </field>
          <field type="map" name="offsetPreloadTimes">
            <keytype type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </keytype>
            <valtype type="ident" def="preloadTimes"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Len">
          <recvList>
            <type type="ident" def="buckets"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="buckets"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="buckets"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Matrix"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Vector"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Tree">
          <recvList/>
          <paramsList>
            <type type="ident" def="Node"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Statements"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EvalStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RecordStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Expressions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregateExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BinaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MatrixSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NumberLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParenExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VectorSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="ident" def="Statements"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AlertStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EvalStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RecordStmt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="ident" def="Expressions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregateExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BinaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NumberLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParenExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MatrixSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VectorSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParseErr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseStmts">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Statements"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseExpr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Expr"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="item"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="itemType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="vectorByValueHeap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="vectorByValueHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="vectorByValueHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="vectorByValueHeap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="vectorByValueHeap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="reverseHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scalar"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="String"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="Matrix"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="Matrix"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="Matrix"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Vector">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Vector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Matrix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Matrix"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Scalar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scalar"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ErrQueryTimeout"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ErrQueryCanceled"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Statements">
          <recvList>
            <type type="pointer">
              <type type="ident" def="query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Statements"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="stats"/>
                <item value="TimerGroup"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Cancel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </resultsList>
        </function>
        <function name="NewEngine">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="local"/>
              <item value="Storage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewInstantQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Query"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRangeQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="selector">
              <prefix value="clientmodel"/>
              <item value="Timestamp"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Query"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DotGraph">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Eval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="evaluator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Expr"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Value"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="queryGate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Done">
          <recvList>
            <type type="pointer">
              <type type="ident" def="queryGate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ExprType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregateExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MatrixSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NumberLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParenExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringLiteral"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VectorSelector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BinaryExpr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExprType"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="VectorMatchCardinality"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Walk">
          <recvList/>
          <paramsList>
            <type type="ident" def="Visitor"/>
            <type type="ident" def="Node"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Visit">
          <recvList>
            <type type="ident" def="inspector"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Node"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Visitor"/>
          </resultsList>
        </function>
        <function name="Inspect">
          <recvList/>
          <paramsList>
            <type type="ident" def="Node"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="Node"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Analyze">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Analyzer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Prepare">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Analyzer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="local"/>
              <item value="Preloader"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="LowestPrec"/>
        <name value="ExprNone"/>
        <name value="ExprScalar"/>
        <name value="ExprVector"/>
        <name value="ExprMatrix"/>
        <name value="ExprString"/>
        <name value="CardOneToOne"/>
        <name value="CardManyToOne"/>
        <name value="CardOneToMany"/>
        <name value="CardManyToMany"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="flag"/>
    <import path="fmt"/>
    <import path="net/http/pprof"/>
    <import path="os"/>
    <import path="os/signal"/>
    <import path="sort"/>
    <import path="strings"/>
    <import path="sync"/>
    <import path="syscall"/>
    <import path="time"/>
    <import path="github.com/golang/glog"/>
    <import path="github.com/prometheus/client_golang/model"/>
    <import path="github.com/prometheus/client_golang/prometheus"/>
    <import path="github.com/prometheus/prometheus/config"/>
    <import path="github.com/prometheus/prometheus/notification"/>
    <import path="github.com/prometheus/prometheus/promql"/>
    <import path="github.com/prometheus/prometheus/retrieval"/>
    <import path="github.com/prometheus/prometheus/rules"/>
    <import path="github.com/prometheus/prometheus/storage"/>
    <import path="github.com/prometheus/prometheus/storage/local"/>
    <import path="github.com/prometheus/prometheus/storage/remote"/>
    <import path="github.com/prometheus/prometheus/storage/remote/influxdb"/>
    <import path="github.com/prometheus/prometheus/storage/remote/opentsdb"/>
    <import path="github.com/prometheus/prometheus/web"/>
    <import path="github.com/prometheus/prometheus/web/api"/>
    <import path="text/template"/>
    <import path="html/template"/>
    <import path="io/ioutil"/>
    <import path="net"/>
    <import path="net/http"/>
    <import path="runtime/pprof"/>
    <import path="github.com/prometheus/prometheus/web/blob"/>
    <import path="io"/>
    <import path="net/url"/>
    <import path="path/filepath"/>
    <import path="github.com/prometheus/prometheus/templates"/>
    <import path="encoding/json"/>
    <import path="compress/gzip"/>
    <import path="compress/zlib"/>
    <import path="bytes"/>
    <import path="testing"/>
    <import path="errors"/>
    <import path="strconv"/>
    <import path="github.com/prometheus/prometheus/web/httputils"/>
    <import path="net/http/httptest"/>
    <import path="regexp"/>
    <import path="testing/quick"/>
    <import path="math"/>
    <import path="github.com/prometheus/prometheus/utility"/>
    <import path="reflect"/>
    <import path="github.com/prometheus/prometheus/utility/test"/>
    <import path="math/rand"/>
    <import path="github.com/prometheus/prometheus/storage/metric"/>
    <import path="container/list"/>
    <import path="sync/atomic"/>
    <import path="github.com/prometheus/prometheus/storage/local/codable"/>
    <import path="github.com/prometheus/prometheus/storage/local/index"/>
    <import path="bufio"/>
    <import path="encoding/binary"/>
    <import path="path"/>
    <import path="github.com/prometheus/prometheus/storage/local/flock"/>
    <import path="encoding"/>
    <import path="github.com/syndtr/goleveldb/leveldb"/>
    <import path="github.com/syndtr/goleveldb/leveldb/filter"/>
    <import path="github.com/syndtr/goleveldb/leveldb/iterator"/>
    <import path="github.com/syndtr/goleveldb/leveldb/opt"/>
    <import path="github.com/syndtr/goleveldb/leveldb/util"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="github.com/prometheus/prometheus/config/generated"/>
    <import path="github.com/miekg/dns"/>
    <import path="github.com/prometheus/client_golang/extraction"/>
    <import path="runtime"/>
    <import path="unicode"/>
    <import path="unicode/utf8"/>
    <import path="container/heap"/>
    <import path="golang.org/x/net/context"/>
    <import path="github.com/prometheus/prometheus/stats"/>
  </imports>
</project>
