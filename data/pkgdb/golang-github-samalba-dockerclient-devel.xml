<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-samalba-dockerclient-0-0.1.gitc37a52f.fc23">
  <packages>
    <package importpath="github.com/samalba/dockerclient">
      <types>
        <type type="struct" name="ContainerConfig">
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="Domainname"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CpuShares"/>
          <field type="ident" def="string" name="Cpuset"/>
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="slice" name="PortSpecs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="ExposedPorts">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="bool" name="OpenStdin"/>
          <field type="ident" def="bool" name="StdinOnce"/>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Image"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Entrypoint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="NetworkDisabled"/>
          <field type="slice" name="OnBuild">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="HostConfig" name="HostConfig"/>
        </type>
        <type type="struct" name="HostConfig">
          <field type="slice" name="Binds">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ContainerIDFile"/>
          <field type="slice" name="LxcConf">
            <elmtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="map" name="PortBindings">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="PortBinding"/>
            </valtype>
          </field>
          <field type="slice" name="Links">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="PublishAllPorts"/>
          <field type="slice" name="Dns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DnsSearch">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="VolumesFrom">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="SecurityOpt">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="NetworkMode"/>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
        </type>
        <type type="struct" name="ExecConfig">
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Detach"/>
        </type>
        <type type="struct" name="LogOptions">
          <field type="ident" def="bool" name="Follow"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="Timestamps"/>
          <field type="ident" def="int64" name="Tail"/>
        </type>
        <type type="struct" name="RestartPolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int64" name="MaximumRetryCount"/>
        </type>
        <type type="struct" name="PortBinding">
          <field type="ident" def="string" name="HostIp"/>
          <field type="ident" def="string" name="HostPort"/>
        </type>
        <type type="struct" name="ContainerInfo">
          <field type="ident" def="string" name="Id"/>
          <field type="ident" def="string" name="Created"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ExecIDs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Config">
            <type type="ident" def="ContainerConfig"/>
          </field>
          <field type="struct" name="State">
            <field type="ident" def="bool" name="Running"/>
            <field type="ident" def="bool" name="Paused"/>
            <field type="ident" def="bool" name="Restarting"/>
            <field type="ident" def="int" name="Pid"/>
            <field type="ident" def="int" name="ExitCode"/>
            <field type="selector" name="StartedAt">
              <prefix value="time"/>
              <item value="Time"/>
            </field>
            <field type="selector" name="FinishedAt">
              <prefix value="time"/>
              <item value="Time"/>
            </field>
            <field type="ident" def="bool" name="Ghost"/>
          </field>
          <field type="ident" def="string" name="Image"/>
          <field type="struct" name="NetworkSettings">
            <field type="ident" def="string" name="IPAddress"/>
            <field type="ident" def="int" name="IPPrefixLen"/>
            <field type="ident" def="string" name="Gateway"/>
            <field type="ident" def="string" name="Bridge"/>
            <field type="map" name="Ports">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="PortBinding"/>
              </valtype>
            </field>
          </field>
          <field type="ident" def="string" name="SysInitPath"/>
          <field type="ident" def="string" name="ResolvConfPath"/>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="HostConfig">
            <type type="ident" def="HostConfig"/>
          </field>
        </type>
        <type type="struct" name="ContainerChanges">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="int" name="Kind"/>
        </type>
        <type type="struct" name="Port">
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="int" name="PrivatePort"/>
          <field type="ident" def="int" name="PublicPort"/>
          <field type="ident" def="string" name="Type"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Id"/>
          <field type="slice" name="Names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="Command"/>
          <field type="ident" def="int64" name="Created"/>
          <field type="ident" def="string" name="Status"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="Port"/>
          </field>
          <field type="ident" def="int64" name="SizeRw"/>
          <field type="ident" def="int64" name="SizeRootFs"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="string" name="Id"/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="From"/>
          <field type="ident" def="int64" name="Time"/>
        </type>
        <type type="struct" name="Version">
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="GitCommit"/>
          <field type="ident" def="string" name="GoVersion"/>
        </type>
        <type type="struct" name="RespContainersCreate">
          <field type="ident" def="string" name="Id"/>
          <field type="slice" name="Warnings">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Image">
          <field type="ident" def="int64" name="Created"/>
          <field type="ident" def="string" name="Id"/>
          <field type="ident" def="string" name="ParentId"/>
          <field type="slice" name="RepoTags">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="int64" name="VirtualSize"/>
        </type>
        <type type="struct" name="Info">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="int64" name="Containers"/>
          <field type="ident" def="string" name="Driver"/>
          <field type="slice" name="DriverStatus">
            <elmtype type="slice">
              <elmtype type="ident" def="string"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="ExecutionDriver"/>
          <field type="ident" def="int64" name="Images"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OperatingSystem"/>
          <field type="ident" def="int64" name="NCPU"/>
          <field type="ident" def="int64" name="MemTotal"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ImageDelete">
          <field type="ident" def="string" name="Deleted"/>
          <field type="ident" def="string" name="Untagged"/>
        </type>
        <type type="struct" name="ThrottlingData">
          <field type="ident" def="uint64" name="Periods"/>
          <field type="ident" def="uint64" name="ThrottledPeriods"/>
          <field type="ident" def="uint64" name="ThrottledTime"/>
        </type>
        <type type="struct" name="CpuUsage">
          <field type="ident" def="uint64" name="TotalUsage"/>
          <field type="slice" name="PercpuUsage">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="UsageInKernelmode"/>
          <field type="ident" def="uint64" name="UsageInUsermode"/>
        </type>
        <type type="struct" name="CpuStats">
          <field type="ident" def="CpuUsage" name="CpuUsage"/>
          <field type="ident" def="uint64" name="SystemUsage"/>
          <field type="ident" def="ThrottlingData" name="ThrottlingData"/>
        </type>
        <type type="struct" name="NetworkStats">
          <field type="ident" def="uint64" name="RxBytes"/>
          <field type="ident" def="uint64" name="RxPackets"/>
          <field type="ident" def="uint64" name="RxErrors"/>
          <field type="ident" def="uint64" name="RxDropped"/>
          <field type="ident" def="uint64" name="TxBytes"/>
          <field type="ident" def="uint64" name="TxPackets"/>
          <field type="ident" def="uint64" name="TxErrors"/>
          <field type="ident" def="uint64" name="TxDropped"/>
        </type>
        <type type="struct" name="MemoryStats">
          <field type="ident" def="uint64" name="Usage"/>
          <field type="ident" def="uint64" name="MaxUsage"/>
          <field type="map" name="Stats">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="Failcnt"/>
          <field type="ident" def="uint64" name="Limit"/>
        </type>
        <type type="struct" name="BlkioStatEntry">
          <field type="ident" def="uint64" name="Major"/>
          <field type="ident" def="uint64" name="Minor"/>
          <field type="ident" def="string" name="Op"/>
          <field type="ident" def="uint64" name="Value"/>
        </type>
        <type type="struct" name="BlkioStats">
          <field type="slice" name="IoServiceBytesRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServicedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoQueuedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServiceTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoWaitTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoMergedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="SectorsRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
        </type>
        <type type="struct" name="Stats">
          <field type="selector" name="Read">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="NetworkStats" name="NetworkStats"/>
          <field type="ident" def="CpuStats" name="CpuStats"/>
          <field type="ident" def="MemoryStats" name="MemoryStats"/>
          <field type="ident" def="BlkioStats" name="BlkioStats"/>
        </type>
        <type name="Callback" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </type>
        <type name="StatCallback" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Stats"/>
            </type>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </type>
        <type name="Client" type="interface">
          <method name="Info">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Info"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListContainers">
            <paramsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Container"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="InspectContainer">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="ContainerInfo"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateContainer">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="ContainerConfig"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ContainerLogs">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="LogOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadCloser"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ContainerChanges">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="ContainerChanges"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Exec">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="ExecConfig"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StartContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="HostConfig"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StopContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RestartContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="KillContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StartMonitorEvents">
            <paramsList>
              <type type="ident" def="Callback"/>
              <type type="channel" dir="3">
                <type type="ident" def="error"/>
              </type>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="StopAllMonitorEvents">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="StartMonitorStats">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="StatCallback"/>
              <type type="channel" dir="3">
                <type type="ident" def="error"/>
              </type>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="StopAllMonitorStats">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Version"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PullImage">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="AuthConfig"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="LoadImage">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListImages">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="Image"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveImage">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="ImageDelete"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PauseContainer">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UnpauseContainer">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="DockerClient">
          <field type="pointer" name="URL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="pointer" name="HTTPClient">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="pointer" name="TLSConfig">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="int32" name="monitorEvents"/>
          <field type="ident" def="int32" name="monitorStats"/>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="StatusCode"/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="msg"/>
        </type>
        <type type="struct" name="AuthConfig">
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="Email"/>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewDockerClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDockerClientTimeout">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Container"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ContainerInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ContainerConfig"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="LogOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ContainerChanges"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="HostConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StopContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RestartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartMonitorEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Callback"/>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StopAllMonitorEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="StartMonitorStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="StatCallback"/>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StopAllMonitorStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Version"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="AuthConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Image"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ImageDelete"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnpauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ExecConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="APIVersion"/>
        <name value="ErrNotFound"/>
      </names>
    </package>
    <package importpath="github.com/samalba/dockerclient/mockclient">
      <types>
        <type type="struct" name="MockClient">
          <field type="selector" name="">
            <prefix value="mock"/>
            <item value="Mock"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewMockClient">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </resultsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="Info"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="dockerclient"/>
                <item value="Container"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="ContainerConfig"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="LogOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="dockerclient"/>
                  <item value="ContainerChanges"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StopContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RestartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartMonitorEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="dockerclient"/>
              <item value="Callback"/>
            </type>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StopAllMonitorEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="StartMonitorStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="dockerclient"/>
              <item value="StatCallback"/>
            </type>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StopAllMonitorStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="Version"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="AuthConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="dockerclient"/>
                  <item value="Image"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="dockerclient"/>
                  <item value="ImageDelete"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnpauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dockerclient"/>
                <item value="ExecConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="crypto/tls"/>
    <import path="net"/>
    <import path="net/http"/>
    <import path="net/url"/>
    <import path="time"/>
    <import path="io"/>
    <import path="encoding/json"/>
    <import path="fmt"/>
    <import path="log"/>
    <import path="net/http/httptest"/>
    <import path="strconv"/>
    <import path="github.com/docker/docker/pkg/jsonlog"/>
    <import path="github.com/docker/docker/pkg/stdcopy"/>
    <import path="github.com/docker/docker/pkg/timeutils"/>
    <import path="github.com/docker/docker/utils"/>
    <import path="github.com/gorilla/mux"/>
    <import path="bytes"/>
    <import path="reflect"/>
    <import path="strings"/>
    <import path="testing"/>
    <import path="errors"/>
    <import path="io/ioutil"/>
    <import path="sync/atomic"/>
    <import path="encoding/base64"/>
    <import path="github.com/samalba/dockerclient"/>
    <import path="github.com/stretchr/testify/mock"/>
    <import path="os"/>
    <import path="os/signal"/>
    <import path="syscall"/>
  </imports>
</project>
