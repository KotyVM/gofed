<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-appc-spec-0.3.0-2.gitfa6d3af.fc23">
  <packages>
    <package importpath="github.com/appc/spec/aci">
      <types>
        <type name="ArchiveWriter" type="interface">
          <method name="AddFile">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="tar"/>
                  <item value="Header"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="FileType" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="NewImageWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="schema"/>
              <item value="ImageManifest"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="tar"/>
                <item value="Writer"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="ArchiveWriter"/>
          </returnsList>
        </function>
        <function name="AddFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="imageArchiveWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tar"/>
                <item value="Header"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="imageArchiveWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateLayout">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateArchive">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tar"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DetectFileType">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="FileType"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="XzReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="ManifestFromImage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadSeeker"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="schema"/>
                <item value="ImageManifest"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewCompressedTarReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadSeeker"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tar"/>
                <item value="Reader"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewCompressedReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadSeeker"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildWalker">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ArchiveWriter"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="filepath"/>
              <item value="WalkFunc"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ManifestFile"/>
        <name value="RootfsDir"/>
        <name value="ErrNoRootFS"/>
        <name value="ErrNoManifest"/>
        <name value="TypeGzip"/>
        <name value="TypeBzip2"/>
        <name value="TypeXz"/>
        <name value="TypeTar"/>
        <name value="TypeText"/>
        <name value="TypeUnknown"/>
      </names>
    </package>
    <package importpath="github.com/appc/spec/pkg/tarheader">
      <types/>
      <functions>
        <function name="Populate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tar"/>
                <item value="Header"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="map">
              <keytype type="ident" def="uint64"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/appc/spec/discovery">
      <types>
        <type type="struct" name="App">
          <field type="selector" name="Name">
            <prefix value="types"/>
            <item value="ACName"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ACIEndpoint">
          <field type="ident" def="string" name="ACI"/>
          <field type="ident" def="string" name="ASC"/>
        </type>
        <type type="struct" name="Endpoints">
          <field type="slice" name="ACIEndpoints">
            <elmtype type="ident" def="ACIEndpoint"/>
          </field>
          <field type="slice" name="Keys">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="DiscoverWalkFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Endpoints"/>
            </type>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="FailedAttempt">
          <field type="ident" def="string" name="Prefix"/>
          <field type="ident" def="error" name="Error"/>
        </type>
      </types>
      <functions>
        <function name="NewApp">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="App"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewAppFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="App"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Endpoints"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DiscoverWalk">
          <recvList/>
          <paramsList>
            <type type="ident" def="App"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="DiscoverWalkFunc"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DiscoverEndpoints">
          <recvList/>
          <paramsList>
            <type type="ident" def="App"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Endpoints"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="FailedAttempt"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DiscoverPublicKeys">
          <recvList/>
          <paramsList>
            <type type="ident" def="App"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Endpoints"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="FailedAttempt"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/appc/spec/schema/types">
      <types>
        <type type="struct" name="Volume">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type name="UUID" type="array">
          <elmtype type="ident" def="byte"/>
        </type>
        <type name="URL" type="selector">
          <prefix value="url"/>
          <item value="URL"/>
        </type>
        <type name="SemVer" type="selector">
          <prefix value="semver"/>
          <item value="Version"/>
        </type>
        <type type="struct" name="Port">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Protocol"/>
          <field type="ident" def="uint" name="Port"/>
          <field type="ident" def="bool" name="SocketActivated"/>
        </type>
        <type type="struct" name="MountPoint">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type name="Labels" type="slice">
          <elmtype type="ident" def="Label"/>
        </type>
        <type type="struct" name="Label">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type type="struct" name="Isolator">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Val"/>
        </type>
        <type type="struct" name="Hash">
          <field type="ident" def="string" name="typ"/>
          <field type="ident" def="string" name="Val"/>
        </type>
        <type name="Exec" type="slice">
          <elmtype type="ident" def="string"/>
        </type>
        <type type="struct" name="EventHandler">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Exec" name="Exec"/>
        </type>
        <type name="ACKindError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ACVersionError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ACNameError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="AMStartedOnError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Environment" type="slice">
          <elmtype type="ident" def="EnvironmentVariable"/>
        </type>
        <type type="struct" name="EnvironmentVariable">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type name="Dependencies" type="slice">
          <elmtype type="ident" def="Dependency"/>
        </type>
        <type type="struct" name="Dependency">
          <field type="ident" def="ACName" name="App"/>
          <field type="pointer" name="ImageID">
            <type type="ident" def="Hash"/>
          </field>
          <field type="ident" def="Labels" name="Labels"/>
        </type>
        <type name="Date" type="selector">
          <prefix value="time"/>
          <item value="Time"/>
        </type>
        <type type="struct" name="App">
          <field type="ident" def="Exec" name="Exec"/>
          <field type="slice" name="EventHandlers">
            <elmtype type="ident" def="EventHandler"/>
          </field>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Group"/>
          <field type="ident" def="string" name="WorkingDirectory"/>
          <field type="ident" def="Environment" name="Environment"/>
          <field type="slice" name="MountPoints">
            <elmtype type="ident" def="MountPoint"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="Port"/>
          </field>
          <field type="slice" name="Isolators">
            <elmtype type="ident" def="Isolator"/>
          </field>
        </type>
        <type name="Annotations" type="slice">
          <elmtype type="ident" def="Annotation"/>
        </type>
        <type type="struct" name="Annotation">
          <field type="ident" def="ACName" name="Name"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type name="ACName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ACKind" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Volume"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Volume"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="VolumeFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="UUID"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UUID"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewUUID">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UUID"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="UUID"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UUID"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="UUID"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URL"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URL"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="URL"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewSemVer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SemVer"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SemVer"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="SemVer"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SemVer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="SemVer"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Labels"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Labels"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Labels"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewHash">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Hash"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Hash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Hash"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="Hash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Hash"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Hash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHashSHA512">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Hash"/>
            </type>
          </returnsList>
        </function>
        <function name="ShortHash">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Exec"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Exec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="EventHandler"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ACKindError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="InvalidACKindError">
          <recvList/>
          <paramsList>
            <type type="ident" def="ACKind"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="ACKindError"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ACVersionError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ACNameError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="AMStartedOnError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Environment"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Environment"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Environment"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Environment"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Dependency"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Dependency"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDate">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Date"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Date"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Date"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Date"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="App"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="App"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Annotations"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Annotations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Annotations"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Annotations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ACName"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ACName"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ACName"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="ident" def="ACName"/>
          </recvList>
          <paramsList>
            <type type="ident" def="ACName"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="ACName"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewACName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ACName"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ACName"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ACName"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SanitizeACName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ACKind"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="ACKind"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ACKind"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoEmptyUUID"/>
        <name value="ErrNoZeroSemVer"/>
        <name value="ErrBadSemVer"/>
        <name value="ValidOSArch"/>
        <name value="ErrNoACKind"/>
      </names>
    </package>
    <package importpath="github.com/appc/spec/schema">
      <types>
        <type type="struct" name="Kind">
          <field type="selector" name="ACVersion">
            <prefix value="types"/>
            <item value="SemVer"/>
          </field>
          <field type="selector" name="ACKind">
            <prefix value="types"/>
            <item value="ACKind"/>
          </field>
        </type>
        <type type="struct" name="ImageManifest">
          <field type="selector" name="ACKind">
            <prefix value="types"/>
            <item value="ACKind"/>
          </field>
          <field type="selector" name="ACVersion">
            <prefix value="types"/>
            <item value="SemVer"/>
          </field>
          <field type="selector" name="Name">
            <prefix value="types"/>
            <item value="ACName"/>
          </field>
          <field type="selector" name="Labels">
            <prefix value="types"/>
            <item value="Labels"/>
          </field>
          <field type="pointer" name="App">
            <type type="selector">
              <prefix value="types"/>
              <item value="App"/>
            </type>
          </field>
          <field type="selector" name="Annotations">
            <prefix value="types"/>
            <item value="Annotations"/>
          </field>
          <field type="selector" name="Dependencies">
            <prefix value="types"/>
            <item value="Dependencies"/>
          </field>
          <field type="slice" name="PathWhitelist">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ContainerRuntimeManifest">
          <field type="selector" name="ACVersion">
            <prefix value="types"/>
            <item value="SemVer"/>
          </field>
          <field type="selector" name="ACKind">
            <prefix value="types"/>
            <item value="ACKind"/>
          </field>
          <field type="selector" name="UUID">
            <prefix value="types"/>
            <item value="UUID"/>
          </field>
          <field type="ident" def="AppList" name="Apps"/>
          <field type="slice" name="Volumes">
            <elmtype type="selector">
              <prefix value="types"/>
              <item value="Volume"/>
            </elmtype>
          </field>
          <field type="slice" name="Isolators">
            <elmtype type="selector">
              <prefix value="types"/>
              <item value="Isolator"/>
            </elmtype>
          </field>
          <field type="selector" name="Annotations">
            <prefix value="types"/>
            <item value="Annotations"/>
          </field>
        </type>
        <type name="AppList" type="slice">
          <elmtype type="ident" def="RuntimeApp"/>
        </type>
        <type type="struct" name="Mount">
          <field type="selector" name="Volume">
            <prefix value="types"/>
            <item value="ACName"/>
          </field>
          <field type="selector" name="MountPoint">
            <prefix value="types"/>
            <item value="ACName"/>
          </field>
        </type>
        <type type="struct" name="RuntimeApp">
          <field type="selector" name="Name">
            <prefix value="types"/>
            <item value="ACName"/>
          </field>
          <field type="selector" name="ImageID">
            <prefix value="types"/>
            <item value="Hash"/>
          </field>
          <field type="slice" name="Mounts">
            <elmtype type="ident" def="Mount"/>
          </field>
          <field type="slice" name="Isolators">
            <elmtype type="selector">
              <prefix value="types"/>
              <item value="Isolator"/>
            </elmtype>
          </field>
          <field type="selector" name="Annotations">
            <prefix value="types"/>
            <item value="Annotations"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kind"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Kind"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BlankImageManifest">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ImageManifest"/>
            </type>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageManifest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="ImageManifest"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageManifest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetAnnotation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageManifest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="BlankContainerRuntimeManifest">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ContainerRuntimeManifest"/>
            </type>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerRuntimeManifest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="ContainerRuntimeManifest"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="AppList"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ACName"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RuntimeApp"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="AppContainerVersion"/>
        <name value="ACIExtension"/>
        <name value="ImageManifestKind"/>
        <name value="ContainerRuntimeManifestKind"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="github.com/appc/spec/schema/types"/>
    <import path="encoding/json"/>
    <import path="testing"/>
    <import path="errors"/>
    <import path="reflect"/>
    <import path="fmt"/>
    <import path="net/url"/>
    <import path="path/filepath"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="encoding/hex"/>
    <import path="github.com/coreos/go-semver/semver"/>
    <import path="sort"/>
    <import path="crypto/sha512"/>
    <import path="regexp"/>
    <import path="time"/>
    <import path="path"/>
    <import path="archive/tar"/>
    <import path="os"/>
    <import path="syscall"/>
    <import path="bytes"/>
    <import path="io/ioutil"/>
    <import path="net/http"/>
    <import path="io"/>
    <import path="net"/>
    <import path="golang.org/x/net/html"/>
    <import path="golang.org/x/net/html/atom"/>
    <import path="github.com/appc/spec/schema"/>
    <import path="compress/bzip2"/>
    <import path="compress/gzip"/>
    <import path="github.com/appc/spec/aci"/>
    <import path="flag"/>
    <import path="text/template"/>
    <import path="runtime"/>
    <import path="github.com/appc/spec/discovery"/>
    <import path="text/tabwriter"/>
    <import path="log"/>
    <import path="os/exec"/>
    <import path="github.com/appc/spec/pkg/tarheader"/>
  </imports>
</project>
