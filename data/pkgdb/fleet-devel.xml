<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="fleet-0.9.0-4.fc22">
  <packages>
    <package importpath="github.com/coreos/fleet/schema">
      <types>
        <type type="struct" name="Service">
          <field type="pointer" name="client">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="ident" def="string" name="BasePath"/>
          <field type="pointer" name="Machines">
            <type type="ident" def="MachinesService"/>
          </field>
          <field type="pointer" name="UnitState">
            <type type="ident" def="UnitStateService"/>
          </field>
          <field type="pointer" name="Units">
            <type type="ident" def="UnitsService"/>
          </field>
        </type>
        <type type="struct" name="MachinesService">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="UnitStateService">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="UnitsService">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="Machine">
          <field type="ident" def="string" name="Id"/>
          <field type="map" name="Metadata">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PrimaryIP"/>
        </type>
        <type type="struct" name="MachinePage">
          <field type="slice" name="Machines">
            <elmtype type="pointer">
              <type type="ident" def="Machine"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="NextPageToken"/>
        </type>
        <type type="struct" name="Unit">
          <field type="ident" def="string" name="CurrentState"/>
          <field type="ident" def="string" name="DesiredState"/>
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Options">
            <elmtype type="pointer">
              <type type="ident" def="UnitOption"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="UnitOption">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Section"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type type="struct" name="UnitPage">
          <field type="ident" def="string" name="NextPageToken"/>
          <field type="slice" name="Units">
            <elmtype type="pointer">
              <type type="ident" def="Unit"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="UnitState">
          <field type="ident" def="string" name="Hash"/>
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="SystemdActiveState"/>
          <field type="ident" def="string" name="SystemdLoadState"/>
          <field type="ident" def="string" name="SystemdSubState"/>
        </type>
        <type type="struct" name="UnitStatePage">
          <field type="ident" def="string" name="NextPageToken"/>
          <field type="slice" name="States">
            <elmtype type="pointer">
              <type type="ident" def="UnitState"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="MachinesListCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="UnitStateListCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="UnitsDeleteCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="ident" def="string" name="unitName"/>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="UnitsGetCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="ident" def="string" name="unitName"/>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="UnitsListCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="UnitsSetCall">
          <field type="pointer" name="s">
            <type type="ident" def="Service"/>
          </field>
          <field type="ident" def="string" name="unitName"/>
          <field type="pointer" name="unit">
            <type type="ident" def="Unit"/>
          </field>
          <field type="map" name="opt_">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewMachinesService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MachinesService"/>
            </type>
          </returnsList>
        </function>
        <function name="NewUnitStateService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateService"/>
            </type>
          </returnsList>
        </function>
        <function name="NewUnitsService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsService"/>
            </type>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MachinesService"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MachinesListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="NextPageToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MachinesListCall"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MachinesListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MachinesListCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MachinePage"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateService"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="MachineID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="NextPageToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="UnitName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateListCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStatePage"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsService"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsDeleteCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsDeleteCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsService"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsGetCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsGetCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsService"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="NextPageToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsListCall"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsListCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsListCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitPage"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsService"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitsSetCall"/>
            </type>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitsSetCall"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MapUnitFileToSchemaUnitOptions">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitFile"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UnitOption"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitOptionsToUnitFile">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UnitOption"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitFile"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitToUnit">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="MapUnitToSchemaUnit">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitsToUnits">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Unit"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="MapMachineStateToSchema">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Machine"/>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaToMachineStates">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Machine"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="MapUnitStatesToSchemaUnitStates">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UnitState"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="MapUnitStateToSchemaUnitState">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitState"/>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitStatesToUnitStates">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UnitState"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitToScheduledUnit">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="MapSchemaUnitsToScheduledUnits">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Unit"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DiscoveryJSON"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/engine">
      <types>
        <type name="Scheduler" type="interface">
          <method name="Decide">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="clusterState"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="job"/>
                  <item value="Job"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="decision"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Reconciler">
          <field type="ident" def="Scheduler" name="sched"/>
        </type>
        <type type="struct" name="Engine">
          <field type="pointer" name="rec">
            <type type="ident" def="Reconciler"/>
          </field>
          <field type="selector" name="registry">
            <prefix value="registry"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="cRegistry">
            <prefix value="registry"/>
            <item value="ClusterRegistry"/>
          </field>
          <field type="selector" name="lRegistry">
            <prefix value="registry"/>
            <item value="LeaseRegistry"/>
          </field>
          <field type="selector" name="rStream">
            <prefix value="pkg"/>
            <item value="EventStream"/>
          </field>
          <field type="selector" name="machine">
            <prefix value="machine"/>
            <item value="Machine"/>
          </field>
          <field type="selector" name="lease">
            <prefix value="registry"/>
            <item value="Lease"/>
          </field>
          <field type="chan" dir="3" name="trigger">
            <type type="struct" name=""/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Decide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="leastLoadedScheduler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="clusterState"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="decision"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="sortableAgentStates"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="sortableAgentStates"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="sortableAgentStates"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewReconciler">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Reconciler"/>
            </type>
          </returnsList>
        </function>
        <function name="Reconcile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reconciler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
            <type type="chan" dir="3">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="registry"/>
                <item value="EtcdRegistry"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="pkg"/>
              <item value="EventStream"/>
            </type>
            <type type="selector">
              <prefix value="machine"/>
              <item value="Machine"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Trigger">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/agent">
      <types>
        <type type="struct" name="UnitStatePublisher">
          <field type="selector" name="mach">
            <prefix value="machine"/>
            <item value="Machine"/>
          </field>
          <field type="selector" name="ttl">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="map" name="cache">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="cacheMutex">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="chan" dir="3" name="toPublish">
            <type type="ident" def="string"/>
          </field>
          <field type="map" name="toPublishStates">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="toPublishMutex">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="ident" def="publishFunc" name="publisher"/>
          <field type="selector" name="clock">
            <prefix value="clockwork"/>
            <item value="Clock"/>
          </field>
        </type>
        <type type="struct" name="AgentState">
          <field type="pointer" name="MState">
            <type type="selector">
              <prefix value="machine"/>
              <item value="MachineState"/>
            </type>
          </field>
          <field type="map" name="Units">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </valtype>
          </field>
        </type>
        <type type="struct" name="AgentReconciler">
          <field type="selector" name="reg">
            <prefix value="registry"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="rStream">
            <prefix value="pkg"/>
            <item value="EventStream"/>
          </field>
          <field type="pointer" name="tManager">
            <type type="ident" def="taskManager"/>
          </field>
        </type>
        <type type="struct" name="Agent">
          <field type="selector" name="registry">
            <prefix value="registry"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="um">
            <prefix value="unit"/>
            <item value="UnitManager"/>
          </field>
          <field type="pointer" name="uGen">
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitStateGenerator"/>
            </type>
          </field>
          <field type="selector" name="Machine">
            <prefix value="machine"/>
            <item value="Machine"/>
          </field>
          <field type="selector" name="ttl">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="pointer" name="cache">
            <type type="ident" def="agentCache"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewUnitStatePublisher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="registry"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="machine"/>
              <item value="Machine"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStatePublisher"/>
            </type>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStatePublisher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="2">
              <type type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitStateHeartbeat"/>
                </type>
              </type>
            </type>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStatePublisher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStatePublisher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="taskChain"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="task"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="taskChain"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="taskManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="taskChain"/>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="3">
              <type type="ident" def="taskResult"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewAgentState">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AgentState"/>
            </type>
          </returnsList>
        </function>
        <function name="AbleToRun">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AgentState"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewReconciler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="registry"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="pkg"/>
              <item value="EventStream"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AgentReconciler"/>
            </type>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AgentReconciler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Reconcile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AgentReconciler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AgentReconciler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agentCache"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitManager"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitStateGenerator"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="registry"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="machine"/>
              <item value="Machine"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Heartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="DefaultTTL"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/pkg">
      <types>
        <type name="Set" type="interface">
          <method name="Add">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Remove">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Contains">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Equals">
            <paramsList>
              <type type="ident" def="Set"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Length">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Values">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Copy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Set"/>
            </resultsList>
          </method>
          <method name="Sub">
            <paramsList>
              <type type="ident" def="Set"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Set"/>
            </resultsList>
          </method>
        </type>
        <type name="Event" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="EventStream" type="interface">
          <method name="Next">
            <paramsList>
              <type type="chan" dir="3">
                <type type="struct" name=""/>
              </type>
            </paramsList>
            <resultsList>
              <type type="chan" dir="3">
                <type type="ident" def="Event"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="PeriodicReconciler" type="interface">
          <method name="Run">
            <paramsList>
              <type type="chan" dir="3">
                <type type="ident" def="bool"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="LoggingHTTPTransport">
          <field type="selector" name="">
            <prefix value="http"/>
            <item value="Transport"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ReadTLSConfigFiles">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewUnsafeSet">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </returnsList>
        </function>
        <function name="NewThreadsafeSet">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Length">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Values">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Set"/>
          </returnsList>
        </function>
        <function name="Sub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Set"/>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Length">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Values">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Set"/>
          </returnsList>
        </function>
        <function name="Sub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Set"/>
          </returnsList>
        </function>
        <function name="NewPeriodicReconciler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
            <type type="ident" def="EventStream"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="PeriodicReconciler"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="reconciler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoggingHTTPTransport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ListDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseFilepath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ExpBackoff">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </returnsList>
        </function>
        <function name="TrimToDashes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/api">
      <types>
        <type type="struct" name="Server">
          <field type="slice" name="listeners">
            <elmtype type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </elmtype>
          </field>
          <field type="selector" name="api">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="selector" name="cur">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
        </type>
        <type type="struct" name="PageToken">
          <field type="ident" def="uint16" name="Limit"/>
          <field type="ident" def="uint16" name="Page"/>
        </type>
      </types>
      <functions>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unitsResource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ValidateName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateOptions">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="UnitOption"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stateResource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="net"/>
                <item value="Listener"/>
              </elmtype>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </returnsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Available">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unavailableHdlr"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DefaultPageToken">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PageToken"/>
          </returnsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="ident" def="PageToken"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PageToken"/>
          </returnsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="ident" def="PageToken"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewServeMux">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="registry"/>
              <item value="Registry"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </returnsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="loggingMiddleware"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="serverInfoMiddleware"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="machinesResource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="discoveryResource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/server">
      <types>
        <type type="struct" name="Server">
          <field type="pointer" name="agent">
            <type type="selector">
              <prefix value="agent"/>
              <item value="Agent"/>
            </type>
          </field>
          <field type="pointer" name="aReconciler">
            <type type="selector">
              <prefix value="agent"/>
              <item value="AgentReconciler"/>
            </type>
          </field>
          <field type="pointer" name="usPub">
            <type type="selector">
              <prefix value="agent"/>
              <item value="UnitStatePublisher"/>
            </type>
          </field>
          <field type="pointer" name="usGen">
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitStateGenerator"/>
            </type>
          </field>
          <field type="pointer" name="engine">
            <type type="selector">
              <prefix value="engine"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="pointer" name="mach">
            <type type="selector">
              <prefix value="machine"/>
              <item value="CoreOSMachine"/>
            </type>
          </field>
          <field type="selector" name="hrt">
            <prefix value="heart"/>
            <item value="Heart"/>
          </field>
          <field type="pointer" name="mon">
            <type type="selector">
              <prefix value="heart"/>
              <item value="Monitor"/>
            </type>
          </field>
          <field type="pointer" name="api">
            <type type="selector">
              <prefix value="api"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="selector" name="engineReconcileInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="chan" dir="3" name="stop">
            <type type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="config"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Monitor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/scripts">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/systemd">
      <types/>
      <functions>
        <function name="NewSystemdUnitManager">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitFile"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="TriggerStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="TriggerStop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetUnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="systemdUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pkg"/>
              <item value="Set"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultUnitsDirectory"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/resource">
      <types>
        <type type="struct" name="ResourceTuple">
          <field type="ident" def="int" name="Cores"/>
          <field type="ident" def="int" name="Memory"/>
          <field type="ident" def="int" name="Disk"/>
        </type>
      </types>
      <functions>
        <function name="Empty">
          <recvList>
            <type type="ident" def="ResourceTuple"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Sum">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="ResourceTuple"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="ResourceTuple"/>
          </returnsList>
        </function>
        <function name="Sub">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceTuple"/>
            <type type="ident" def="ResourceTuple"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="ResourceTuple"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="HostCores"/>
        <name value="HostMemory"/>
        <name value="HostDisk"/>
        <name value="HostResources"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/machine">
      <types>
        <type type="struct" name="MachineState">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="PublicIP"/>
          <field type="map" name="Metadata">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Version"/>
        </type>
        <type name="Machine" type="interface">
          <method name="State">
            <paramsList/>
            <resultsList>
              <type type="ident" def="MachineState"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeMachine">
          <field type="ident" def="MachineState" name="MachineState"/>
        </type>
        <type type="struct" name="CoreOSMachine">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="um">
            <prefix value="unit"/>
            <item value="UnitManager"/>
          </field>
          <field type="ident" def="MachineState" name="staticState"/>
          <field type="pointer" name="dynamicState">
            <type type="ident" def="MachineState"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ShortID">
          <recvList>
            <type type="ident" def="MachineState"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MatchID">
          <recvList>
            <type type="ident" def="MachineState"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="HasMetadata">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="MachineState"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="pkg"/>
                <item value="Set"/>
              </valtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMachine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="MachineState"/>
          </returnsList>
        </function>
        <function name="NewCoreOSMachine">
          <recvList/>
          <paramsList>
            <type type="ident" def="MachineState"/>
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitManager"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="CoreOSMachine"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CoreOSMachine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CoreOSMachine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="MachineState"/>
          </returnsList>
        </function>
        <function name="Refresh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CoreOSMachine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="PeriodicRefresh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CoreOSMachine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="IsLocalMachineID">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/config">
      <types>
        <type type="struct" name="Config">
          <field type="slice" name="EtcdServers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="EtcdKeyPrefix"/>
          <field type="ident" def="string" name="EtcdKeyFile"/>
          <field type="ident" def="string" name="EtcdCertFile"/>
          <field type="ident" def="string" name="EtcdCAFile"/>
          <field type="ident" def="float64" name="EtcdRequestTimeout"/>
          <field type="ident" def="float64" name="EngineReconcileInterval"/>
          <field type="ident" def="string" name="PublicIP"/>
          <field type="ident" def="int" name="Verbosity"/>
          <field type="ident" def="string" name="RawMetadata"/>
          <field type="ident" def="string" name="AgentTTL"/>
          <field type="ident" def="bool" name="VerifyUnits"/>
          <field type="ident" def="string" name="AuthorizedKeysFile"/>
        </type>
      </types>
      <functions>
        <function name="Metadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/heart">
      <types>
        <type type="struct" name="Monitor">
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ival">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type name="Heart" type="interface">
          <method name="Beat">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Clear">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewMonitor">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Monitor"/>
            </type>
          </returnsList>
        </function>
        <function name="Monitor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Monitor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Heart"/>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="registry"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="machine"/>
              <item value="Machine"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Heart"/>
          </returnsList>
        </function>
        <function name="Beat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="machineHeart"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="machineHeart"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/unit">
      <types>
        <type type="struct" name="UnitFile">
          <field type="map" name="Contents">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </valtype>
          </field>
          <field type="slice" name="Options">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitOption"/>
              </type>
            </elmtype>
          </field>
        </type>
        <type name="Hash" type="array">
          <elmtype type="ident" def="byte"/>
        </type>
        <type type="struct" name="UnitState">
          <field type="ident" def="string" name="LoadState"/>
          <field type="ident" def="string" name="ActiveState"/>
          <field type="ident" def="string" name="SubState"/>
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="UnitHash"/>
          <field type="ident" def="string" name="UnitName"/>
        </type>
        <type type="struct" name="UnitNameInfo">
          <field type="ident" def="string" name="FullName"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Prefix"/>
          <field type="ident" def="string" name="Template"/>
          <field type="ident" def="string" name="Instance"/>
        </type>
        <type name="UnitManager" type="interface">
          <method name="Load">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="UnitFile"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unload">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="TriggerStart">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="TriggerStop">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Units">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetUnitStates">
            <paramsList>
              <type type="selector">
                <prefix value="pkg"/>
                <item value="Set"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="UnitState"/>
                </valtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetUnitState">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="UnitState"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="UnitStateHeartbeat">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="State">
            <type type="ident" def="UnitState"/>
          </field>
        </type>
        <type type="struct" name="UnitStateGenerator">
          <field type="ident" def="UnitManager" name="mgr"/>
          <field type="selector" name="subscribed">
            <prefix value="pkg"/>
            <item value="Set"/>
          </field>
          <field type="selector" name="lastSubscribed">
            <prefix value="pkg"/>
            <item value="Set"/>
          </field>
        </type>
        <type type="struct" name="FakeUnitManager">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="u">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewUnitFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewUnitFromOptions">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitOption"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
          </returnsList>
        </function>
        <function name="Description">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Hash">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Hash"/>
          </returnsList>
        </function>
        <function name="RecognizedUnitType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="DefaultUnitType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Hash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Short">
          <recvList>
            <type type="ident" def="Hash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewUnitState">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitState"/>
            </type>
          </returnsList>
        </function>
        <function name="IsInstance">
          <recvList>
            <type type="ident" def="UnitNameInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewUnitNameInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitNameInfo"/>
            </type>
          </returnsList>
        </function>
        <function name="NewUnitStateGenerator">
          <recvList/>
          <paramsList>
            <type type="ident" def="UnitManager"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="1">
              <type type="pointer">
                <type type="ident" def="UnitStateHeartbeat"/>
              </type>
            </type>
            <type type="chan" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="chan" dir="2">
              <type type="pointer">
                <type type="ident" def="UnitStateHeartbeat"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Subscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Unsubscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnitStateGenerator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewFakeUnitManager">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="UnitFile"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="TriggerStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="TriggerStop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UnitState"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetUnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pkg"/>
              <item value="Set"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="UnitState"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeUnitManager"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/functional/util">
      <types>
        <type type="struct" name="UnitState">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ActiveState"/>
          <field type="ident" def="string" name="Machine"/>
          <field type="ident" def="string" name="IP"/>
        </type>
      </types>
      <functions>
        <function name="RunFleetctl">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RunFleetctlWithInput">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ActiveToSingleStates">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="UnitState"/>
              </valtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="UnitState"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseUnitStates">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="UnitState"/>
            </type>
          </returnsList>
        </function>
        <function name="FilterActiveUnits">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="UnitState"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="UnitState"/>
            </type>
          </returnsList>
        </function>
        <function name="TempUnit">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/version">
      <types/>
      <functions/>
      <names>
        <name value="Version"/>
        <name value="SemVersion"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/functional/platform">
      <types>
        <type name="Member" type="interface">
          <method name="ID">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="IP">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Endpoint">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Cluster" type="interface">
          <method name="CreateMember">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Member"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DestroyMember">
            <paramsList>
              <type type="ident" def="Member"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ReplaceMember">
            <paramsList>
              <type type="ident" def="Member"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Member"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Members">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Member"/>
              </type>
            </resultsList>
          </method>
          <method name="MemberCommand">
            <paramsList>
              <type type="ident" def="Member"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Fleetctl">
            <paramsList>
              <type type="ident" def="Member"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="FleetctlWithInput">
            <paramsList>
              <type type="ident" def="Member"/>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WaitForNActiveUnits">
            <paramsList>
              <type type="ident" def="Member"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="slice">
                  <elmtype type="selector">
                    <prefix value="util"/>
                    <item value="UnitState"/>
                  </elmtype>
                </valtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WaitForNMachines">
            <paramsList>
              <type type="ident" def="Member"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnMember"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnMember"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Endpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnMember"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Fleetctl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FleetctlWithInput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WaitForNActiveUnits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="selector">
                  <prefix value="util"/>
                  <item value="UnitState"/>
                </elmtype>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WaitForNMachines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Members">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
          </returnsList>
        </function>
        <function name="MemberCommand">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Member"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReplaceMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Member"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DestroyMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nspawnCluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Member"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewNspawnCluster">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Cluster"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateNClusterMembers">
          <recvList/>
          <paramsList>
            <type type="ident" def="Cluster"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/job">
      <types>
        <type name="JobState" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Job">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="State">
            <type type="ident" def="JobState"/>
          </field>
          <field type="ident" def="JobState" name="TargetState"/>
          <field type="ident" def="string" name="TargetMachineID"/>
          <field type="selector" name="Unit">
            <prefix value="unit"/>
            <item value="UnitFile"/>
          </field>
        </type>
        <type type="struct" name="ScheduledUnit">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="State">
            <type type="ident" def="JobState"/>
          </field>
          <field type="ident" def="string" name="TargetMachineID"/>
        </type>
        <type type="struct" name="Unit">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Unit">
            <prefix value="unit"/>
            <item value="UnitFile"/>
          </field>
          <field type="ident" def="JobState" name="TargetState"/>
        </type>
      </types>
      <functions>
        <function name="ParseJobState">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="JobState"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsGlobal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewJob">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="unit"/>
              <item value="UnitFile"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </returnsList>
        </function>
        <function name="Conflicts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Peers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="RequiredTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RequiredTargetMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unit"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="pkg"/>
                <item value="Set"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="ValidateRequirements">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Conflicts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Peers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="RequiredTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RequiredTargetMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="pkg"/>
                <item value="Set"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="Scheduled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="JobStateInactive"/>
        <name value="JobStateLoaded"/>
        <name value="JobStateLaunched"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/ssh">
      <types>
        <type type="struct" name="SSHForwardingClient">
          <field type="ident" def="bool" name="agentForwarding"/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="gossh"/>
              <item value="Client"/>
            </type>
          </field>
        </type>
        <type type="struct" name="HostKeyChecker">
          <field type="ident" def="HostKeyManager" name="m"/>
          <field type="func" name="trustHost">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </field>
        </type>
        <type name="HostKeyManager" type="interface">
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetHostKeys">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="slice">
                  <elmtype type="selector">
                    <prefix value="gossh"/>
                    <item value="PublicKey"/>
                  </elmtype>
                </valtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PutHostKey">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="gossh"/>
                <item value="PublicKey"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="HostKeyFile">
          <field type="ident" def="string" name="path"/>
        </type>
      </types>
      <functions>
        <function name="ForwardAgentAuthentication">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="gossh"/>
                <item value="Session"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Execute">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Shell">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SSHAgentClient">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="gosshagent"/>
              <item value="Agent"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewSSHClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="HostKeyChecker"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTunnelledSSHClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="HostKeyChecker"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DialCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="SSHForwardingClient"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proxyConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proxyConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proxyConn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHostKeyChecker">
          <recvList/>
          <paramsList>
            <type type="ident" def="HostKeyManager"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="HostKeyChecker"/>
            </type>
          </returnsList>
        </function>
        <function name="Check">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HostKeyChecker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="gossh"/>
              <item value="PublicKey"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHostKeyFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="HostKeyFile"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HostKeyFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetHostKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HostKeyFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="selector">
                  <prefix value="gossh"/>
                  <item value="PublicKey"/>
                </elmtype>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutHostKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HostKeyFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="gossh"/>
              <item value="PublicKey"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultKnownHostsFile"/>
        <name value="ErrUntrustHost"/>
        <name value="ErrUnmatchKey"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/client">
      <types>
        <type type="struct" name="RegistryClient">
          <field type="selector" name="">
            <prefix value="registry"/>
            <item value="Registry"/>
          </field>
        </type>
        <type type="struct" name="HTTPClient">
          <field type="pointer" name="svc">
            <type type="selector">
              <prefix value="schema"/>
              <item value="Service"/>
            </type>
          </field>
          <field type="ident" def="API" name=""/>
        </type>
        <type name="API" type="interface">
          <method name="Machines">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="machine"/>
                  <item value="MachineState"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unit">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="Unit"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Units">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="schema"/>
                    <item value="Unit"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UnitStates">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="schema"/>
                    <item value="UnitState"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetUnitTargetState">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateUnit">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="Unit"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DestroyUnit">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RegistryClient"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="Unit"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RegistryClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="schema"/>
                <item value="Unit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RegistryClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="schema"/>
                <item value="Unit"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RegistryClient"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetUnitTargetState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RegistryClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHTTPClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="API"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Machines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="Unit"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="schema"/>
                <item value="Unit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="schema"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DestroyUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="schema"/>
                <item value="Unit"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetUnitTargetState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/etcd">
      <types>
        <type type="struct" name="Result">
          <field type="ident" def="string" name="Action"/>
          <field type="pointer" name="Node">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="PrevNode">
            <type type="ident" def="Node"/>
          </field>
          <field type="slice" name="Raw">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Nodes" type="slice">
          <elmtype type="ident" def="Node"/>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="ident" def="int" name="TTL"/>
          <field type="ident" def="Nodes" name="Nodes"/>
          <field type="ident" def="uint64" name="ModifiedIndex"/>
          <field type="ident" def="uint64" name="CreatedIndex"/>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="ErrorCode"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Cause"/>
          <field type="ident" def="uint64" name="Index"/>
        </type>
        <type name="Client" type="interface">
          <method name="Do">
            <paramsList>
              <type type="ident" def="Action"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Wait">
            <paramsList>
              <type type="ident" def="Action"/>
              <type type="chan" dir="2">
                <type type="struct" name=""/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Action" type="interface">
          <method name="HTTPRequest">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Delete">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="bool" name="Recursive"/>
          <field type="ident" def="string" name="PreviousValue"/>
          <field type="ident" def="uint64" name="PreviousIndex"/>
        </type>
        <type type="struct" name="Create">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="Update">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="Set">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="uint64" name="PreviousIndex"/>
          <field type="ident" def="string" name="PreviousValue"/>
        </type>
        <type type="struct" name="Get">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="bool" name="Sorted"/>
          <field type="ident" def="bool" name="Recursive"/>
        </type>
        <type type="struct" name="Watch">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="bool" name="Recursive"/>
          <field type="ident" def="uint64" name="WaitIndex"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="TTLDuration">
          <recvList>
            <type type="ident" def="Node"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Transport"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="client"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Wait">
          <recvList>
            <type type="pointer">
              <type type="ident" def="client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
            <type type="chan" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Resolve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="actionResolver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Delete"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Delete"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Create"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Create"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Update"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Update"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Set"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Set"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Get"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Get"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Watch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Watch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrorKeyNotFound"/>
        <name value="ErrorNodeExist"/>
        <name value="ErrorEventIndexCleared"/>
      </names>
    </package>
    <package importpath="github.com/coreos/fleet/log">
      <types>
        <type name="VLevel" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="VLogger" type="ident">
          <type type="ident" def="bool"/>
        </type>
      </types>
      <functions>
        <function name="EnableTimestamps">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="SetVerbosity">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VLevel"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VLevel"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VLevel"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="V">
          <recvList/>
          <paramsList>
            <type type="ident" def="VLevel"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="VLogger"/>
          </returnsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="ident" def="VLogger"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="ident" def="VLogger"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Info">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infof">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Errorf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Warning">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Warningf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Fatal">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Fatalf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/fleet/registry">
      <types>
        <type type="struct" name="MUSKey">
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="string" name="machID"/>
        </type>
        <type name="MUSKeys" type="slice">
          <elmtype type="ident" def="MUSKey"/>
        </type>
        <type type="struct" name="EtcdRegistry">
          <field type="selector" name="etcd">
            <prefix value="etcd"/>
            <item value="Client"/>
          </field>
          <field type="ident" def="string" name="keyPrefix"/>
        </type>
        <type name="Registry" type="interface">
          <method name="ClearUnitHeartbeat">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="CreateUnit">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="job"/>
                  <item value="Unit"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DestroyUnit">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UnitHeartbeat">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Machines">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="machine"/>
                  <item value="MachineState"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveMachineState">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveUnitState">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SaveUnitState">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ScheduleUnit">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetUnitTargetState">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="job"/>
                <item value="JobState"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetMachineState">
            <paramsList>
              <type type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </type>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UnscheduleUnit">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="UnitRegistry" type="interface">
          <method name="Schedule">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="job"/>
                  <item value="ScheduledUnit"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ScheduledUnit">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="job"/>
                  <item value="ScheduledUnit"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unit">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="job"/>
                  <item value="Unit"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Units">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="job"/>
                  <item value="Unit"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UnitStates">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="unit"/>
                    <item value="UnitState"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ClusterRegistry" type="interface">
          <method name="LatestDaemonVersion">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="semver"/>
                  <item value="Version"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="EngineVersion">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateEngineVersion">
            <paramsList>
              <type type="ident" def="int"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="LeaseRegistry" type="interface">
          <method name="GetLease">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Lease"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AcquireLease">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Lease"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StealLease">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Lease"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Lease" type="interface">
          <method name="Renew">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Release">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MachineID">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Index">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
          <method name="TimeRemaining">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeRegistry">
          <field type="ident" def="Registry" name=""/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="slice" name="machines">
            <elmtype type="selector">
              <prefix value="machine"/>
              <item value="MachineState"/>
            </elmtype>
          </field>
          <field type="map" name="jobStates">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </valtype>
            </valtype>
          </field>
          <field type="map" name="jobs">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="job"/>
              <item value="Job"/>
            </valtype>
          </field>
          <field type="pointer" name="daemonVersion">
            <type type="selector">
              <prefix value="semver"/>
              <item value="Version"/>
            </type>
          </field>
        </type>
        <type type="struct" name="FakeClusterRegistry">
          <field type="pointer" name="dVersion">
            <type type="selector">
              <prefix value="semver"/>
              <item value="Version"/>
            </type>
          </field>
          <field type="ident" def="int" name="eVersion"/>
        </type>
        <type type="struct" name="FakeLeaseRegistry">
          <field type="map" name="leaseMap">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Lease"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="LatestDaemonVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="EngineVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UpdateEngineVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="MUSKeys"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="MUSKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="MUSKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SaveUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RemoveUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewEtcdRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="etcd"/>
              <item value="Client"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </returnsList>
        </function>
        <function name="Machines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetMachineState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="machine"/>
              <item value="MachineState"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RemoveMachineState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StealLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AcquireLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Renew">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MachineID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="TimeRemaining">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </returnsList>
        </function>
        <function name="UnitHeartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ClearUnitHeartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Schedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ScheduledUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnscheduleUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DestroyUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetUnitTargetState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="job"/>
              <item value="JobState"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ScheduleUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewFakeRegistry">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </returnsList>
        </function>
        <function name="SetMachines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetJobs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="Job"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetUnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Machines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="machine"/>
                <item value="MachineState"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Units">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Schedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ScheduledUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="ScheduledUnit"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="job"/>
                <item value="Unit"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DestroyUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetUnitTargetState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="job"/>
              <item value="JobState"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ScheduleUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="unit"/>
                <item value="UnitState"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RemoveUnitState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnitStates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="unit"/>
                  <item value="UnitState"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnitHeartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ClearUnitHeartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewFakeClusterRegistry">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FakeClusterRegistry"/>
            </type>
          </returnsList>
        </function>
        <function name="LatestDaemonVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeClusterRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="EngineVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeClusterRegistry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UpdateEngineVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeClusterRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLeaseRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </returnsList>
        </function>
        <function name="MachineID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="TimeRemaining">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </returnsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="Renew">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeLease"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewFakeLeaseRegistry">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FakeLeaseRegistry"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLeaseRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AcquireLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLeaseRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StealLease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLeaseRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Lease"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewEtcdEventStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="etcd"/>
              <item value="Client"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="pkg"/>
              <item value="EventStream"/>
            </type>
          </returnsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdEventStream"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="3">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="3">
              <type type="selector">
                <prefix value="pkg"/>
                <item value="Event"/>
              </type>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultKeyPrefix"/>
        <name value="JobTargetChangeEvent"/>
        <name value="JobTargetStateChangeEvent"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="github.com/coreos/go-semver/semver"/>
    <import path="reflect"/>
    <import path="testing"/>
    <import path="bytes"/>
    <import path="crypto/sha1"/>
    <import path="fmt"/>
    <import path="io/ioutil"/>
    <import path="strings"/>
    <import path="github.com/coreos/go-systemd/unit"/>
    <import path="github.com/coreos/fleet/pkg"/>
    <import path="encoding/json"/>
    <import path="time"/>
    <import path="github.com/coreos/fleet/log"/>
    <import path="sync"/>
    <import path="os"/>
    <import path="path"/>
    <import path="github.com/coreos/go-systemd/dbus"/>
    <import path="github.com/coreos/fleet/unit"/>
    <import path="errors"/>
    <import path="net"/>
    <import path="strconv"/>
    <import path="golang.org/x/crypto/ssh"/>
    <import path="golang.org/x/crypto/ssh/agent"/>
    <import path="golang.org/x/crypto/ssh/terminal"/>
    <import path="io"/>
    <import path="syscall"/>
    <import path="bufio"/>
    <import path="crypto/md5"/>
    <import path="net/http"/>
    <import path="github.com/coreos/go-systemd/activation"/>
    <import path="github.com/coreos/fleet/agent"/>
    <import path="github.com/coreos/fleet/api"/>
    <import path="github.com/coreos/fleet/config"/>
    <import path="github.com/coreos/fleet/engine"/>
    <import path="github.com/coreos/fleet/etcd"/>
    <import path="github.com/coreos/fleet/heart"/>
    <import path="github.com/coreos/fleet/machine"/>
    <import path="github.com/coreos/fleet/registry"/>
    <import path="github.com/coreos/fleet/systemd"/>
    <import path="github.com/coreos/fleet/version"/>
    <import path="net/url"/>
    <import path="google.golang.org/api/googleapi"/>
    <import path="github.com/coreos/fleet/job"/>
    <import path="sort"/>
    <import path="crypto/tls"/>
    <import path="crypto/x509"/>
    <import path="encoding/pem"/>
    <import path="github.com/jonboulle/clockwork"/>
    <import path="os/user"/>
    <import path="path/filepath"/>
    <import path="github.com/docker/libcontainer/netlink"/>
    <import path="log"/>
    <import path="runtime"/>
    <import path="sync/atomic"/>
    <import path="github.com/coreos/fleet/functional/platform"/>
    <import path="math/rand"/>
    <import path="github.com/coreos/fleet/functional/util"/>
    <import path="os/exec"/>
    <import path="flag"/>
    <import path="os/signal"/>
    <import path="github.com/rakyll/globalconf"/>
    <import path="github.com/coreos/fleet/server"/>
    <import path="github.com/coreos/fleet/schema"/>
    <import path="github.com/coreos/fleet/client"/>
    <import path="github.com/coreos/fleet/ssh"/>
    <import path="text/template"/>
    <import path="text/tabwriter"/>
    <import path="net/http/httptest"/>
    <import path="encoding/base64"/>
    <import path="encoding/binary"/>
  </imports>
</project>
