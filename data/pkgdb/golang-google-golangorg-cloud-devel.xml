<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit">
  <packages>
    <package importpath="google.golang.org/cloud/internal/testutil">
      <types/>
      <functions>
        <function name="Context">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="NoAuthContext">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/cloud/container">
      <types>
        <type name="Type" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Status" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Resource">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Description"/>
          <field type="ident" def="string" name="Zone"/>
          <field type="ident" def="Status" name="Status"/>
          <field type="ident" def="int64" name="Num"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Endpoint"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="ContainerIPv4CIDR"/>
          <field type="ident" def="string" name="ServicesIPv4CIDR"/>
          <field type="ident" def="string" name="MachineType"/>
          <field type="ident" def="string" name="SourceImage"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="Op">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Zone"/>
          <field type="ident" def="string" name="TargetURL"/>
          <field type="ident" def="Type" name="Type"/>
          <field type="ident" def="Status" name="Status"/>
        </type>
      </types>
      <functions>
        <function name="Clusters">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Resource"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Cluster">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Resource"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateCluster">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Resource"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Resource"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteCluster">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Operations">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Op"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Operation">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Op"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="TypeCreate"/>
        <name value="TypeDelete"/>
        <name value="Done"/>
        <name value="Pending"/>
        <name value="Running"/>
        <name value="Error"/>
        <name value="Provisioning"/>
        <name value="Stopping"/>
      </names>
    </package>
    <package importpath="google.golang.org/cloud/storage">
      <types>
        <type type="struct" name="Bucket">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="ACL">
            <elmtype type="ident" def="ACLRule"/>
          </field>
          <field type="slice" name="DefaultObjectACL">
            <elmtype type="ident" def="ACLRule"/>
          </field>
          <field type="ident" def="string" name="Location"/>
          <field type="ident" def="int64" name="Metageneration"/>
          <field type="ident" def="string" name="StorageClass"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ObjectAttrs">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ContentType"/>
          <field type="ident" def="string" name="ContentLanguage"/>
          <field type="ident" def="string" name="ContentEncoding"/>
          <field type="slice" name="ACL">
            <elmtype type="ident" def="ACLRule"/>
          </field>
          <field type="map" name="Metadata">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Object">
          <field type="ident" def="string" name="Bucket"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ContentType"/>
          <field type="ident" def="string" name="ContentLanguage"/>
          <field type="slice" name="ACL">
            <elmtype type="ident" def="ACLRule"/>
          </field>
          <field type="ident" def="string" name="Owner"/>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="string" name="ContentEncoding"/>
          <field type="slice" name="MD5">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint32" name="CRC32C"/>
          <field type="ident" def="string" name="MediaLink"/>
          <field type="map" name="Metadata">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int64" name="Generation"/>
          <field type="ident" def="int64" name="MetaGeneration"/>
          <field type="ident" def="string" name="StorageClass"/>
          <field type="selector" name="Deleted">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="Updated">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="Query">
          <field type="ident" def="string" name="Delimiter"/>
          <field type="ident" def="string" name="Prefix"/>
          <field type="ident" def="bool" name="Versions"/>
          <field type="ident" def="string" name="Cursor"/>
          <field type="ident" def="int" name="MaxResults"/>
        </type>
        <type type="struct" name="Objects">
          <field type="slice" name="Results">
            <elmtype type="pointer">
              <type type="ident" def="Object"/>
            </elmtype>
          </field>
          <field type="pointer" name="Next">
            <type type="ident" def="Query"/>
          </field>
          <field type="slice" name="Prefixes">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Writer">
          <field type="ident" def="ObjectAttrs" name=""/>
          <field type="selector" name="ctx">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="ident" def="string" name="bucket"/>
          <field type="ident" def="string" name="name"/>
          <field type="selector" name="once">
            <prefix value="sync"/>
            <item value="Once"/>
          </field>
          <field type="ident" def="bool" name="opened"/>
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="pointer" name="pw">
            <type type="selector">
              <prefix value="io"/>
              <item value="PipeWriter"/>
            </type>
          </field>
          <field type="chan" dir="3" name="donec">
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="pointer" name="obj">
            <type type="ident" def="Object"/>
          </field>
        </type>
        <type type="struct" name="SignedURLOptions">
          <field type="ident" def="string" name="GoogleAccessID"/>
          <field type="slice" name="PrivateKey">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="Method"/>
          <field type="selector" name="Expires">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContentType"/>
          <field type="slice" name="Headers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="MD5">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="ACLRole" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ACLEntity" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ACLRule">
          <field type="ident" def="ACLEntity" name="Entity"/>
          <field type="ident" def="ACLRole" name="Role"/>
        </type>
      </types>
      <functions>
        <function name="ContentType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="contentTyper"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Object">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </returnsList>
        </function>
        <function name="BucketInfo">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Bucket"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ListObjects">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Objects"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SignedURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="SignedURLOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StatObject">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UpdateAttrs">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="ObjectAttrs"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteObject">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyObject">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="ObjectAttrs"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </returnsList>
        </function>
        <function name="DefaultACL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="ACLRule"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutDefaultACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
            <type type="ident" def="ACLRole"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteDefaultACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BucketACL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="ACLRule"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutBucketACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
            <type type="ident" def="ACLRole"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteBucketACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ACL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="ACLRule"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
            <type type="ident" def="ACLRole"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteACLRule">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="ACLEntity"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrBucketNotExist"/>
        <name value="ErrObjectNotExist"/>
        <name value="ScopeFullControl"/>
        <name value="ScopeReadOnly"/>
        <name value="ScopeReadWrite"/>
        <name value="RoleOwner"/>
        <name value="RoleReader"/>
        <name value="AllUsers"/>
        <name value="AllAuthenticatedUsers"/>
      </names>
    </package>
    <package importpath="google.golang.org/cloud/examples/storage/appengine">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="google.golang.org/cloud/internal/datastore">
      <types>
        <type name="EntityResult_ResultType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PropertyExpression_AggregationFunction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PropertyOrder_Direction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="CompositeFilter_Operator" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PropertyFilter_Operator" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="QueryResultBatch_MoreResultsType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="ReadOptions_ReadConsistency" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="BeginTransactionRequest_IsolationLevel" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="CommitRequest_Mode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="PartitionId">
          <field type="pointer" name="DatasetId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Namespace">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Key">
          <field type="pointer" name="PartitionId">
            <type type="ident" def="PartitionId"/>
          </field>
          <field type="slice" name="PathElement">
            <elmtype type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Key_PathElement">
          <field type="pointer" name="Kind">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Id">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Value">
          <field type="pointer" name="BooleanValue">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IntegerValue">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="DoubleValue">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="TimestampMicrosecondsValue">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="KeyValue">
            <type type="ident" def="Key"/>
          </field>
          <field type="pointer" name="BlobKeyValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="BlobValue">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EntityValue">
            <type type="ident" def="Entity"/>
          </field>
          <field type="slice" name="ListValue">
            <elmtype type="pointer">
              <type type="ident" def="Value"/>
            </elmtype>
          </field>
          <field type="pointer" name="Meaning">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Indexed">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="Value"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Entity">
          <field type="pointer" name="Key">
            <type type="ident" def="Key"/>
          </field>
          <field type="slice" name="Property">
            <elmtype type="pointer">
              <type type="ident" def="Property"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EntityResult">
          <field type="pointer" name="Entity">
            <type type="ident" def="Entity"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Query">
          <field type="slice" name="Projection">
            <elmtype type="pointer">
              <type type="ident" def="PropertyExpression"/>
            </elmtype>
          </field>
          <field type="slice" name="Kind">
            <elmtype type="pointer">
              <type type="ident" def="KindExpression"/>
            </elmtype>
          </field>
          <field type="pointer" name="Filter">
            <type type="ident" def="Filter"/>
          </field>
          <field type="slice" name="Order">
            <elmtype type="pointer">
              <type type="ident" def="PropertyOrder"/>
            </elmtype>
          </field>
          <field type="slice" name="GroupBy">
            <elmtype type="pointer">
              <type type="ident" def="PropertyReference"/>
            </elmtype>
          </field>
          <field type="slice" name="StartCursor">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="EndCursor">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="KindExpression">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyReference">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyExpression">
          <field type="pointer" name="Property">
            <type type="ident" def="PropertyReference"/>
          </field>
          <field type="pointer" name="AggregationFunction">
            <type type="ident" def="PropertyExpression_AggregationFunction"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyOrder">
          <field type="pointer" name="Property">
            <type type="ident" def="PropertyReference"/>
          </field>
          <field type="pointer" name="Direction">
            <type type="ident" def="PropertyOrder_Direction"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Filter">
          <field type="pointer" name="CompositeFilter">
            <type type="ident" def="CompositeFilter"/>
          </field>
          <field type="pointer" name="PropertyFilter">
            <type type="ident" def="PropertyFilter"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompositeFilter">
          <field type="pointer" name="Operator">
            <type type="ident" def="CompositeFilter_Operator"/>
          </field>
          <field type="slice" name="Filter">
            <elmtype type="pointer">
              <type type="ident" def="Filter"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyFilter">
          <field type="pointer" name="Property">
            <type type="ident" def="PropertyReference"/>
          </field>
          <field type="pointer" name="Operator">
            <type type="ident" def="PropertyFilter_Operator"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="Value"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GqlQuery">
          <field type="pointer" name="QueryString">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AllowLiteral">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="NameArg">
            <elmtype type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </elmtype>
          </field>
          <field type="slice" name="NumberArg">
            <elmtype type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GqlQueryArg">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="Value"/>
          </field>
          <field type="slice" name="Cursor">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="QueryResultBatch">
          <field type="pointer" name="EntityResultType">
            <type type="ident" def="EntityResult_ResultType"/>
          </field>
          <field type="slice" name="EntityResult">
            <elmtype type="pointer">
              <type type="ident" def="EntityResult"/>
            </elmtype>
          </field>
          <field type="slice" name="EndCursor">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="MoreResults">
            <type type="ident" def="QueryResultBatch_MoreResultsType"/>
          </field>
          <field type="pointer" name="SkippedResults">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Mutation">
          <field type="slice" name="Upsert">
            <elmtype type="pointer">
              <type type="ident" def="Entity"/>
            </elmtype>
          </field>
          <field type="slice" name="Update">
            <elmtype type="pointer">
              <type type="ident" def="Entity"/>
            </elmtype>
          </field>
          <field type="slice" name="Insert">
            <elmtype type="pointer">
              <type type="ident" def="Entity"/>
            </elmtype>
          </field>
          <field type="slice" name="InsertAutoId">
            <elmtype type="pointer">
              <type type="ident" def="Entity"/>
            </elmtype>
          </field>
          <field type="slice" name="Delete">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="pointer" name="Force">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MutationResult">
          <field type="pointer" name="IndexUpdates">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="InsertAutoIdKey">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ReadOptions">
          <field type="pointer" name="ReadConsistency">
            <type type="ident" def="ReadOptions_ReadConsistency"/>
          </field>
          <field type="slice" name="Transaction">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LookupRequest">
          <field type="pointer" name="ReadOptions">
            <type type="ident" def="ReadOptions"/>
          </field>
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LookupResponse">
          <field type="slice" name="Found">
            <elmtype type="pointer">
              <type type="ident" def="EntityResult"/>
            </elmtype>
          </field>
          <field type="slice" name="Missing">
            <elmtype type="pointer">
              <type type="ident" def="EntityResult"/>
            </elmtype>
          </field>
          <field type="slice" name="Deferred">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RunQueryRequest">
          <field type="pointer" name="ReadOptions">
            <type type="ident" def="ReadOptions"/>
          </field>
          <field type="pointer" name="PartitionId">
            <type type="ident" def="PartitionId"/>
          </field>
          <field type="pointer" name="Query">
            <type type="ident" def="Query"/>
          </field>
          <field type="pointer" name="GqlQuery">
            <type type="ident" def="GqlQuery"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RunQueryResponse">
          <field type="pointer" name="Batch">
            <type type="ident" def="QueryResultBatch"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BeginTransactionRequest">
          <field type="pointer" name="IsolationLevel">
            <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BeginTransactionResponse">
          <field type="slice" name="Transaction">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RollbackRequest">
          <field type="slice" name="Transaction">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RollbackResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CommitRequest">
          <field type="slice" name="Transaction">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Mutation">
            <type type="ident" def="Mutation"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="CommitRequest_Mode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CommitResponse">
          <field type="pointer" name="MutationResult">
            <type type="ident" def="MutationResult"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AllocateIdsRequest">
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AllocateIdsResponse">
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Key"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="EntityResult_ResultType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="EntityResult_ResultType"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="EntityResult_ResultType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityResult_ResultType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PropertyExpression_AggregationFunction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression_AggregationFunction"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PropertyExpression_AggregationFunction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression_AggregationFunction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PropertyOrder_Direction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder_Direction"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PropertyOrder_Direction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder_Direction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="CompositeFilter_Operator"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter_Operator"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="CompositeFilter_Operator"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter_Operator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PropertyFilter_Operator"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter_Operator"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PropertyFilter_Operator"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter_Operator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="QueryResultBatch_MoreResultsType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch_MoreResultsType"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="QueryResultBatch_MoreResultsType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch_MoreResultsType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ReadOptions_ReadConsistency"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ReadOptions_ReadConsistency"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ReadOptions_ReadConsistency"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadOptions_ReadConsistency"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="CommitRequest_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="CommitRequest_Mode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="CommitRequest_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest_Mode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDatasetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetPartitionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPathElement">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key_PathElement"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetBooleanValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetIntegerValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetDoubleValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetTimestampMicrosecondsValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetKeyValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="GetBlobKeyValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetBlobValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEntityValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </returnsList>
        </function>
        <function name="GetListValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Value"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMeaning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIndexed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Property"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetEntity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetProjection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PropertyExpression"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="KindExpression"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Filter"/>
            </type>
          </returnsList>
        </function>
        <function name="GetOrder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PropertyOrder"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetGroupBy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PropertyReference"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetStartCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEndCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KindExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KindExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KindExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAggregationFunction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyExpression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PropertyExpression_AggregationFunction"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDirection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyOrder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PropertyOrder_Direction"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetCompositeFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPropertyFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetOperator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="CompositeFilter_Operator"/>
          </returnsList>
        </function>
        <function name="GetFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Filter"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PropertyReference"/>
            </type>
          </returnsList>
        </function>
        <function name="GetOperator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PropertyFilter_Operator"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueryString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetAllowLiteral">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetNameArg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GqlQueryArg"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetNumberArg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GqlQueryArg"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GqlQueryArg"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetEntityResultType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="EntityResult_ResultType"/>
          </returnsList>
        </function>
        <function name="GetEntityResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EntityResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetEndCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMoreResults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="QueryResultBatch_MoreResultsType"/>
          </returnsList>
        </function>
        <function name="GetSkippedResults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetUpsert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entity"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entity"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetInsert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entity"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetInsertAutoId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entity"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetForce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MutationResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MutationResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIndexUpdates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MutationResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetInsertAutoIdKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MutationResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetReadConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="ReadOptions_ReadConsistency"/>
          </returnsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetReadOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </returnsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetFound">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EntityResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMissing">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EntityResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetDeferred">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LookupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetReadOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ReadOptions"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPartitionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PartitionId"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="GetGqlQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="GqlQuery"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetBatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RunQueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="QueryResultBatch"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIsolationLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="BeginTransactionRequest_IsolationLevel"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollbackRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollbackRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollbackRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollbackResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollbackResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMutation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Mutation"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="CommitRequest_Mode"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetMutationResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MutationResult"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="EntityResult_FULL"/>
        <name value="EntityResult_PROJECTION"/>
        <name value="EntityResult_KEY_ONLY"/>
        <name value="EntityResult_ResultType_name"/>
        <name value="EntityResult_ResultType_value"/>
        <name value="PropertyExpression_FIRST"/>
        <name value="PropertyExpression_AggregationFunction_name"/>
        <name value="PropertyExpression_AggregationFunction_value"/>
        <name value="PropertyOrder_ASCENDING"/>
        <name value="PropertyOrder_DESCENDING"/>
        <name value="PropertyOrder_Direction_name"/>
        <name value="PropertyOrder_Direction_value"/>
        <name value="CompositeFilter_AND"/>
        <name value="CompositeFilter_Operator_name"/>
        <name value="CompositeFilter_Operator_value"/>
        <name value="PropertyFilter_LESS_THAN"/>
        <name value="PropertyFilter_LESS_THAN_OR_EQUAL"/>
        <name value="PropertyFilter_GREATER_THAN"/>
        <name value="PropertyFilter_GREATER_THAN_OR_EQUAL"/>
        <name value="PropertyFilter_EQUAL"/>
        <name value="PropertyFilter_HAS_ANCESTOR"/>
        <name value="PropertyFilter_Operator_name"/>
        <name value="PropertyFilter_Operator_value"/>
        <name value="QueryResultBatch_NOT_FINISHED"/>
        <name value="QueryResultBatch_MORE_RESULTS_AFTER_LIMIT"/>
        <name value="QueryResultBatch_NO_MORE_RESULTS"/>
        <name value="QueryResultBatch_MoreResultsType_name"/>
        <name value="QueryResultBatch_MoreResultsType_value"/>
        <name value="ReadOptions_DEFAULT"/>
        <name value="ReadOptions_STRONG"/>
        <name value="ReadOptions_EVENTUAL"/>
        <name value="ReadOptions_ReadConsistency_name"/>
        <name value="ReadOptions_ReadConsistency_value"/>
        <name value="BeginTransactionRequest_SNAPSHOT"/>
        <name value="BeginTransactionRequest_SERIALIZABLE"/>
        <name value="BeginTransactionRequest_IsolationLevel_name"/>
        <name value="BeginTransactionRequest_IsolationLevel_value"/>
        <name value="CommitRequest_TRANSACTIONAL"/>
        <name value="CommitRequest_NON_TRANSACTIONAL"/>
        <name value="CommitRequest_Mode_name"/>
        <name value="CommitRequest_Mode_value"/>
        <name value="Default_Value_Indexed"/>
        <name value="Default_Query_Offset"/>
        <name value="Default_PropertyOrder_Direction"/>
        <name value="Default_GqlQuery_AllowLiteral"/>
        <name value="Default_ReadOptions_ReadConsistency"/>
        <name value="Default_BeginTransactionRequest_IsolationLevel"/>
        <name value="Default_CommitRequest_Mode"/>
      </names>
    </package>
    <package importpath="google.golang.org/cloud/internal">
      <types>
        <type type="struct" name="Transport">
          <field type="selector" name="Base">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="WithContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="Service">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Client"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="interface"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ProjID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="HTTPClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/cloud/datastore">
      <types>
        <type type="struct" name="Query">
          <field type="ident" def="string" name="kind"/>
          <field type="pointer" name="ancestor">
            <type type="ident" def="Key"/>
          </field>
          <field type="slice" name="filter">
            <elmtype type="ident" def="filter"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="order"/>
          </field>
          <field type="slice" name="projection">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="distinct"/>
          <field type="ident" def="bool" name="keysOnly"/>
          <field type="ident" def="bool" name="eventual"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="ident" def="int32" name="offset"/>
          <field type="slice" name="start">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="end">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="error" name="err"/>
        </type>
        <type type="struct" name="Iterator">
          <field type="selector" name="ctx">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="selector" name="req">
            <prefix value="pb"/>
            <item value="RunQueryRequest"/>
          </field>
          <field type="selector" name="res">
            <prefix value="pb"/>
            <item value="RunQueryResponse"/>
          </field>
          <field type="ident" def="int" name="i"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="pointer" name="q">
            <type type="ident" def="Query"/>
          </field>
          <field type="slice" name="prevCC">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Cursor">
          <field type="slice" name="cc">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="ident" def="string" name="Name"/>
          <field type="interface" name="Value"/>
          <field type="ident" def="bool" name="NoIndex"/>
          <field type="ident" def="bool" name="Multiple"/>
        </type>
        <type name="PropertyLoadSaver" type="interface">
          <method name="Load">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Save">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PropertyList" type="slice">
          <elmtype type="ident" def="Property"/>
        </type>
        <type type="struct" name="Key">
          <field type="ident" def="string" name="kind"/>
          <field type="ident" def="int64" name="id"/>
          <field type="ident" def="string" name="name"/>
          <field type="pointer" name="parent">
            <type type="ident" def="Key"/>
          </field>
          <field type="ident" def="string" name="namespace"/>
        </type>
        <type name="MultiError" type="slice">
          <elmtype type="ident" def="error"/>
        </type>
        <type name="ContextKey" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ErrFieldMismatch">
          <field type="selector" name="StructType">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="ident" def="string" name="FieldName"/>
          <field type="ident" def="string" name="Reason"/>
        </type>
      </types>
      <functions>
        <function name="RunInTransaction">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="context"/>
                  <item value="Context"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Ancestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="EventualConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Filter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Order">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Project">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Distinct">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="KeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Limit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Offset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="End">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Count">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </returnsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Cursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Cursor"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DecodeCursor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LoadStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Parent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="SetParent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Incomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GobEncode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GobDecode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DecodeKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewIncompleteKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="NewKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="AllocateIDs">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="MultiError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="WithNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errHTTP"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrFieldMismatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrConcurrentTransaction"/>
        <name value="Done"/>
        <name value="ScopeDatastore"/>
        <name value="ScopeUserEmail"/>
        <name value="ErrInvalidEntityType"/>
        <name value="ErrInvalidKey"/>
        <name value="ErrNoSuchEntity"/>
      </names>
    </package>
    <package importpath="google.golang.org/cloud/compute/metadata">
      <types>
        <type name="NotDefinedError" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="ident" def="NotDefinedError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="OnGCE">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ProjectID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NumericProjectID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InternalIP">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ExternalIP">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Hostname">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InstanceTags">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InstanceID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InstanceAttributes">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ProjectAttributes">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InstanceAttributeValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ProjectAttributeValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Scopes">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/cloud">
      <types/>
      <functions>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="WithContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/cloud/pubsub">
      <types>
        <type type="struct" name="Message">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="AckID"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="CreateSub">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteSub">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ModifyAckDeadline">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ModifyPushEndpoint">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SubExists">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Ack">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Pull">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Message"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PullWait">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Message"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateTopic">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteTopic">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TopicExists">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Publish">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="pointer">
                <type type="ident" def="Message"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ScopePubSub"/>
        <name value="ScopeCloudPlatform"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="net/http"/>
    <import path="testing"/>
    <import path="google.golang.org/cloud/internal"/>
    <import path="golang.org/x/net/context"/>
    <import path="encoding/base64"/>
    <import path="io"/>
    <import path="sync"/>
    <import path="time"/>
    <import path="google.golang.org/api/storage/v1"/>
    <import path="fmt"/>
    <import path="io/ioutil"/>
    <import path="log"/>
    <import path="strings"/>
    <import path="crypto"/>
    <import path="crypto/rand"/>
    <import path="crypto/rsa"/>
    <import path="crypto/sha256"/>
    <import path="crypto/x509"/>
    <import path="encoding/pem"/>
    <import path="errors"/>
    <import path="net/url"/>
    <import path="google.golang.org/api/googleapi"/>
    <import path="bytes"/>
    <import path="crypto/md5"/>
    <import path="math/rand"/>
    <import path="os"/>
    <import path="google.golang.org/cloud/internal/testutil"/>
    <import path="golang.org/x/oauth2"/>
    <import path="golang.org/x/oauth2/google"/>
    <import path="google.golang.org/cloud"/>
    <import path="google.golang.org/cloud/storage"/>
    <import path="strconv"/>
    <import path="google.golang.org/api/pubsub/v1beta1"/>
    <import path="google.golang.org/cloud/pubsub"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="math"/>
    <import path="google.golang.org/appengine"/>
    <import path="google.golang.org/appengine/file"/>
    <import path="google.golang.org/appengine/urlfetch"/>
    <import path="appengine"/>
    <import path="appengine/file"/>
    <import path="appengine/urlfetch"/>
    <import path="flag"/>
    <import path="google.golang.org/cloud/compute/metadata"/>
    <import path="google.golang.org/cloud/internal/datastore"/>
    <import path="reflect"/>
    <import path="unicode"/>
    <import path="encoding/gob"/>
    <import path="encoding/json"/>
    <import path="sort"/>
    <import path="google.golang.org/cloud/datastore"/>
    <import path="google.golang.org/api/container/v1beta1"/>
    <import path="net"/>
  </imports>
</project>
