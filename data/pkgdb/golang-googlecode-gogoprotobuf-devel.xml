<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-googlecode-gogoprotobuf-0-0.11.gitbc946d0.fc23">
  <packages>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/defaultcheck">
      <types/>
      <functions>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/unmarshal">
      <types/>
      <functions>
        <function name="NewUnmarshal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="unmarshal"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUnsafeUnmarshal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="unmarshal"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unmarshal"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unmarshal"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unmarshal"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/protoc-gen-gogo/generator">
      <types>
        <type name="PluginImports" type="interface">
          <method name="NewImport">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Single"/>
            </resultsList>
          </method>
          <method name="GenerateImports">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Single" type="interface">
          <method name="Use">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="IsUsed">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Location">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Plugin" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Init">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Generator"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Generate">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="GenerateImports">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Descriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="DescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="nested">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="bool" name="group"/>
        </type>
        <type type="struct" name="EnumDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="EnumDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
        </type>
        <type type="struct" name="ExtensionDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FieldDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
        </type>
        <type type="struct" name="ImportedDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="ident" def="Object" name="o"/>
        </type>
        <type type="struct" name="FileDescriptor">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FileDescriptorProto"/>
            </type>
          </field>
          <field type="slice" name="desc">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="enum">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="imp">
            <elmtype type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </elmtype>
          </field>
          <field type="map" name="comments">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="SourceCodeInfo_Location"/>
              </type>
            </valtype>
          </field>
          <field type="map" name="exported">
            <keytype type="ident" def="Object"/>
            <valtype type="slice">
              <elmtype type="ident" def="symbol"/>
            </valtype>
          </field>
          <field type="ident" def="int" name="index"/>
        </type>
        <type name="Object" type="interface">
          <method name="PackageName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TypeName">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="File">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="descriptor"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Generator">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Buffer"/>
            </type>
          </field>
          <field type="pointer" name="Request">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorRequest"/>
            </type>
          </field>
          <field type="pointer" name="Response">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorResponse"/>
            </type>
          </field>
          <field type="map" name="Param">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PackageImportPath"/>
          <field type="ident" def="string" name="ImportPrefix"/>
          <field type="map" name="ImportMap">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Pkg">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="packageName"/>
          <field type="slice" name="allFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="genFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="pointer" name="file">
            <type type="ident" def="FileDescriptor"/>
          </field>
          <field type="map" name="usedPackages">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="map" name="typeNameToObject">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Object"/>
          </field>
          <field type="slice" name="customImports">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="indent"/>
          <field type="map" name="writtenImports">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Messages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Descriptor"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Enums">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptor"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="IsGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TypeNameByObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
          </resultsList>
        </function>
        <function name="NewPluginImports">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="pluginImports"/>
            </type>
          </resultsList>
        </function>
        <function name="NewImport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pluginImports"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Single"/>
          </resultsList>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pluginImports"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Use">
          <recvList>
            <type type="pointer">
              <type type="ident" def="importedPackage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsUsed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="importedPackage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="importedPackage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Location">
          <recvList>
            <type type="pointer">
              <type type="ident" def="importedPackage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFieldName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoTypeToName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EmbedFieldName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GeneratePlugin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Plugin"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetCustomType">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FileName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AllFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RegisterPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="Plugin"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="File">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DescName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageSymbol"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="enumSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="constOrVarSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CommandLineParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DefaultPackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterUniquePackageName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetPackageNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WrapTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="BuildTypeNameMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ObjectNamed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
          </resultsList>
        </function>
        <function name="P">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrintImport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="In">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Out">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GenerateAllFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="FileOf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeNameWithPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RecordTypeUse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CamelCase">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CamelCaseSlice">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/io">
      <types>
        <type name="Writer" type="interface">
          <method name="WriteMsg">
            <paramsList>
              <type type="selector">
                <prefix value="proto"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="WriteCloser" type="interface"/>
        <type name="Reader" type="interface">
          <method name="ReadMsg">
            <paramsList>
              <type type="selector">
                <prefix value="proto"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ReadCloser" type="interface"/>
      </types>
      <functions>
        <function name="NewDelimitedWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="WriteCloser"/>
          </resultsList>
        </function>
        <function name="WriteMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varintWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varintWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDelimitedReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReadCloser"/>
          </resultsList>
        </function>
        <function name="ReadMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varintReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varintReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint32DelimitedWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="binary"/>
              <item value="ByteOrder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="WriteCloser"/>
          </resultsList>
        </function>
        <function name="NewSizeUint32DelimitedWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="binary"/>
              <item value="ByteOrder"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="WriteCloser"/>
          </resultsList>
        </function>
        <function name="WriteMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint32Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint32Writer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint32DelimitedReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="binary"/>
              <item value="ByteOrder"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReadCloser"/>
          </resultsList>
        </function>
        <function name="ReadMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint32Reader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint32Reader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFullWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="WriteCloser"/>
          </resultsList>
        </function>
        <function name="WriteMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fullWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fullWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFullReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReadCloser"/>
          </resultsList>
        </function>
        <function name="ReadMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fullReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fullReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/fieldpath">
      <types>
        <type type="struct" name="Unmarshaler">
          <field type="ident" def="unmarshaler" name=""/>
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Compiled">
          <field type="map" name="children">
            <keytype type="ident" def="uint64"/>
            <valtype type="pointer">
              <type type="ident" def="Compiled"/>
            </valtype>
          </field>
          <field type="slice" name="unmarshalers">
            <elmtype type="ident" def="unmarshaler"/>
          </field>
        </type>
        <type name="Sort" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
          <method name="Len">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Swap">
            <paramsList>
              <type type="ident" def="int"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Float64Handler" type="interface">
          <method name="Float64">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Float32Handler" type="interface">
          <method name="Float32">
            <paramsList>
              <type type="ident" def="float32"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Int64Handler" type="interface">
          <method name="Int64">
            <paramsList>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Int32Handler" type="interface">
          <method name="Int32">
            <paramsList>
              <type type="ident" def="int32"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Uint64Handler" type="interface">
          <method name="Uint64">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Uint32Handler" type="interface">
          <method name="Uint32">
            <paramsList>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="BoolHandler" type="interface">
          <method name="Bool">
            <paramsList>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="BytesHandler" type="interface">
          <method name="Bytes">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="StringHandler" type="interface">
          <method name="String">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="GenericPath" type="interface">
          <method name="NewUnmarshaler">
            <paramsList>
              <type type="ident" def="handler"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Unmarshaler"/>
              </type>
            </resultsList>
          </method>
          <method name="IsMessage">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="PackedFloat64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="Float64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="Float64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="Float64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Float64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="float64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedFloat32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float32"/>
          </field>
        </type>
        <type type="struct" name="Float32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float32"/>
          </field>
        </type>
        <type type="struct" name="Float32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="float32"/>
          </field>
        </type>
        <type type="struct" name="Float32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Float32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="float32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedInt32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Int32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Int32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Int32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Int32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedInt64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Int64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Int64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Int64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Int64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedUint64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Uint64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Uint64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Uint64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Uint64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="uint64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedUint32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Uint32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Uint32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Uint32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Uint32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="uint32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedSint32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sint32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sint32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sint32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Sint32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedSint64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sint64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sint64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sint64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Sint64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedFixed32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Fixed32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Fixed32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="Fixed32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Fixed32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="uint32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedFixed64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Fixed64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Fixed64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Fixed64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Fixed64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="uint64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedSfixed32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sfixed32Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sfixed32SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int32"/>
          </field>
        </type>
        <type type="struct" name="Sfixed32Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Sfixed32SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int32"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedSfixed64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sfixed64Path">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sfixed64SinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="Sfixed64Sorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="Sfixed64SinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="int64"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedBoolPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="BoolPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedStringPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="StringPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="StringSinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="def">
            <type type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="StringSorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="StringSinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="pointer">
              <type type="ident" def="string"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="PackedBytesPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="def">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BytesPath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="def">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BytesSinglePath">
          <field type="slice" name="path">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="def">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BytesSorter">
          <field type="ident" def="Sort" name=""/>
          <field type="pointer" name="path">
            <type type="ident" def="BytesSinglePath"/>
          </field>
          <field type="slice" name="mem">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="saved">
            <elmtype type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Compile">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="pointer">
                <type type="ident" def="Unmarshaler"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Compiled"/>
            </type>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compiled"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Float64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Float32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Int64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Int32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Uint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Uint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Bool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ToString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TestNew">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errUndefinedMsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ToMessages">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errMerge"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NoMerge">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGenericPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="GenericPath"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewUnmarshaler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericPath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecPackedFloat64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Float64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFloat64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFloat64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedFloat64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedFloat64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedFloat64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedFloat64Path"/>
            </type>
            <type type="ident" def="Float64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecFloat64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Float64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFloat64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFloat64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Float64Path"/>
            </type>
            <type type="ident" def="Float64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFloat64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFloat64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Float64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedFloat32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Float32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFloat32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFloat32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedFloat32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedFloat32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedFloat32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedFloat32Path"/>
            </type>
            <type type="ident" def="Float32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecFloat32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Float32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFloat32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFloat32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Float32Path"/>
            </type>
            <type type="ident" def="Float32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFloat32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFloat32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Float32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Float32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedInt32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedInt32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedInt32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedInt32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedInt32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedInt32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedInt32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecInt32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewInt32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInt32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Int32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewInt32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInt32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Int32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedInt64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedInt64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedInt64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedInt64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedInt64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedInt64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedInt64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecInt64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewInt64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInt64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Int64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewInt64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInt64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Int64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Int64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Int64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedUint64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedUint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedUint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedUint64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedUint64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedUint64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedUint64Path"/>
            </type>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecUint64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUint64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Uint64Path"/>
            </type>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUint64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Uint64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedUint32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedUint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedUint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedUint32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedUint32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedUint32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedUint32Path"/>
            </type>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecUint32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUint32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Uint32Path"/>
            </type>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUint32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUint32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Uint32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Uint32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Uint32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedSint32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedSint32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedSint32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedSint32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedSint32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecSint32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSint32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSint32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Sint32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSint32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSint32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Sint32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedSint64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedSint64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedSint64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedSint64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedSint64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecSint64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSint64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSint64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Sint64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSint64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSint64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Sint64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sint64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sint64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedFixed32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedFixed32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedFixed32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedFixed32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedFixed32Path"/>
            </type>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecFixed32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFixed32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFixed32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Fixed32Path"/>
            </type>
            <type type="ident" def="Uint32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFixed32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFixed32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Fixed32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedFixed64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedFixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedFixed64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedFixed64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedFixed64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedFixed64Path"/>
            </type>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecFixed64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFixed64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFixed64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Fixed64Path"/>
            </type>
            <type type="ident" def="Uint64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFixed64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFixed64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Fixed64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fixed64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fixed64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedSfixed32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedSfixed32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedSfixed32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecSfixed32">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSfixed32Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSfixed32Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Path"/>
            </type>
            <type type="ident" def="Int32Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSfixed32SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSfixed32Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Sfixed32SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed32Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedSfixed64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedSfixed64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedSfixed64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedSfixed64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecSfixed64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSfixed64Path">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Path"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSfixed64Unmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Path"/>
            </type>
            <type type="ident" def="Int64Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSfixed64SinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSfixed64Sorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="Sfixed64SinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Sorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sfixed64Sorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedBool">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="BoolHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedBoolPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedBoolPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedBoolPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedBoolPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedBoolUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedBoolPath"/>
            </type>
            <type type="ident" def="BoolHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecBool">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="BoolHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBoolPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="BoolPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBoolUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="BoolPath"/>
            </type>
            <type type="ident" def="BoolHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecPackedString">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="StringHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedStringPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedStringPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedStringPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedStringPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedStringUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedStringPath"/>
            </type>
            <type type="ident" def="StringHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecString">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="StringHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="NewStringPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StringPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStringUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="StringPath"/>
            </type>
            <type type="ident" def="StringHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="NewStringSinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStringSorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="StringSinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StringSorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecPackedBytes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="BytesHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedBytesPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedBytesPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPackedBytesPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PackedBytesPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPackedBytesUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PackedBytesPath"/>
            </type>
            <type type="ident" def="BytesHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="DecBytes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="BytesHandler"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBytesPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="BytesPath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBytesUnmarshaler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="BytesPath"/>
            </type>
            <type type="ident" def="BytesHandler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Unmarshaler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBytesSinglePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalFirst">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBytesSorter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Sort"/>
            <type type="pointer">
              <type type="ident" def="BytesSinglePath"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="BytesSorter"/>
            </type>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errUndefined"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Expand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Collapse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errType"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errChild"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDefaultFloat64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultFloat32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultUint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDefaultString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fdesc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TestDefault">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="def"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/marshalto">
      <types>
        <type name="NumGen" type="interface">
          <method name="Next">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Current">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewNumGen">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="NumGen"/>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="numGen"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Current">
          <recvList>
            <type type="pointer">
              <type type="ident" def="numGen"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewMarshal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="marshalto"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUnsafeMarshal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="marshalto"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="marshalto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="marshalto"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="marshalto"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/proto">
      <types>
        <type type="struct" name="ParseError">
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="int" name="Line"/>
          <field type="ident" def="int" name="Offset"/>
        </type>
        <type type="struct" name="StructProperties">
          <field type="slice" name="Prop">
            <elmtype type="pointer">
              <type type="ident" def="Properties"/>
            </elmtype>
          </field>
          <field type="ident" def="int" name="reqCount"/>
          <field type="ident" def="tagMap" name="decoderTags"/>
          <field type="map" name="decoderOrigNames">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="ident" def="field" name="unrecField"/>
          <field type="ident" def="bool" name="extendable"/>
        </type>
        <type type="struct" name="Properties">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="OrigName"/>
          <field type="ident" def="string" name="Wire"/>
          <field type="ident" def="int" name="WireType"/>
          <field type="ident" def="int" name="Tag"/>
          <field type="ident" def="bool" name="Required"/>
          <field type="ident" def="bool" name="Optional"/>
          <field type="ident" def="bool" name="Repeated"/>
          <field type="ident" def="bool" name="Packed"/>
          <field type="ident" def="string" name="Enum"/>
          <field type="ident" def="string" name="Default"/>
          <field type="ident" def="bool" name="HasDefault"/>
          <field type="ident" def="string" name="CustomType"/>
          <field type="ident" def="uint64" name="def_uint64"/>
          <field type="ident" def="encoder" name="enc"/>
          <field type="ident" def="valueEncoder" name="valEnc"/>
          <field type="ident" def="field" name="field"/>
          <field type="slice" name="tagcode">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="array" name="tagbuf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="stype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="selector" name="sstype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="selector" name="ctype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="pointer" name="sprop">
            <type type="ident" def="StructProperties"/>
          </field>
          <field type="ident" def="bool" name="isMarshaler"/>
          <field type="ident" def="bool" name="isUnmarshaler"/>
          <field type="ident" def="sizer" name="size"/>
          <field type="ident" def="valueSizer" name="valSize"/>
          <field type="ident" def="decoder" name="dec"/>
          <field type="ident" def="valueDecoder" name="valDec"/>
          <field type="ident" def="decoder" name="packedDec"/>
        </type>
        <type type="struct" name="MessageSet">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="_MessageSet_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Message" type="interface">
          <method name="Reset">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="ProtoMessage">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Stats">
          <field type="ident" def="uint64" name="Emalloc"/>
          <field type="ident" def="uint64" name="Dmalloc"/>
          <field type="ident" def="uint64" name="Encode"/>
          <field type="ident" def="uint64" name="Decode"/>
          <field type="ident" def="uint64" name="Chit"/>
          <field type="ident" def="uint64" name="Cmiss"/>
          <field type="ident" def="uint64" name="Size"/>
        </type>
        <type type="struct" name="Buffer">
          <field type="slice" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="slice" name="bools">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="uint32s">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="uint64s">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="int32s">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="int64s">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="float32s">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="float64s">
            <elmtype type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="ExtensionRange">
          <field type="ident" def="int32" name="Start"/>
          <field type="ident" def="int32" name="End"/>
        </type>
        <type type="struct" name="ExtensionDesc">
          <field type="ident" def="Message" name="ExtendedType"/>
          <field type="interface" name="ExtensionType"/>
          <field type="ident" def="int32" name="Field"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Tag"/>
        </type>
        <type type="struct" name="Extension">
          <field type="pointer" name="desc">
            <type type="ident" def="ExtensionDesc"/>
          </field>
          <field type="interface" name="value"/>
          <field type="slice" name="enc">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Sizer" type="interface">
          <method name="Size">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RequiredNotSetError">
          <field type="ident" def="string" name="field"/>
        </type>
        <type name="Marshaler" type="interface">
          <method name="Marshal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Unmarshaler" type="interface">
          <method name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParseError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="token"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalText">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="byte"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MarshalText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CompactText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompactTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Skip">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="reflect"/>
                <item value="StructField"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetProperties">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterEnum">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterMessageSetType">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="int32"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MarshalJSONEnum">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Stats"/>
          </resultsList>
        </function>
        <function name="NewBuffer">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetBuf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Bool">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="Int32">
          <recvList/>
          <paramsList>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int64">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Float32">
          <recvList/>
          <paramsList>
            <type type="ident" def="float32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="Float64">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint32">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint64">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="EnumName">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSONEnum">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int32"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DebugPrint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetDefaults">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetBoolExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Extension"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SizeOfExtensionMap">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="sortableExtensions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="sortableExtensions"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="sortableExtensions"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="sortableExtensions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StringFromExtensionsMap">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StringFromExtensionsBytes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EncodeExtensionMap">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetRawExtension">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BytesToExtensionsMap">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewExtension">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Extension"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="ident" def="Extension"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetUnsafeExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="ident" def="int32"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetUnsafeExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetRawExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="ident" def="int32"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HasExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ClearExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterExtension">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisteredExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequiredNotSetError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMerge">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Message"/>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="WireVarint"/>
        <name value="WireFixed64"/>
        <name value="WireBytes"/>
        <name value="WireStartGroup"/>
        <name value="WireEndGroup"/>
        <name value="WireFixed32"/>
        <name value="ErrNoMessageTypeId"/>
        <name value="ErrMissingExtension"/>
        <name value="ErrRepeatedHasNil"/>
        <name value="ErrNil"/>
      </names>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/testgen">
      <types>
        <type name="TestPlugin" type="interface">
          <method name="Generate">
            <paramsList>
              <type type="selector">
                <prefix value="generator"/>
                <item value="PluginImports"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="generator"/>
                  <item value="FileDescriptor"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="NewTestPlugin" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="TestPlugin"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="RegisterTestPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="NewTestPlugin"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="testProto"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="testJson"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="testText"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/enumstringer">
      <types/>
      <functions>
        <function name="NewEnumStringer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="enumstringer"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="enumstringer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="enumstringer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="enumstringer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/embedcheck">
      <types/>
      <functions>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/protoc-gen-gogo/version">
      <types/>
      <functions>
        <function name="Get">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AtLeast">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/size">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewSize">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="size"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="size"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="size"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="size"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/face">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/protoc-gen-gogo">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/protoc-gen-gogo/plugin">
      <types>
        <type type="struct" name="CodeGeneratorRequest">
          <field type="slice" name="FileToGenerate">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Parameter">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="ProtoFile">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="google_protobuf"/>
                <item value="FileDescriptorProto"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse">
          <field type="pointer" name="Error">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse_File">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InsertionPoint">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Content">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFileToGenerate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetParameter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetProtoFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="google_protobuf"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CodeGeneratorResponse_File"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInsertionPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/populate">
      <types>
        <type name="VarGen" type="interface">
          <method name="Next">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Current">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewVarGen">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="VarGen"/>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varGen"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Current">
          <recvList>
            <type type="pointer">
              <type type="ident" def="varGen"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Descriptor"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/gostring">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewGoString">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="gostring"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gostring"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gostring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gostring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/equal">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/union">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewUnion">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="union"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="union"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="union"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="union"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/protoc-gen-gogo/descriptor">
      <types>
        <type name="FieldDescriptorProto_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldDescriptorProto_Label" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FileOptions_OptimizeMode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldOptions_CType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="FileDescriptorSet">
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Package">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Dependency">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="PublicDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="WeakDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="MessageType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Service">
            <elmtype type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FileOptions"/>
          </field>
          <field type="pointer" name="SourceCodeInfo">
            <type type="ident" def="SourceCodeInfo"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="NestedType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="ExtensionRange">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MessageOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto_ExtensionRange">
          <field type="pointer" name="Start">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Label">
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </field>
          <field type="pointer" name="TypeName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Extendee">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DefaultValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FieldOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumValueOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Method">
            <elmtype type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="ServiceOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="OutputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MethodOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileOptions">
          <field type="pointer" name="JavaPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaOuterClassname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaMultipleFiles">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenerateEqualsAndHash">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="OptimizeFor">
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </field>
          <field type="pointer" name="GoPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="CcGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="PyGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageOptions">
          <field type="pointer" name="MessageSetWireFormat">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="NoStandardDescriptorAccessor">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldOptions">
          <field type="pointer" name="Ctype">
            <type type="ident" def="FieldOptions_CType"/>
          </field>
          <field type="pointer" name="Packed">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Lazy">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ExperimentalMapKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Weak">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="InterpretedCustomtype">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumOptions">
          <field type="pointer" name="AllowAlias">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueOptions">
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceOptions">
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodOptions">
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption">
          <field type="slice" name="Name">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </elmtype>
          </field>
          <field type="pointer" name="IdentifierValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="PositiveIntValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="NegativeIntValue">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="DoubleValue">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="StringValue">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="AggregateValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption_NamePart">
          <field type="pointer" name="NamePart">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IsExtension">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo">
          <field type="slice" name="Location">
            <elmtype type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo_Location">
          <field type="slice" name="Path">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Span">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="pointer" name="LeadingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TrailingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="WireType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetKeyUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="IsExtendable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="FindExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="FindExtensionByFieldNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="FindMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFieldDescriptor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEnum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </resultsList>
        </function>
        <function name="IsEnum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FileDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPublicDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWeakDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ServiceDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSourceCodeInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNestedType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtensionRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto_ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </resultsList>
        </function>
        <function name="GetTypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetExtendee">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDefaultValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumValueDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MethodDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOutputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetJavaPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaOuterClassname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaMultipleFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenerateEqualsAndHash">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOptimizeFor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </resultsList>
        </function>
        <function name="GetGoPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCcGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPyGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageSetWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetNoStandardDescriptorAccessor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCtype">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldOptions_CType"/>
          </resultsList>
        </function>
        <function name="GetPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLazy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetExperimentalMapKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetWeak">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetInterpretedCustomtype">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetAllowAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption_NamePart"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetIdentifierValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPositiveIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetNegativeIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetDoubleValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAggregateValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNamePart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIsExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SourceCodeInfo_Location"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSpan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLeadingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTrailingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FieldDescriptorProto_TYPE_DOUBLE"/>
        <name value="FieldDescriptorProto_TYPE_FLOAT"/>
        <name value="FieldDescriptorProto_TYPE_INT64"/>
        <name value="FieldDescriptorProto_TYPE_UINT64"/>
        <name value="FieldDescriptorProto_TYPE_INT32"/>
        <name value="FieldDescriptorProto_TYPE_FIXED64"/>
        <name value="FieldDescriptorProto_TYPE_FIXED32"/>
        <name value="FieldDescriptorProto_TYPE_BOOL"/>
        <name value="FieldDescriptorProto_TYPE_STRING"/>
        <name value="FieldDescriptorProto_TYPE_GROUP"/>
        <name value="FieldDescriptorProto_TYPE_MESSAGE"/>
        <name value="FieldDescriptorProto_TYPE_BYTES"/>
        <name value="FieldDescriptorProto_TYPE_UINT32"/>
        <name value="FieldDescriptorProto_TYPE_ENUM"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED32"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED64"/>
        <name value="FieldDescriptorProto_TYPE_SINT32"/>
        <name value="FieldDescriptorProto_TYPE_SINT64"/>
        <name value="FieldDescriptorProto_Type_name"/>
        <name value="FieldDescriptorProto_Type_value"/>
        <name value="FieldDescriptorProto_LABEL_OPTIONAL"/>
        <name value="FieldDescriptorProto_LABEL_REQUIRED"/>
        <name value="FieldDescriptorProto_LABEL_REPEATED"/>
        <name value="FieldDescriptorProto_Label_name"/>
        <name value="FieldDescriptorProto_Label_value"/>
        <name value="FileOptions_SPEED"/>
        <name value="FileOptions_CODE_SIZE"/>
        <name value="FileOptions_LITE_RUNTIME"/>
        <name value="FileOptions_OptimizeMode_name"/>
        <name value="FileOptions_OptimizeMode_value"/>
        <name value="FieldOptions_STRING"/>
        <name value="FieldOptions_CORD"/>
        <name value="FieldOptions_STRING_PIECE"/>
        <name value="FieldOptions_CType_name"/>
        <name value="FieldOptions_CType_value"/>
        <name value="Default_FileOptions_JavaMultipleFiles"/>
        <name value="Default_FileOptions_JavaGenerateEqualsAndHash"/>
        <name value="Default_FileOptions_OptimizeFor"/>
        <name value="Default_FileOptions_CcGenericServices"/>
        <name value="Default_FileOptions_JavaGenericServices"/>
        <name value="Default_FileOptions_PyGenericServices"/>
        <name value="Default_MessageOptions_MessageSetWireFormat"/>
        <name value="Default_MessageOptions_NoStandardDescriptorAccessor"/>
        <name value="Default_FieldOptions_Ctype"/>
        <name value="Default_FieldOptions_Lazy"/>
        <name value="Default_FieldOptions_Deprecated"/>
        <name value="Default_FieldOptions_Weak"/>
        <name value="Default_EnumOptions_AllowAlias"/>
      </names>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/description">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewPlugin">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/parser">
      <types/>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errCmd"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorSet"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/gogoprotobuf/plugin/stringer">
      <types/>
      <functions>
        <function name="NewTest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="testgen"/>
              <item value="TestPlugin"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="test"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="generator"/>
              <item value="PluginImports"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewStringer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="stringer"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="code.google.com/p/gogoprotobuf/proto"/>
    <import path="code.google.com/p/gogoprotobuf/protoc-gen-gogo/generator"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/defaultcheck"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/description"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/embedcheck"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/enumstringer"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/equal"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/face"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/gostring"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/marshalto"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/populate"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/size"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/stringer"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/union"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/unmarshal"/>
    <import path="code.google.com/p/gogoprotobuf/plugin/testgen"/>
    <import path="strings"/>
    <import path="fmt"/>
    <import path="os/exec"/>
    <import path="strconv"/>
    <import path="math"/>
    <import path="code.google.com/p/gogoprotobuf/protoc-gen-gogo/descriptor"/>
    <import path="testing"/>
    <import path="bytes"/>
    <import path="go/parser"/>
    <import path="go/printer"/>
    <import path="go/token"/>
    <import path="code.google.com/p/gogoprotobuf/gogoproto"/>
    <import path="code.google.com/p/gogoprotobuf/protoc-gen-gogo/plugin"/>
    <import path="path"/>
    <import path="log"/>
    <import path="unicode"/>
    <import path="unicode/utf8"/>
    <import path="sort"/>
    <import path="reflect"/>
    <import path="errors"/>
    <import path="encoding"/>
    <import path="bufio"/>
    <import path="io"/>
    <import path="sync"/>
    <import path="unsafe"/>
    <import path="encoding/json"/>
    <import path="math/rand"/>
    <import path="runtime/debug"/>
    <import path="time"/>
    <import path="encoding/binary"/>
    <import path="code.google.com/p/gogoprotobuf/io"/>
    <import path="code.google.com/p/gogoprotobuf/test"/>
    <import path="code.google.com/p/gogoprotobuf/fieldpath"/>
  </imports>
</project>
