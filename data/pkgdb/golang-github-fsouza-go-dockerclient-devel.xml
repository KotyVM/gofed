<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-fsouza-go-dockerclient-0.2.1-8.gitf95d189.fc23">
  <packages>
    <package importpath="github.com/fsouza/go-dockerclient">
      <types>
        <type name="Signal" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="APIImages">
          <field type="ident" def="string" name="ID"/>
          <field type="slice" name="RepoTags">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int64" name="Created"/>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="int64" name="VirtualSize"/>
          <field type="ident" def="string" name="ParentID"/>
          <field type="slice" name="RepoDigests">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Image">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Parent"/>
          <field type="ident" def="string" name="Comment"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="Config" name="ContainerConfig"/>
          <field type="ident" def="string" name="DockerVersion"/>
          <field type="ident" def="string" name="Author"/>
          <field type="pointer" name="Config">
            <type type="ident" def="Config"/>
          </field>
          <field type="ident" def="string" name="Architecture"/>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="int64" name="VirtualSize"/>
        </type>
        <type type="struct" name="ImageHistory">
          <field type="ident" def="string" name="ID"/>
          <field type="slice" name="Tags">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int64" name="Created"/>
          <field type="ident" def="string" name="CreatedBy"/>
          <field type="ident" def="int64" name="Size"/>
        </type>
        <type type="struct" name="ImagePre012">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Parent"/>
          <field type="ident" def="string" name="Comment"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="Config" name="ContainerConfig"/>
          <field type="ident" def="string" name="DockerVersion"/>
          <field type="ident" def="string" name="Author"/>
          <field type="pointer" name="Config">
            <type type="ident" def="Config"/>
          </field>
          <field type="ident" def="string" name="Architecture"/>
          <field type="ident" def="int64" name="Size"/>
        </type>
        <type type="struct" name="ListImagesOptions">
          <field type="ident" def="bool" name="All"/>
          <field type="map" name="Filters">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
          <field type="ident" def="bool" name="Digests"/>
        </type>
        <type type="struct" name="RemoveImageOptions">
          <field type="ident" def="bool" name="Force"/>
          <field type="ident" def="bool" name="NoPrune"/>
        </type>
        <type type="struct" name="PushImageOptions">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="ident" def="string" name="Registry"/>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="RawJSONStream"/>
        </type>
        <type type="struct" name="PullImageOptions">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Registry"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="RawJSONStream"/>
        </type>
        <type type="struct" name="LoadImageOptions">
          <field type="selector" name="InputStream">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
        </type>
        <type type="struct" name="ExportImageOptions">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="ExportImagesOptions">
          <field type="slice" name="Names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="ImportImageOptions">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="selector" name="InputStream">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="BuildImageOptions">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Dockerfile"/>
          <field type="ident" def="bool" name="NoCache"/>
          <field type="ident" def="bool" name="SuppressOutput"/>
          <field type="ident" def="bool" name="Pull"/>
          <field type="ident" def="bool" name="RmTmpContainer"/>
          <field type="ident" def="bool" name="ForceRmTmpContainer"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="Memswap"/>
          <field type="ident" def="int64" name="CPUShares"/>
          <field type="ident" def="string" name="CPUSetCPUs"/>
          <field type="selector" name="InputStream">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="RawJSONStream"/>
          <field type="ident" def="string" name="Remote"/>
          <field type="ident" def="AuthConfiguration" name="Auth"/>
          <field type="ident" def="AuthConfigurations" name="AuthConfigs"/>
          <field type="ident" def="string" name="ContextDir"/>
        </type>
        <type type="struct" name="TagImageOptions">
          <field type="ident" def="string" name="Repo"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="ident" def="bool" name="Force"/>
        </type>
        <type type="struct" name="APIImageSearch">
          <field type="ident" def="string" name="Description"/>
          <field type="ident" def="bool" name="IsOfficial"/>
          <field type="ident" def="bool" name="IsAutomated"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="StarCount"/>
        </type>
        <type type="struct" name="CreateExecOptions">
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Container"/>
        </type>
        <type type="struct" name="StartExecOptions">
          <field type="ident" def="bool" name="Detach"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="selector" name="InputStream">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="ErrorStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="RawTerminal"/>
          <field type="channel" dir="3" name="Success">
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="Exec">
          <field type="ident" def="string" name="ID"/>
        </type>
        <type type="struct" name="ExecProcessConfig">
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="string" name="EntryPoint"/>
          <field type="slice" name="Arguments">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ExecInspect">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="bool" name="Running"/>
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="bool" name="OpenStdin"/>
          <field type="ident" def="bool" name="OpenStderr"/>
          <field type="ident" def="bool" name="OpenStdout"/>
          <field type="ident" def="ExecProcessConfig" name="ProcessConfig"/>
          <field type="ident" def="Container" name="Container"/>
        </type>
        <type type="struct" name="NoSuchExec">
          <field type="ident" def="string" name="ID"/>
        </type>
        <type type="struct" name="APIEvents">
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="From"/>
          <field type="ident" def="int64" name="Time"/>
        </type>
        <type name="Env" type="slice">
          <elmtype type="ident" def="string"/>
        </type>
        <type type="struct" name="ListContainersOptions">
          <field type="ident" def="bool" name="All"/>
          <field type="ident" def="bool" name="Size"/>
          <field type="ident" def="int" name="Limit"/>
          <field type="ident" def="string" name="Since"/>
          <field type="ident" def="string" name="Before"/>
          <field type="map" name="Filters">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="APIPort">
          <field type="ident" def="int64" name="PrivatePort"/>
          <field type="ident" def="int64" name="PublicPort"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="IP"/>
        </type>
        <type type="struct" name="APIContainers">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="Command"/>
          <field type="ident" def="int64" name="Created"/>
          <field type="ident" def="string" name="Status"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="APIPort"/>
          </field>
          <field type="ident" def="int64" name="SizeRw"/>
          <field type="ident" def="int64" name="SizeRootFs"/>
          <field type="slice" name="Names">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="Port" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="State">
          <field type="ident" def="bool" name="Running"/>
          <field type="ident" def="bool" name="Paused"/>
          <field type="ident" def="bool" name="Restarting"/>
          <field type="ident" def="bool" name="OOMKilled"/>
          <field type="ident" def="int" name="Pid"/>
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="string" name="Error"/>
          <field type="selector" name="StartedAt">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="PortBinding">
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="HostPort"/>
        </type>
        <type name="PortMapping" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type type="struct" name="NetworkSettings">
          <field type="ident" def="string" name="IPAddress"/>
          <field type="ident" def="int" name="IPPrefixLen"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="map" name="PortMapping">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="PortMapping"/>
          </field>
          <field type="map" name="Ports">
            <keytype type="ident" def="Port"/>
            <valtype type="slice">
              <elmtype type="ident" def="PortBinding"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="Domainname"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CPUShares"/>
          <field type="ident" def="string" name="CPUSet"/>
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="slice" name="PortSpecs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="ExposedPorts">
            <keytype type="ident" def="Port"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="bool" name="OpenStdin"/>
          <field type="ident" def="bool" name="StdinOnce"/>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DNS">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Image"/>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="ident" def="string" name="VolumesFrom"/>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="ident" def="string" name="MacAddress"/>
          <field type="slice" name="Entrypoint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="NetworkDisabled"/>
          <field type="slice" name="SecurityOpts">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="OnBuild">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LogConfig">
          <field type="ident" def="string" name="Type"/>
          <field type="map" name="Config">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="SwarmNode">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="string" name="Addr"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int64" name="CPUs"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Path"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Config">
            <type type="ident" def="Config"/>
          </field>
          <field type="ident" def="State" name="State"/>
          <field type="ident" def="string" name="Image"/>
          <field type="pointer" name="Node">
            <type type="ident" def="SwarmNode"/>
          </field>
          <field type="pointer" name="NetworkSettings">
            <type type="ident" def="NetworkSettings"/>
          </field>
          <field type="ident" def="string" name="SysInitPath"/>
          <field type="ident" def="string" name="ResolvConfPath"/>
          <field type="ident" def="string" name="HostnamePath"/>
          <field type="ident" def="string" name="HostsPath"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Driver"/>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="VolumesRW">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="pointer" name="HostConfig">
            <type type="ident" def="HostConfig"/>
          </field>
          <field type="slice" name="ExecIDs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="AppArmorProfile"/>
        </type>
        <type type="struct" name="RenameContainerOptions">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="CreateContainerOptions">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="Config">
            <type type="ident" def="Config"/>
          </field>
          <field type="pointer" name="HostConfig">
            <type type="ident" def="HostConfig"/>
          </field>
        </type>
        <type type="struct" name="KeyValuePair">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type type="struct" name="RestartPolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="MaximumRetryCount"/>
        </type>
        <type type="struct" name="Device">
          <field type="ident" def="string" name="PathOnHost"/>
          <field type="ident" def="string" name="PathInContainer"/>
          <field type="ident" def="string" name="CgroupPermissions"/>
        </type>
        <type type="struct" name="HostConfig">
          <field type="slice" name="Binds">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="CapAdd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="CapDrop">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ContainerIDFile"/>
          <field type="slice" name="LxcConf">
            <elmtype type="ident" def="KeyValuePair"/>
          </field>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="map" name="PortBindings">
            <keytype type="ident" def="Port"/>
            <valtype type="slice">
              <elmtype type="ident" def="PortBinding"/>
            </valtype>
          </field>
          <field type="slice" name="Links">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="PublishAllPorts"/>
          <field type="slice" name="DNS">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DNSSearch">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ExtraHosts">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="VolumesFrom">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="NetworkMode"/>
          <field type="ident" def="string" name="IpcMode"/>
          <field type="ident" def="string" name="PidMode"/>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="slice" name="Devices">
            <elmtype type="ident" def="Device"/>
          </field>
          <field type="ident" def="LogConfig" name="LogConfig"/>
          <field type="ident" def="bool" name="ReadonlyRootfs"/>
          <field type="slice" name="SecurityOpt">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="CgroupParent"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CPUShares"/>
          <field type="ident" def="string" name="CPUSet"/>
          <field type="ident" def="int64" name="CPUQuota"/>
          <field type="ident" def="int64" name="CPUPeriod"/>
        </type>
        <type type="struct" name="TopResult">
          <field type="slice" name="Titles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Processes">
            <elmtype type="slice">
              <elmtype type="ident" def="string"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="Stats">
          <field type="selector" name="Read">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="struct" name="Network">
            <field type="ident" def="uint64" name="RxDropped"/>
            <field type="ident" def="uint64" name="RxBytes"/>
            <field type="ident" def="uint64" name="RxErrors"/>
            <field type="ident" def="uint64" name="TxPackets"/>
            <field type="ident" def="uint64" name="TxDropped"/>
            <field type="ident" def="uint64" name="RxPackets"/>
            <field type="ident" def="uint64" name="TxErrors"/>
            <field type="ident" def="uint64" name="TxBytes"/>
          </field>
          <field type="struct" name="MemoryStats">
            <field type="struct" name="Stats">
              <field type="ident" def="uint64" name="TotalPgmafault"/>
              <field type="ident" def="uint64" name="Cache"/>
              <field type="ident" def="uint64" name="MappedFile"/>
              <field type="ident" def="uint64" name="TotalInactiveFile"/>
              <field type="ident" def="uint64" name="Pgpgout"/>
              <field type="ident" def="uint64" name="Rss"/>
              <field type="ident" def="uint64" name="TotalMappedFile"/>
              <field type="ident" def="uint64" name="Writeback"/>
              <field type="ident" def="uint64" name="Unevictable"/>
              <field type="ident" def="uint64" name="Pgpgin"/>
              <field type="ident" def="uint64" name="TotalUnevictable"/>
              <field type="ident" def="uint64" name="Pgmajfault"/>
              <field type="ident" def="uint64" name="TotalRss"/>
              <field type="ident" def="uint64" name="TotalRssHuge"/>
              <field type="ident" def="uint64" name="TotalWriteback"/>
              <field type="ident" def="uint64" name="TotalInactiveAnon"/>
              <field type="ident" def="uint64" name="RssHuge"/>
              <field type="ident" def="uint64" name="HierarchicalMemoryLimit"/>
              <field type="ident" def="uint64" name="TotalPgfault"/>
              <field type="ident" def="uint64" name="TotalActiveFile"/>
              <field type="ident" def="uint64" name="ActiveAnon"/>
              <field type="ident" def="uint64" name="TotalActiveAnon"/>
              <field type="ident" def="uint64" name="TotalPgpgout"/>
              <field type="ident" def="uint64" name="TotalCache"/>
              <field type="ident" def="uint64" name="InactiveAnon"/>
              <field type="ident" def="uint64" name="ActiveFile"/>
              <field type="ident" def="uint64" name="Pgfault"/>
              <field type="ident" def="uint64" name="InactiveFile"/>
              <field type="ident" def="uint64" name="TotalPgpgin"/>
            </field>
            <field type="ident" def="uint64" name="MaxUsage"/>
            <field type="ident" def="uint64" name="Usage"/>
            <field type="ident" def="uint64" name="Failcnt"/>
            <field type="ident" def="uint64" name="Limit"/>
          </field>
          <field type="struct" name="BlkioStats">
            <field type="slice" name="IOServiceBytesRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOServicedRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOQueueRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOServiceTimeRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOWaitTimeRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOMergedRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="IOTimeRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
            <field type="slice" name="SectorsRecursive">
              <elmtype type="ident" def="BlkioStatsEntry"/>
            </field>
          </field>
          <field type="struct" name="CPUStats">
            <field type="struct" name="CPUUsage">
              <field type="slice" name="PercpuUsage">
                <elmtype type="ident" def="uint64"/>
              </field>
              <field type="ident" def="uint64" name="UsageInUsermode"/>
              <field type="ident" def="uint64" name="TotalUsage"/>
              <field type="ident" def="uint64" name="UsageInKernelmode"/>
            </field>
            <field type="ident" def="uint64" name="SystemCPUUsage"/>
            <field type="struct" name="ThrottlingData">
              <field type="ident" def="uint64" name="Periods"/>
              <field type="ident" def="uint64" name="ThrottledPeriods"/>
              <field type="ident" def="uint64" name="ThrottledTime"/>
            </field>
          </field>
        </type>
        <type type="struct" name="BlkioStatsEntry">
          <field type="ident" def="uint64" name="Major"/>
          <field type="ident" def="uint64" name="Minor"/>
          <field type="ident" def="string" name="Op"/>
          <field type="ident" def="uint64" name="Value"/>
        </type>
        <type type="struct" name="StatsOptions">
          <field type="ident" def="string" name="ID"/>
          <field type="channel" dir="1" name="Stats">
            <type type="pointer">
              <type type="ident" def="Stats"/>
            </type>
          </field>
        </type>
        <type type="struct" name="KillContainerOptions">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="Signal" name="Signal"/>
        </type>
        <type type="struct" name="RemoveContainerOptions">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="bool" name="RemoveVolumes"/>
          <field type="ident" def="bool" name="Force"/>
        </type>
        <type type="struct" name="CopyFromContainerOptions">
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="string" name="Resource"/>
        </type>
        <type type="struct" name="CommitContainerOptions">
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Author"/>
          <field type="pointer" name="Run">
            <type type="ident" def="Config"/>
          </field>
        </type>
        <type type="struct" name="AttachToContainerOptions">
          <field type="ident" def="string" name="Container"/>
          <field type="selector" name="InputStream">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="ErrorStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="Logs"/>
          <field type="ident" def="bool" name="Stream"/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="channel" dir="3" name="Success">
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="bool" name="RawTerminal"/>
        </type>
        <type type="struct" name="LogsOptions">
          <field type="ident" def="string" name="Container"/>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="ErrorStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="Follow"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="Timestamps"/>
          <field type="ident" def="string" name="Tail"/>
          <field type="ident" def="bool" name="RawTerminal"/>
        </type>
        <type type="struct" name="ExportContainerOptions">
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="OutputStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="NoSuchContainer">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type type="struct" name="ContainerAlreadyRunning">
          <field type="ident" def="string" name="ID"/>
        </type>
        <type type="struct" name="ContainerNotRunning">
          <field type="ident" def="string" name="ID"/>
        </type>
        <type name="APIVersion" type="slice">
          <elmtype type="ident" def="int"/>
        </type>
        <type type="struct" name="Client">
          <field type="ident" def="bool" name="SkipServerVersionCheck"/>
          <field type="pointer" name="HTTPClient">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="pointer" name="TLSConfig">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="string" name="endpoint"/>
          <field type="pointer" name="endpointURL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="pointer" name="eventMonitor">
            <type type="ident" def="eventMonitoringState"/>
          </field>
          <field type="ident" def="APIVersion" name="requestedAPIVersion"/>
          <field type="ident" def="APIVersion" name="serverAPIVersion"/>
          <field type="ident" def="APIVersion" name="expectedAPIVersion"/>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="Status"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="ChangeType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Change">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="ChangeType" name="Kind"/>
        </type>
        <type type="struct" name="AuthConfiguration">
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="Email"/>
          <field type="ident" def="string" name="ServerAddress"/>
        </type>
        <type type="struct" name="AuthConfigurations">
          <field type="map" name="Configs">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="AuthConfiguration"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="CloseWrite">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tlsClientCon"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseRepositoryTag">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ListImagesOptions"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="APIImages"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ImageHistory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="ImageHistory"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImageExtended">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="RemoveImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PushImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PushImageOptions"/>
            <type type="ident" def="AuthConfiguration"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PullImageOptions"/>
            <type type="ident" def="AuthConfiguration"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LoadImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExportImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ExportImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExportImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ExportImagesOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ImportImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ImportImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BuildImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="BuildImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TagImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="TagImageOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SearchImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="APIImageSearch"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CreateExecOptions"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Exec"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="StartExecOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResizeExecTTY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ExecInspect"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NoSuchExec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AddEventListener">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="APIEvents"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveEventListener">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="3">
              <type type="pointer">
                <type type="ident" def="APIEvents"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="SetInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="SetInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="SetList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetAuto">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Map">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ListContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ListContainersOptions"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="APIContainers"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Port">
          <recvList>
            <type type="ident" def="Port"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Proto">
          <recvList>
            <type type="ident" def="Port"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="PortMappingAPI">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetworkSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="APIPort"/>
            </type>
          </resultsList>
        </function>
        <function name="RenameContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="RenameContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CreateContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AlwaysRestart">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="RestartPolicy"/>
          </resultsList>
        </function>
        <function name="RestartOnFailure">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="RestartPolicy"/>
          </resultsList>
        </function>
        <function name="NeverRestart">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="RestartPolicy"/>
          </resultsList>
        </function>
        <function name="StartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="HostConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StopContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RestartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnpauseContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TopContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="TopResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="StatsOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="KillContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="RemoveContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyFromContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CopyFromContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WaitContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CommitContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CommitContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AttachToContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="AttachToContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Logs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LogsOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResizeContainerTTY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExportContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ExportContainerOptions"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NoSuchContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerAlreadyRunning"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerNotRunning"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewAPIVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="APIVersion"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="LessThan">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="APIVersion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="LessThanOrEqualTo">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="APIVersion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GreaterThan">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="APIVersion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GreaterThanOrEqualTo">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="APIVersion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTLSClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewVersionedClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewVersionnedTLSClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewVersionedTLSClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Ping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Error"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Change"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewAuthConfigurationsFromDockerCfg">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AuthConfigurations"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAuthConfigurations">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AuthConfigurations"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthCheck">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="AuthConfiguration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SIGABRT"/>
        <name value="SIGALRM"/>
        <name value="SIGBUS"/>
        <name value="SIGCHLD"/>
        <name value="SIGCLD"/>
        <name value="SIGCONT"/>
        <name value="SIGFPE"/>
        <name value="SIGHUP"/>
        <name value="SIGILL"/>
        <name value="SIGINT"/>
        <name value="SIGIO"/>
        <name value="SIGIOT"/>
        <name value="SIGKILL"/>
        <name value="SIGPIPE"/>
        <name value="SIGPOLL"/>
        <name value="SIGPROF"/>
        <name value="SIGPWR"/>
        <name value="SIGQUIT"/>
        <name value="SIGSEGV"/>
        <name value="SIGSTKFLT"/>
        <name value="SIGSTOP"/>
        <name value="SIGSYS"/>
        <name value="SIGTERM"/>
        <name value="SIGTRAP"/>
        <name value="SIGTSTP"/>
        <name value="SIGTTIN"/>
        <name value="SIGTTOU"/>
        <name value="SIGUNUSED"/>
        <name value="SIGURG"/>
        <name value="SIGUSR1"/>
        <name value="SIGUSR2"/>
        <name value="SIGVTALRM"/>
        <name value="SIGWINCH"/>
        <name value="SIGXCPU"/>
        <name value="SIGXFSZ"/>
        <name value="ErrNoSuchImage"/>
        <name value="ErrMissingRepo"/>
        <name value="ErrMissingOutputStream"/>
        <name value="ErrMultipleContexts"/>
        <name value="ErrMustSpecifyNames"/>
        <name value="ErrNoListeners"/>
        <name value="ErrListenerAlreadyExists"/>
        <name value="EOFEvent"/>
        <name value="ErrInvalidEndpoint"/>
        <name value="ErrConnectionRefused"/>
        <name value="ChangeModify"/>
        <name value="ChangeAdd"/>
        <name value="ChangeDelete"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/fileutils">
      <types/>
      <functions>
        <function name="Exclusion">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CleanPatterns">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OptimizedMatches">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetTotalUsedFds">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ReadSymlinkedDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/ioutils">
      <types>
        <type type="struct" name="NopWriter"/>
        <type type="struct" name="NopFlusher"/>
        <type type="struct" name="WriteCounter">
          <field type="ident" def="int64" name="Count"/>
          <field type="selector" name="Writer">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="WriteFlusher">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="w">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="flusher">
            <prefix value="http"/>
            <item value="Flusher"/>
          </field>
          <field type="ident" def="bool" name="flushed"/>
        </type>
      </types>
      <functions>
        <function name="Write">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nopWriteCloser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NopWriteCloser">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NopFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writeCloserWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewWriteCloserWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </resultsList>
        </function>
        <function name="NewWriteCounter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WriteCounter"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteCounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Flushed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewWriteFlusher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readCloserWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewReadCloserWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readerErrWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewReaderErrWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBufReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBufReaderWithDrainbufAndBuffer">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HashData">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/units">
      <types/>
      <functions>
        <function name="CustomSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HumanSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="BytesSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="FromHumanSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RAMInBytes">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HumanDuration">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="KB"/>
        <name value="MB"/>
        <name value="GB"/>
        <name value="TB"/>
        <name value="PB"/>
        <name value="KiB"/>
        <name value="MiB"/>
        <name value="GiB"/>
        <name value="TiB"/>
        <name value="PiB"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/gorilla/context">
      <types/>
      <functions>
        <function name="Set">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="GetOk">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAll">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="interface"/>
              <valtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAllOk">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="interface"/>
              <valtype type="interface"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Purge">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ClearHandler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/pools">
      <types>
        <type type="struct" name="BufioReaderPool">
          <field type="selector" name="pool">
            <prefix value="sync"/>
            <item value="Pool"/>
          </field>
        </type>
        <type type="struct" name="BufioWriterPool">
          <field type="selector" name="pool">
            <prefix value="sync"/>
            <item value="Pool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewReadCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewWriteCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="BufioReader32KPool"/>
        <name value="BufioWriter32KPool"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/testing">
      <types>
        <type type="struct" name="DockerServer">
          <field type="slice" name="containers">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="execs">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="ExecInspect"/>
              </type>
            </elmtype>
          </field>
          <field type="selector" name="execMut">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="cMut">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="slice" name="images">
            <elmtype type="selector">
              <prefix value="docker"/>
              <item value="Image"/>
            </elmtype>
          </field>
          <field type="selector" name="iMut">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="imgIDs">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="selector" name="listener">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="pointer" name="mux">
            <type type="selector">
              <prefix value="mux"/>
              <item value="Router"/>
            </type>
          </field>
          <field type="func" name="hook">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </field>
          <field type="map" name="failures">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="slice" name="multiFailures">
            <elmtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </elmtype>
          </field>
          <field type="map" name="execCallbacks">
            <keytype type="ident" def="string"/>
            <valtype type="func">
              <paramsList/>
              <resultsList/>
            </valtype>
          </field>
          <field type="map" name="customHandlers">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </valtype>
          </field>
          <field type="selector" name="handlerMutex">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="channel" dir="1" name="cChan">
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stdWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Container"/>
                </type>
              </type>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetHook">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareFailure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareMultiFailures">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ResetFailure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ResetMultiFailures">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CustomHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MutateContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="docker"/>
              <item value="State"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="URL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DefaultHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/stdcopy">
      <types>
        <type name="StdType" type="array">
          <elmtype type="ident" def="byte"/>
        </type>
        <type type="struct" name="StdWriter">
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="StdType" name="prefix"/>
          <field type="slice" name="sizeBuf">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStdWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="StdType"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StdWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="StdCopy">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="StdWriterPrefixLen"/>
        <name value="StdWriterFdIndex"/>
        <name value="StdWriterSizeIndex"/>
        <name value="Stdin"/>
        <name value="Stdout"/>
        <name value="Stderr"/>
        <name value="ErrInvalidStdHeader"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/archive">
      <types>
        <type name="ChangeType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Change">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="ChangeType" name="Kind"/>
        </type>
        <type type="struct" name="FileInfo">
          <field type="pointer" name="parent">
            <type type="ident" def="FileInfo"/>
          </field>
          <field type="ident" def="string" name="name"/>
          <field type="pointer" name="stat">
            <type type="selector">
              <prefix value="system"/>
              <item value="Stat_t"/>
            </type>
          </field>
          <field type="map" name="children">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="FileInfo"/>
            </valtype>
          </field>
          <field type="slice" name="capability">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="added"/>
        </type>
        <type name="Archive" type="selector">
          <prefix value="io"/>
          <item value="ReadCloser"/>
        </type>
        <type name="ArchiveReader" type="selector">
          <prefix value="io"/>
          <item value="Reader"/>
        </type>
        <type name="Compression" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="TarOptions">
          <field type="slice" name="IncludeFiles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ExcludePatterns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="Compression" name="Compression"/>
          <field type="ident" def="bool" name="NoLchown"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="Archiver">
          <field type="func" name="Untar">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="TarOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="TempArchive">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="int64" name="read"/>
          <field type="ident" def="bool" name="closed"/>
        </type>
      </types>
      <functions>
        <function name="Generate">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnpackLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ArchiveReader"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ArchiveReader"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Change"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Changes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </resultsList>
        </function>
        <function name="ChangesDirs">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangesSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="ExportChanges">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CanonicalTarNameForPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CanonicalTarNameForPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsArchive">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DetectCompression">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Compression"/>
          </resultsList>
        </function>
        <function name="DecompressStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompressStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="Compression"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Extension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compression"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Tar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Compression"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TarWithOptions">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unpack">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Untar">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TarUntar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TarUntar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UntarPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UntarPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyWithTar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyFileWithTar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyFileWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CmdStream">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTempArchive">
          <recvList/>
          <paramsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ChangeModify"/>
        <name value="ChangeAdd"/>
        <name value="ChangeDelete"/>
        <name value="ErrNotImplemented"/>
        <name value="Uncompressed"/>
        <name value="Bzip2"/>
        <name value="Gzip"/>
        <name value="Xz"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/system">
      <types>
        <type type="struct" name="Stat_t">
          <field type="ident" def="uint32" name="mode"/>
          <field type="ident" def="uint32" name="uid"/>
          <field type="ident" def="uint32" name="gid"/>
          <field type="ident" def="uint64" name="rdev"/>
          <field type="ident" def="int64" name="size"/>
          <field type="selector" name="mtim">
            <prefix value="syscall"/>
            <item value="Timespec"/>
          </field>
        </type>
        <type type="struct" name="MemInfo">
          <field type="ident" def="int64" name="MemTotal"/>
          <field type="ident" def="int64" name="MemFree"/>
          <field type="ident" def="int64" name="SwapTotal"/>
          <field type="ident" def="int64" name="SwapFree"/>
        </type>
      </types>
      <functions>
        <function name="Lgetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lsetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lgetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lsetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Umask">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Umask">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stat_t"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stat_t"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Uid">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Gid">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Rdev">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Mtim">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="Timespec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLastModification">
          <recvList>
            <type type="ident" def="Stat_t"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="Timespec"/>
            </type>
          </resultsList>
        </function>
        <function name="Mknod">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mkdev">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Mknod">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mkdev">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="ReadMemInfo">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadMemInfo">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lstat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stat_t"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lstat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stat_t"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MkdirAll">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MkdirAll">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrMalformed"/>
        <name value="ErrNotSupportedPlatform"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/gorilla/mux">
      <types>
        <type type="struct" name="Route">
          <field type="ident" def="parentRoute" name="parent"/>
          <field type="selector" name="handler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="slice" name="matchers">
            <elmtype type="ident" def="matcher"/>
          </field>
          <field type="pointer" name="regexp">
            <type type="ident" def="routeRegexpGroup"/>
          </field>
          <field type="ident" def="bool" name="strictSlash"/>
          <field type="ident" def="bool" name="buildOnly"/>
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="BuildVarsFunc" name="buildVarsFunc"/>
        </type>
        <type name="MatcherFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type name="BuildVarsFunc" type="func">
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </type>
        <type type="struct" name="Router">
          <field type="selector" name="NotFoundHandler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="ident" def="parentRoute" name="parent"/>
          <field type="slice" name="routes">
            <elmtype type="pointer">
              <type type="ident" def="Route"/>
            </elmtype>
          </field>
          <field type="map" name="namedRoutes">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Route"/>
            </valtype>
          </field>
          <field type="ident" def="bool" name="strictSlash"/>
          <field type="ident" def="bool" name="KeepContext"/>
        </type>
        <type type="struct" name="RouteMatch">
          <field type="pointer" name="Route">
            <type type="ident" def="Route"/>
          </field>
          <field type="selector" name="Handler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="map" name="Vars">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Match">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BuildOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Handler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="HandlerFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="ident" def="headerMatcher"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Headers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Host">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="ident" def="MatcherFunc"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="MatcherFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="MatcherFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="ident" def="methodMatcher"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Methods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="PathPrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Queries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="ident" def="schemeMatcher"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Schemes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="BuildVarsFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="BuildVarsFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Subrouter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </resultsList>
        </function>
        <function name="URL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="URLHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="URLPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="pointer">
              <type type="ident" def="routeRegexp"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewRouter">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </resultsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RouteMatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRoute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="StrictSlash">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRoute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="HandleFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Headers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Host">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="MatcherFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="MatcherFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Methods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="PathPrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Queries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Schemes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="BuildVarsFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Router"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="BuildVarsFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
        <function name="Vars">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="CurrentRoute">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Route"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/Sirupsen/logrus">
      <types>
        <type type="struct" name="TextFormatter">
          <field type="ident" def="bool" name="ForceColors"/>
          <field type="ident" def="bool" name="DisableColors"/>
          <field type="ident" def="bool" name="DisableTimestamp"/>
          <field type="ident" def="bool" name="FullTimestamp"/>
          <field type="ident" def="string" name="TimestampFormat"/>
          <field type="ident" def="bool" name="DisableSorting"/>
        </type>
        <type name="Termios" type="selector">
          <prefix value="syscall"/>
          <item value="Termios"/>
        </type>
        <type name="Termios" type="selector">
          <prefix value="syscall"/>
          <item value="Termios"/>
        </type>
        <type type="struct" name="Termios">
          <field type="ident" def="uint32" name="Iflag"/>
          <field type="ident" def="uint32" name="Oflag"/>
          <field type="ident" def="uint32" name="Cflag"/>
          <field type="ident" def="uint32" name="Lflag"/>
          <field type="array" name="Cc">
            <elmtype type="ident" def="uint8"/>
          </field>
          <field type="ident" def="uint32" name="Ispeed"/>
          <field type="ident" def="uint32" name="Ospeed"/>
        </type>
        <type name="Termios" type="selector">
          <prefix value="syscall"/>
          <item value="Termios"/>
        </type>
        <type name="Fields" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="interface"/>
        </type>
        <type name="Level" type="ident">
          <type type="ident" def="uint8"/>
        </type>
        <type name="StdLogger" type="interface">
          <method name="Print">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Printf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Println">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatal">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatalf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatalln">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Panic">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Panicf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Panicln">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Logger">
          <field type="selector" name="Out">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="levelHooks" name="Hooks"/>
          <field type="ident" def="Formatter" name="Formatter"/>
          <field type="ident" def="Level" name="Level"/>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="JSONFormatter">
          <field type="ident" def="string" name="TimestampFormat"/>
        </type>
        <type name="Hook" type="interface">
          <method name="Levels">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Level"/>
              </type>
            </resultsList>
          </method>
          <method name="Fire">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Entry"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Formatter" type="interface">
          <method name="Format">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Entry"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Entry">
          <field type="pointer" name="Logger">
            <type type="ident" def="Logger"/>
          </field>
          <field type="ident" def="Fields" name="Data"/>
          <field type="selector" name="Time">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="Level" name="Level"/>
          <field type="ident" def="string" name="Message"/>
        </type>
      </types>
      <functions>
        <function name="Writer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="io"/>
                <item value="PipeWriter"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Format">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TextFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsTerminal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsTerminal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Level"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseLevel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Level"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </resultsList>
        </function>
        <function name="WithField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="WithFields">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="Debugf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Printf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debug">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Print">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panic">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infoln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Println">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Format">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="levelHooks"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Hook"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fire">
          <recvList>
            <type type="ident" def="levelHooks"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Level"/>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StandardLogger">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </resultsList>
        </function>
        <function name="SetOutput">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetFormatter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Formatter"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetLevel">
          <recvList/>
          <paramsList>
            <type type="ident" def="Level"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetLevel">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Level"/>
          </resultsList>
        </function>
        <function name="AddHook">
          <recvList/>
          <paramsList>
            <type type="ident" def="Hook"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WithField">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="WithFields">
          <recvList/>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="Debug">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Print">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warn">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panic">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatal">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Printf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Println">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infoln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewEntry">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="Reader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="WithFields">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </resultsList>
        </function>
        <function name="Debug">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Print">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panic">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Printf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infoln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Println">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warnln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="PanicLevel"/>
        <name value="FatalLevel"/>
        <name value="ErrorLevel"/>
        <name value="WarnLevel"/>
        <name value="InfoLevel"/>
        <name value="DebugLevel"/>
        <name value="DefaultTimestampFormat"/>
      </names>
    </package>
    <package importpath="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/promise">
      <types/>
      <functions>
        <function name="Go">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="crypto/tls"/>
    <import path="errors"/>
    <import path="net"/>
    <import path="strings"/>
    <import path="time"/>
    <import path="fmt"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="path"/>
    <import path="path/filepath"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/archive"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/fileutils"/>
    <import path="net/http"/>
    <import path="net/url"/>
    <import path="reflect"/>
    <import path="sort"/>
    <import path="testing"/>
    <import path="bytes"/>
    <import path="encoding/base64"/>
    <import path="encoding/json"/>
    <import path="net/http/httptest"/>
    <import path="strconv"/>
    <import path="archive/tar"/>
    <import path="log"/>
    <import path="github.com/fsouza/go-dockerclient"/>
    <import path="bufio"/>
    <import path="crypto/x509"/>
    <import path="math"/>
    <import path="net/http/httputil"/>
    <import path="sync"/>
    <import path="sync/atomic"/>
    <import path="regexp"/>
    <import path="runtime"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/stdcopy"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/gorilla/context"/>
    <import path="syscall"/>
    <import path="unsafe"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/units"/>
    <import path="encoding/binary"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/Sirupsen/logrus"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/ioutils"/>
    <import path="crypto/rand"/>
    <import path="crypto/sha256"/>
    <import path="encoding/hex"/>
    <import path="math/big"/>
    <import path="flag"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/pools"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/system"/>
    <import path="os/exec"/>
    <import path="compress/bzip2"/>
    <import path="compress/gzip"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/docker/docker/pkg/promise"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/stretchr/testify/assert"/>
    <import path="math/rand"/>
    <import path="github.com/fsouza/go-dockerclient/vendor/github.com/gorilla/mux"/>
  </imports>
</project>
