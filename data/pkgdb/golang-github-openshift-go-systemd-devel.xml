<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit">
  <packages>
    <package importpath="github.com/openshift/go-systemd/dbus">
      <types>
        <type type="struct" name="SubscriptionSet">
          <field type="pointer" name="">
            <type type="ident" def="set"/>
          </field>
          <field type="pointer" name="conn">
            <type type="ident" def="Conn"/>
          </field>
        </type>
        <type type="struct" name="SubStateUpdate">
          <field type="ident" def="string" name="UnitName"/>
          <field type="ident" def="string" name="SubState"/>
          <field type="ident" def="string" name="ActiveState"/>
          <field type="ident" def="string" name="LoadState"/>
          <field type="slice" name="WantedBy">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Value">
            <prefix value="dbus"/>
            <item value="Variant"/>
          </field>
        </type>
        <type type="struct" name="UnitStatus">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Description"/>
          <field type="ident" def="string" name="LoadState"/>
          <field type="ident" def="string" name="ActiveState"/>
          <field type="ident" def="string" name="SubState"/>
          <field type="ident" def="string" name="Followed"/>
          <field type="selector" name="Path">
            <prefix value="dbus"/>
            <item value="ObjectPath"/>
          </field>
          <field type="ident" def="uint32" name="JobId"/>
          <field type="ident" def="string" name="JobType"/>
          <field type="selector" name="JobPath">
            <prefix value="dbus"/>
            <item value="ObjectPath"/>
          </field>
        </type>
        <type type="struct" name="EnableUnitFileChange">
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Filename"/>
          <field type="ident" def="string" name="Destination"/>
        </type>
        <type type="struct" name="DisableUnitFileChange">
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Filename"/>
          <field type="ident" def="string" name="Destination"/>
        </type>
        <type type="struct" name="Conn">
          <field type="pointer" name="sysconn">
            <type type="selector">
              <prefix value="dbus"/>
              <item value="Conn"/>
            </type>
          </field>
          <field type="pointer" name="sysobj">
            <type type="selector">
              <prefix value="dbus"/>
              <item value="Object"/>
            </type>
          </field>
          <type type="struct" name="jobListener">
            <field type="map" name="jobs">
              <keytype type="selector">
                <prefix value="dbus"/>
                <item value="ObjectPath"/>
              </keytype>
              <valtype type="chan" dir="3">
                <type type="ident" def="string"/>
              </valtype>
            </field>
            <field type="selector" name="">
              <prefix value="sync"/>
              <item value="Mutex"/>
            </field>
          </type>
          <type type="struct" name="subscriber">
            <field type="chan" dir="1" name="updateCh">
              <type type="pointer">
                <type type="ident" def="SubStateUpdate"/>
              </type>
            </field>
            <field type="chan" dir="1" name="errCh">
              <type type="ident" def="error"/>
            </field>
            <field type="selector" name="">
              <prefix value="sync"/>
              <item value="Mutex"/>
            </field>
            <field type="map" name="ignore">
              <keytype type="selector">
                <prefix value="dbus"/>
                <item value="ObjectPath"/>
              </keytype>
              <valtype type="ident" def="int64"/>
            </field>
            <field type="ident" def="int64" name="cleanIgnore"/>
          </type>
          <field type="map" name="dispatch">
            <keytype type="ident" def="string"/>
            <valtype type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="dbus"/>
                  <item value="Signal"/>
                </type>
              </paramsList>
              <resultsList/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="Subscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubscriptionSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="chan" dir="2">
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="UnitStatus"/>
                </valtype>
              </type>
            </type>
            <type type="chan" dir="2">
              <type type="ident" def="error"/>
            </type>
          </returnsList>
        </function>
        <function name="NewSubscriptionSet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SubscriptionSet"/>
            </type>
          </returnsList>
        </function>
        <function name="Subscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unsubscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SubscribeUnits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="2">
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="UnitStatus"/>
                </valtype>
              </type>
            </type>
            <type type="chan" dir="2">
              <type type="ident" def="error"/>
            </type>
          </returnsList>
        </function>
        <function name="SubscribeUnitsCustom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="int"/>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="UnitStatus"/>
                </type>
                <type type="pointer">
                  <type type="ident" def="UnitStatus"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="2">
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="UnitStatus"/>
                </valtype>
              </type>
            </type>
            <type type="chan" dir="2">
              <type type="ident" def="error"/>
            </type>
          </returnsList>
        </function>
        <function name="SetSubStateSubscriber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="1">
              <type type="pointer">
                <type type="ident" def="SubStateUpdate"/>
              </type>
            </type>
            <type type="chan" dir="1">
              <type type="ident" def="error"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="set"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="set"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="set"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Length">
          <recvList>
            <type type="pointer">
              <type type="ident" def="set"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="PropExecStart">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRemainAfterExit">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropDescription">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequires">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequiresOverridable">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequisite">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequisiteOverridable">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropWants">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropBindsTo">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequiredBy">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequiredByOverridable">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropWantedBy">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropBoundBy">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropConflicts">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropConflictedBy">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropBefore">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropAfter">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropOnFailure">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropTriggers">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropTriggeredBy">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropPropagatesReloadTo">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropRequiresMountsFor">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="PropSlice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Property"/>
          </returnsList>
        </function>
        <function name="LoadUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StartUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StartUnitJob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StopUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StopUnitJob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReloadUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RestartUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RestartUnitJob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TryRestartUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReloadOrRestartUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReloadOrTryRestartUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StartTransientUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="KillUnit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int32"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetUnitProperties">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetUnitProperties">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ListUnits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="UnitStatus"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="EnableUnitFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="EnableUnitFileChange"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DisableUnitFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="DisableUnitFileChange"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ObjectPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="dbus"/>
              <item value="ObjectPath"/>
            </type>
          </returnsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="testing"/>
    <import path="time"/>
    <import path="errors"/>
    <import path="fmt"/>
    <import path="path/filepath"/>
    <import path="strings"/>
    <import path="github.com/guelfey/go.dbus"/>
    <import path="os"/>
    <import path="sync"/>
  </imports>
</project>
