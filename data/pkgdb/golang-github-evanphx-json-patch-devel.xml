<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-evanphx-json-patch-0-0.1.gita1ba76c.fc23">
  <packages>
    <package importpath="github.com/evanphx/json-patch">
      <types>
        <type name="Patch" type="slice">
          <elmtype type="ident" def="operation"/>
        </type>
      </types>
      <functions>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lazyNode"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lazyNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="DecodePatch">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Patch"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="ident" def="Patch"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MergePatch">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateMergePatch">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="bytes"/>
    <import path="encoding/json"/>
    <import path="fmt"/>
    <import path="reflect"/>
    <import path="testing"/>
    <import path="strconv"/>
    <import path="strings"/>
  </imports>
</project>
