<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-golang-glog-0-0.4.git44145f0.fc22">
  <packages>
    <package importpath="github.com/golang/glog">
      <types>
        <type type="struct" name="OutputStats">
          <field type="ident" def="int64" name="lines"/>
          <field type="ident" def="int64" name="bytes"/>
        </type>
        <type name="Level" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Verbose" type="ident">
          <type type="ident" def="bool"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="severity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="severity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="severity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lines">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Level"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Level"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Level"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="moduleSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="moduleSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="moduleSpec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceLocation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceLocation"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceLocation"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Flush">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Sync">
          <recvList>
            <type type="pointer">
              <type type="ident" def="syncBuffer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="syncBuffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyStandardLogTo">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="ident" def="logBridge"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="V">
          <recvList/>
          <paramsList>
            <type type="ident" def="Level"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Verbose"/>
          </returnsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="ident" def="Verbose"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infoln">
          <recvList>
            <type type="ident" def="Verbose"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="ident" def="Verbose"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Info">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="InfoDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infoln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Infof">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Warning">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="WarningDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Warningln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Warningf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ErrorDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Errorln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Errorf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Fatal">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="FatalDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Fatalln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Fatalf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Exit">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ExitDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Exitln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Exitf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="MaxSize"/>
        <name value="Stats"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="bytes"/>
    <import path="fmt"/>
    <import path="log"/>
    <import path="path/filepath"/>
    <import path="runtime"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="testing"/>
    <import path="time"/>
    <import path="errors"/>
    <import path="flag"/>
    <import path="os"/>
    <import path="os/user"/>
    <import path="sync"/>
    <import path="bufio"/>
    <import path="io"/>
    <import path="sync/atomic"/>
  </imports>
</project>
