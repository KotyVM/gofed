<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-golang-appengine-0-0.1.git1c3fdc5.fc22">
  <packages>
    <package importpath="google.golang.org/appengine/internal/xmpp">
      <types>
        <type name="XmppServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PresenceResponse_SHOW" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="XmppMessageResponse_XmppMessageStatus" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="XmppServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PresenceRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PresenceResponse">
          <field type="pointer" name="IsAvailable">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Presence">
            <type type="ident" def="PresenceResponse_SHOW"/>
          </field>
          <field type="pointer" name="Valid">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BulkPresenceRequest">
          <field type="slice" name="Jid">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BulkPresenceResponse">
          <field type="slice" name="PresenceResponse">
            <elmtype type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppMessageRequest">
          <field type="slice" name="Jid">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Body">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="RawXml">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppMessageResponse">
          <field type="slice" name="Status">
            <elmtype type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppSendPresenceRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Show">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppSendPresenceResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppInviteRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppInviteResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="XmppServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="XmppServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse_SHOW"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse_SHOW"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIsAvailable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetPresence">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </returnsList>
        </function>
        <function name="GetValid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetPresenceResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PresenceResponse"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetRawXml">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetShow">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="XmppServiceError_UNSPECIFIED_ERROR"/>
        <name value="XmppServiceError_INVALID_JID"/>
        <name value="XmppServiceError_NO_BODY"/>
        <name value="XmppServiceError_INVALID_XML"/>
        <name value="XmppServiceError_INVALID_TYPE"/>
        <name value="XmppServiceError_INVALID_SHOW"/>
        <name value="XmppServiceError_EXCEEDED_MAX_SIZE"/>
        <name value="XmppServiceError_APPID_ALIAS_REQUIRED"/>
        <name value="XmppServiceError_NONDEFAULT_MODULE"/>
        <name value="XmppServiceError_ErrorCode_name"/>
        <name value="XmppServiceError_ErrorCode_value"/>
        <name value="PresenceResponse_NORMAL"/>
        <name value="PresenceResponse_AWAY"/>
        <name value="PresenceResponse_DO_NOT_DISTURB"/>
        <name value="PresenceResponse_CHAT"/>
        <name value="PresenceResponse_EXTENDED_AWAY"/>
        <name value="PresenceResponse_SHOW_name"/>
        <name value="PresenceResponse_SHOW_value"/>
        <name value="XmppMessageResponse_NO_ERROR"/>
        <name value="XmppMessageResponse_INVALID_JID"/>
        <name value="XmppMessageResponse_OTHER_ERROR"/>
        <name value="XmppMessageResponse_XmppMessageStatus_name"/>
        <name value="XmppMessageResponse_XmppMessageStatus_value"/>
        <name value="Default_XmppMessageRequest_RawXml"/>
        <name value="Default_XmppMessageRequest_Type"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/image">
      <types>
        <type type="struct" name="ServingURLOptions">
          <field type="ident" def="bool" name="Secure"/>
          <field type="ident" def="int" name="Size"/>
          <field type="ident" def="bool" name="Crop"/>
        </type>
      </types>
      <functions>
        <function name="ServingURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="appengine"/>
              <item value="BlobKey"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ServingURLOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteServingURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="appengine"/>
              <item value="BlobKey"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/module">
      <types/>
      <functions>
        <function name="List">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NumInstances">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetNumInstances">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Versions">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DefaultVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Start">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stop">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/file">
      <types/>
      <functions>
        <function name="DefaultBucketName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/datastore">
      <types>
        <type type="struct" name="TransactionOptions">
          <field type="ident" def="bool" name="XG"/>
        </type>
        <type type="struct" name="Query">
          <field type="ident" def="string" name="kind"/>
          <field type="pointer" name="ancestor">
            <type type="ident" def="Key"/>
          </field>
          <field type="slice" name="filter">
            <elmtype type="ident" def="filter"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="order"/>
          </field>
          <field type="slice" name="projection">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="distinct"/>
          <field type="ident" def="bool" name="keysOnly"/>
          <field type="ident" def="bool" name="eventual"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="ident" def="int32" name="offset"/>
          <field type="pointer" name="start">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
          <field type="pointer" name="end">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
          <field type="ident" def="error" name="err"/>
        </type>
        <type type="struct" name="Iterator">
          <field type="selector" name="c">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="selector" name="res">
            <prefix value="pb"/>
            <item value="QueryResult"/>
          </field>
          <field type="ident" def="int" name="i"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="pointer" name="q">
            <type type="ident" def="Query"/>
          </field>
          <field type="pointer" name="prevCC">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Cursor">
          <field type="pointer" name="cc">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="ident" def="string" name="Name"/>
          <field type="interface" name="Value"/>
          <field type="ident" def="bool" name="NoIndex"/>
          <field type="ident" def="bool" name="Multiple"/>
        </type>
        <type name="ByteString" type="slice">
          <elmtype type="ident" def="byte"/>
        </type>
        <type name="PropertyLoadSaver" type="interface">
          <method name="Load">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Save">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PropertyList" type="slice">
          <elmtype type="ident" def="Property"/>
        </type>
        <type type="struct" name="Key">
          <field type="ident" def="string" name="kind"/>
          <field type="ident" def="string" name="stringID"/>
          <field type="ident" def="int64" name="intID"/>
          <field type="pointer" name="parent">
            <type type="ident" def="Key"/>
          </field>
          <field type="ident" def="string" name="appID"/>
          <field type="ident" def="string" name="namespace"/>
        </type>
        <type type="struct" name="ErrFieldMismatch">
          <field type="selector" name="StructType">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="ident" def="string" name="FieldName"/>
          <field type="ident" def="string" name="Reason"/>
        </type>
      </types>
      <functions>
        <function name="RunInTransaction">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="context"/>
                  <item value="Context"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
            <type type="pointer">
              <type type="ident" def="TransactionOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Ancestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="EventualConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Filter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Order">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Project">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Distinct">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="KeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Limit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Offset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="End">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </returnsList>
        </function>
        <function name="Count">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </returnsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Cursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Cursor"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DecodeCursor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LoadStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="StringID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IntID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Parent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="AppID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Incomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GobEncode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GobDecode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DecodeKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewIncompleteKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="NewKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </returnsList>
        </function>
        <function name="AllocateIDs">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrFieldMismatch"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrConcurrentTransaction"/>
        <name value="Done"/>
        <name value="ErrInvalidEntityType"/>
        <name value="ErrInvalidKey"/>
        <name value="ErrNoSuchEntity"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/log">
      <types>
        <type name="LogServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="LogServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UserAppLogLine">
          <field type="pointer" name="TimestampUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Level">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Message">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UserAppLogGroup">
          <field type="slice" name="LogLine">
            <elmtype type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FlushRequest">
          <field type="slice" name="Logs">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetStatusRequest">
          <field type="pointer" name="Status">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogOffset">
          <field type="slice" name="RequestId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogLine">
          <field type="pointer" name="Time">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Level">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="LogMessage">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequestLog">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ModuleId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="RequestId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="pointer" name="Ip">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Nickname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Latency">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Mcycles">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Resource">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HttpVersion">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="ResponseSize">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Referrer">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserAgent">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UrlMapEntry">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Combined">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ApiMcycles">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Host">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Cost">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="TaskQueueName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TaskName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="WasLoadingRequest">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="PendingTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ReplicaIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Finished">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="CloneKey">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Line">
            <elmtype type="pointer">
              <type type="ident" def="LogLine"/>
            </elmtype>
          </field>
          <field type="pointer" name="LinesIncomplete">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="AppEngineRelease">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ExitReason">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="WasThrottledForTime">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="WasThrottledForRequests">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ThrottledTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="ServerName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogModuleVersion">
          <field type="pointer" name="ModuleId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogReadRequest">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="VersionId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ModuleVersion">
            <elmtype type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </elmtype>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="slice" name="RequestId">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="MinimumLogLevel">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeIncomplete">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="CombinedLogRegex">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HostRegex">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ReplicaIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeAppLogs">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="AppLogsPerRequest">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeHost">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IncludeAll">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CacheIterator">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="NumShards">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogReadResponse">
          <field type="slice" name="Log">
            <elmtype type="pointer">
              <type type="ident" def="RequestLog"/>
            </elmtype>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="pointer" name="LastEndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageRecord">
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="TotalSize">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Records">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageRequest">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="VersionId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="ResolutionHours">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CombineVersions">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="UsageVersion">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="VersionsOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageResponse">
          <field type="slice" name="Usage">
            <elmtype type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </elmtype>
          </field>
          <field type="pointer" name="Summary">
            <type type="ident" def="LogUsageRecord"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="LogServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="LogServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="LogServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTimestampUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLogLine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UserAppLogLine"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetLogMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetModuleId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </returnsList>
        </function>
        <function name="GetIp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetNickname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLatency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetMcycles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetHttpVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetResponseSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetReferrer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetUserAgent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetUrlMapEntry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetCombined">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetApiMcycles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetTaskQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetWasLoadingRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetPendingTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetReplicaIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetFinished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetCloneKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogLine"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetLinesIncomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetAppEngineRelease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetExitReason">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetWasThrottledForTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetWasThrottledForRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetThrottledTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetServerName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModuleId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetModuleVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogModuleVersion"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMinimumLogLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIncludeIncomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetCombinedLogRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetHostRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetReplicaIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIncludeAppLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetAppLogsPerRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIncludeHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetIncludeAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetCacheIterator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetNumShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestLog"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLastEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetTotalSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetRecords">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetResolutionHours">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="GetCombineVersions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetUsageVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetVersionsOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetUsage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogUsageRecord"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetSummary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="LogServiceError_OK"/>
        <name value="LogServiceError_INVALID_REQUEST"/>
        <name value="LogServiceError_STORAGE_ERROR"/>
        <name value="LogServiceError_ErrorCode_name"/>
        <name value="LogServiceError_ErrorCode_value"/>
        <name value="Default_RequestLog_ModuleId"/>
        <name value="Default_RequestLog_ReplicaIndex"/>
        <name value="Default_RequestLog_Finished"/>
        <name value="Default_LogModuleVersion_ModuleId"/>
        <name value="Default_LogUsageRequest_ResolutionHours"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/urlfetch">
      <types>
        <type name="URLFetchServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="URLFetchRequest_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="URLFetchServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchRequest">
          <field type="pointer" name="Method">
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </field>
          <field type="pointer" name="Url">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </elmtype>
          </field>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="FollowRedirects">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deadline">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MustValidateServerCertificate">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchRequest_Header">
          <field type="pointer" name="Key">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchResponse">
          <field type="slice" name="Content">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="StatusCode">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </elmtype>
          </field>
          <field type="pointer" name="ContentWasTruncated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ExternalBytesSent">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ExternalBytesReceived">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="FinalUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ApiCpuMilliseconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ApiBytesSent">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ApiBytesReceived">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchResponse_Header">
          <field type="pointer" name="Key">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="URLFetchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLFetchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_RequestMethod"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </returnsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="URLFetchRequest_Header"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFollowRedirects">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetMustValidateServerCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetStatusCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="URLFetchResponse_Header"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetContentWasTruncated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetExternalBytesSent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetExternalBytesReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetFinalUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetApiCpuMilliseconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetApiBytesSent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetApiBytesReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="URLFetchServiceError_OK"/>
        <name value="URLFetchServiceError_INVALID_URL"/>
        <name value="URLFetchServiceError_FETCH_ERROR"/>
        <name value="URLFetchServiceError_UNSPECIFIED_ERROR"/>
        <name value="URLFetchServiceError_RESPONSE_TOO_LARGE"/>
        <name value="URLFetchServiceError_DEADLINE_EXCEEDED"/>
        <name value="URLFetchServiceError_SSL_CERTIFICATE_ERROR"/>
        <name value="URLFetchServiceError_DNS_ERROR"/>
        <name value="URLFetchServiceError_CLOSED"/>
        <name value="URLFetchServiceError_INTERNAL_TRANSIENT_ERROR"/>
        <name value="URLFetchServiceError_TOO_MANY_REDIRECTS"/>
        <name value="URLFetchServiceError_MALFORMED_REPLY"/>
        <name value="URLFetchServiceError_CONNECTION_ERROR"/>
        <name value="URLFetchServiceError_ErrorCode_name"/>
        <name value="URLFetchServiceError_ErrorCode_value"/>
        <name value="URLFetchRequest_GET"/>
        <name value="URLFetchRequest_POST"/>
        <name value="URLFetchRequest_HEAD"/>
        <name value="URLFetchRequest_PUT"/>
        <name value="URLFetchRequest_DELETE"/>
        <name value="URLFetchRequest_PATCH"/>
        <name value="URLFetchRequest_RequestMethod_name"/>
        <name value="URLFetchRequest_RequestMethod_value"/>
        <name value="Default_URLFetchRequest_FollowRedirects"/>
        <name value="Default_URLFetchRequest_MustValidateServerCertificate"/>
        <name value="Default_URLFetchResponse_ContentWasTruncated"/>
        <name value="Default_URLFetchResponse_ApiCpuMilliseconds"/>
        <name value="Default_URLFetchResponse_ApiBytesSent"/>
        <name value="Default_URLFetchResponse_ApiBytesReceived"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/delay">
      <types>
        <type type="struct" name="Function">
          <field type="selector" name="fv">
            <prefix value="reflect"/>
            <item value="Value"/>
          </field>
          <field type="ident" def="string" name="key"/>
          <field type="ident" def="error" name="err"/>
        </type>
      </types>
      <functions>
        <function name="Func">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </returnsList>
        </function>
        <function name="Call">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Task">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="taskqueue"/>
                <item value="Task"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal">
      <types>
        <type type="struct" name="CallOptions">
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="APIError">
          <field type="ident" def="string" name="Service"/>
          <field type="ident" def="string" name="Detail"/>
          <field type="ident" def="int32" name="Code"/>
        </type>
        <type type="struct" name="CallError">
          <field type="ident" def="string" name="Detail"/>
          <field type="ident" def="int32" name="Code"/>
          <field type="ident" def="bool" name="Timeout"/>
        </type>
      </types>
      <functions>
        <function name="RegisterTransactionSetter">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RunTransactionOnce">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="netcontext"/>
                  <item value="Context"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitConn"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RegisterErrorCodeMap">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RegisterTimeoutErrorCode">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int32"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IsTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CallError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IsTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CallError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Main">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="DefaultVersionHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="RequestID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Datacenter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ServerSoftware">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ModuleName">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="VersionID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="InstanceID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="AppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="WithCallOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="callOverrideFunc"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="WithLogOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="logOverrideFunc"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="WithAppIDOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="BackgroundContext">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="Header">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Call">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
            <type type="pointer">
              <type type="ident" def="CallOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Request">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Logf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="FullyQualifiedAppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ContextForTesting">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="VirtAPI">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrConcurrentTransaction"/>
        <name value="NamespaceMods"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/mail">
      <types>
        <type name="MailServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="MailServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailAttachment">
          <field type="pointer" name="FileName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ContentID">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailHeader">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailMessage">
          <field type="pointer" name="Sender">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ReplyTo">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="To">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Bcc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Subject">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TextBody">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HtmlBody">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Attachment">
            <elmtype type="pointer">
              <type type="ident" def="MailAttachment"/>
            </elmtype>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="MailHeader"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MailServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MailServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MailServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetFileName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetContentID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSender">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetReplyTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetBcc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetSubject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetTextBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetHtmlBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetAttachment">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MailAttachment"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MailHeader"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="MailServiceError_OK"/>
        <name value="MailServiceError_INTERNAL_ERROR"/>
        <name value="MailServiceError_BAD_REQUEST"/>
        <name value="MailServiceError_UNAUTHORIZED_SENDER"/>
        <name value="MailServiceError_INVALID_ATTACHMENT_TYPE"/>
        <name value="MailServiceError_INVALID_HEADER_NAME"/>
        <name value="MailServiceError_INVALID_CONTENT_ID"/>
        <name value="MailServiceError_ErrorCode_name"/>
        <name value="MailServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/channel">
      <types/>
      <functions>
        <function name="Create">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Send">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SendJSON">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/memcache">
      <types>
        <type name="MemcacheServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheSetRequest_SetPolicy" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheSetResponse_SetStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheDeleteResponse_DeleteStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheIncrementRequest_Direction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheIncrementResponse_IncrementStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="MemcacheServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AppOverride">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="NumMemcachegBackends">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IgnoreShardlock">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MemcachePoolHint">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="MemcacheShardingStrategy">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetRequest">
          <field type="slice" name="Key">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ForCas">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetResponse_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CasId">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ExpiresInSeconds">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetRequest">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetRequest_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="SetPolicy">
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </field>
          <field type="pointer" name="ExpirationTime">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CasId">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ForCas">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetResponse">
          <field type="slice" name="SetStatus">
            <elmtype type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteRequest">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteRequest_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="DeleteTime">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteResponse">
          <field type="slice" name="DeleteStatus">
            <elmtype type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheIncrementRequest">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Delta">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Direction">
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </field>
          <field type="pointer" name="InitialValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="InitialFlags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheIncrementResponse">
          <field type="pointer" name="NewValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="IncrementStatus">
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheBatchIncrementRequest">
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </elmtype>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheBatchIncrementResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheFlushRequest">
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheFlushResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheStatsRequest">
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MergedNamespaceStats">
          <field type="pointer" name="Hits">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Misses">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ByteHits">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Items">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Bytes">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="OldestItemAge">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheStatsResponse">
          <field type="pointer" name="Stats">
            <type type="ident" def="MergedNamespaceStats"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailRequest">
          <field type="pointer" name="ItemCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailResponse_Item">
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest_Direction"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest_Direction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetNumMemcachegBackends">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIgnoreShardlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetMemcachePoolHint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetMemcacheShardingStrategy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetForCas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheGetResponse_Item"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="GetCasId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetExpiresInSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheSetRequest_Item"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="GetSetPolicy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </returnsList>
        </function>
        <function name="GetExpirationTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="GetCasId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetForCas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheDeleteRequest_Item"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDeleteTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDeleteStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetDelta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetDirection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </returnsList>
        </function>
        <function name="GetInitialValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetInitialFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetNewValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetIncrementStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheIncrementRequest"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheIncrementResponse"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetHits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetMisses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetByteHits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetItems">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="GetOldestItemAge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItemCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheGrabTailResponse_Item"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="MemcacheServiceError_OK"/>
        <name value="MemcacheServiceError_UNSPECIFIED_ERROR"/>
        <name value="MemcacheServiceError_NAMESPACE_NOT_SET"/>
        <name value="MemcacheServiceError_PERMISSION_DENIED"/>
        <name value="MemcacheServiceError_INVALID_VALUE"/>
        <name value="MemcacheServiceError_ErrorCode_name"/>
        <name value="MemcacheServiceError_ErrorCode_value"/>
        <name value="MemcacheSetRequest_SET"/>
        <name value="MemcacheSetRequest_ADD"/>
        <name value="MemcacheSetRequest_REPLACE"/>
        <name value="MemcacheSetRequest_CAS"/>
        <name value="MemcacheSetRequest_SetPolicy_name"/>
        <name value="MemcacheSetRequest_SetPolicy_value"/>
        <name value="MemcacheSetResponse_STORED"/>
        <name value="MemcacheSetResponse_NOT_STORED"/>
        <name value="MemcacheSetResponse_ERROR"/>
        <name value="MemcacheSetResponse_EXISTS"/>
        <name value="MemcacheSetResponse_SetStatusCode_name"/>
        <name value="MemcacheSetResponse_SetStatusCode_value"/>
        <name value="MemcacheDeleteResponse_DELETED"/>
        <name value="MemcacheDeleteResponse_NOT_FOUND"/>
        <name value="MemcacheDeleteResponse_DeleteStatusCode_name"/>
        <name value="MemcacheDeleteResponse_DeleteStatusCode_value"/>
        <name value="MemcacheIncrementRequest_INCREMENT"/>
        <name value="MemcacheIncrementRequest_DECREMENT"/>
        <name value="MemcacheIncrementRequest_Direction_name"/>
        <name value="MemcacheIncrementRequest_Direction_value"/>
        <name value="MemcacheIncrementResponse_OK"/>
        <name value="MemcacheIncrementResponse_NOT_CHANGED"/>
        <name value="MemcacheIncrementResponse_ERROR"/>
        <name value="MemcacheIncrementResponse_IncrementStatusCode_name"/>
        <name value="MemcacheIncrementResponse_IncrementStatusCode_value"/>
        <name value="Default_MemcacheSetRequest_Item_SetPolicy"/>
        <name value="Default_MemcacheSetRequest_Item_ExpirationTime"/>
        <name value="Default_MemcacheDeleteRequest_Item_DeleteTime"/>
        <name value="Default_MemcacheIncrementRequest_Delta"/>
        <name value="Default_MemcacheIncrementRequest_Direction"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/app_identity">
      <types>
        <type name="AppIdentityServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="AppIdentityServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SignForAppRequest">
          <field type="slice" name="BytesToSign">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SignForAppResponse">
          <field type="pointer" name="KeyName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="SignatureBytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetPublicCertificateForAppRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PublicCertificate">
          <field type="pointer" name="KeyName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="X509CertificatePem">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetPublicCertificateForAppResponse">
          <field type="slice" name="PublicCertificateList">
            <elmtype type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </elmtype>
          </field>
          <field type="pointer" name="MaxClientCacheTimeInSecond">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetServiceAccountNameRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetServiceAccountNameResponse">
          <field type="pointer" name="ServiceAccountName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetAccessTokenRequest">
          <field type="slice" name="Scope">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="ServiceAccountId">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ServiceAccountName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetAccessTokenResponse">
          <field type="pointer" name="AccessToken">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ExpirationTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultGcsBucketNameRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultGcsBucketNameResponse">
          <field type="pointer" name="DefaultGcsBucketName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetBytesToSign">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKeyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetSignatureBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKeyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetX509CertificatePem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetPublicCertificateList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PublicCertificate"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxClientCacheTimeInSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetServiceAccountName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetServiceAccountId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetServiceAccountName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAccessToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetExpirationTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDefaultGcsBucketName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="AppIdentityServiceError_SUCCESS"/>
        <name value="AppIdentityServiceError_UNKNOWN_SCOPE"/>
        <name value="AppIdentityServiceError_BLOB_TOO_LARGE"/>
        <name value="AppIdentityServiceError_DEADLINE_EXCEEDED"/>
        <name value="AppIdentityServiceError_NOT_A_VALID_APP"/>
        <name value="AppIdentityServiceError_UNKNOWN_ERROR"/>
        <name value="AppIdentityServiceError_NOT_ALLOWED"/>
        <name value="AppIdentityServiceError_NOT_IMPLEMENTED"/>
        <name value="AppIdentityServiceError_ErrorCode_name"/>
        <name value="AppIdentityServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/demos/guestbook">
      <types>
        <type type="struct" name="Greeting">
          <field type="ident" def="string" name="Author"/>
          <field type="ident" def="string" name="Content"/>
          <field type="selector" name="Date">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
      </types>
      <functions/>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/search">
      <types>
        <type name="Scope_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Entry_Permission" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldValue_ContentType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FacetValue_ContentType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Document_Storage" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Consistency" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Source" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Mode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexDocumentParams_Freshness" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="ScorerSpec_Scorer" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchParams_CursorType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchParams_ParsingMode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Scope">
          <field type="pointer" name="Type">
            <type type="ident" def="Scope_Type"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Entry">
          <field type="pointer" name="Scope">
            <type type="ident" def="Scope"/>
          </field>
          <field type="pointer" name="Permission">
            <type type="ident" def="Entry_Permission"/>
          </field>
          <field type="pointer" name="DisplayName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AccessControlList">
          <field type="pointer" name="Owner">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Entries">
            <elmtype type="pointer">
              <type type="ident" def="Entry"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldValue">
          <field type="pointer" name="Type">
            <type type="ident" def="FieldValue_ContentType"/>
          </field>
          <field type="pointer" name="Language">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Geo">
            <type type="ident" def="FieldValue_Geo"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldValue_Geo">
          <field type="pointer" name="Lat">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Lng">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Field">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="FieldValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldTypes">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Type">
            <elmtype type="ident" def="FieldValue_ContentType"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetValue">
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Facet">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="FacetValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Document">
          <field type="pointer" name="Id">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Language">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="Field"/>
            </elmtype>
          </field>
          <field type="pointer" name="OrderId">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Storage">
            <type type="ident" def="Document_Storage"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="AccessControlList"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Facet">
            <elmtype type="pointer">
              <type type="ident" def="Facet"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequestStatus">
          <field type="pointer" name="Code">
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </field>
          <field type="pointer" name="ErrorDetail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexSpec">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Consistency">
            <type type="ident" def="IndexSpec_Consistency"/>
          </field>
          <field type="pointer" name="Namespace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="IndexSpec_Mode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexMetadata">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="FieldTypes"/>
            </elmtype>
          </field>
          <field type="pointer" name="Storage">
            <type type="ident" def="IndexMetadata_Storage"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexMetadata_Storage">
          <field type="pointer" name="AmountUsed">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentParams">
          <field type="slice" name="Document">
            <elmtype type="pointer">
              <type type="ident" def="Document"/>
            </elmtype>
          </field>
          <field type="pointer" name="Freshness">
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </field>
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="IndexDocumentParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="DocId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentParams">
          <field type="slice" name="DocId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="DeleteDocumentParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsParams">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="pointer" name="StartDocId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IncludeStartDoc">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="ListDocumentsParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsResponse">
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="slice" name="Document">
            <elmtype type="pointer">
              <type type="ident" def="Document"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesParams">
          <field type="pointer" name="FetchSchema">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Namespace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartIndexName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IncludeStartIndex">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IndexNamePrefix">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="ListIndexesParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesResponse">
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="slice" name="IndexMetadata">
            <elmtype type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaParams">
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="slice" name="IndexSpec">
            <elmtype type="pointer">
              <type type="ident" def="IndexSpec"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="DeleteSchemaParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SortSpec">
          <field type="pointer" name="SortExpression">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="SortDescending">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="DefaultValueText">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DefaultValueNumeric">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ScorerSpec">
          <field type="pointer" name="Scorer">
            <type type="ident" def="ScorerSpec_Scorer"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="MatchScorerParameters">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldSpec">
          <field type="slice" name="Name">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Expression">
            <elmtype type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldSpec_Expression">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Expression">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRange">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Start">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRequestParam">
          <field type="pointer" name="ValueLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Range">
            <elmtype type="pointer">
              <type type="ident" def="FacetRange"/>
            </elmtype>
          </field>
          <field type="slice" name="ValueConstraint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetAutoDetectParam">
          <field type="pointer" name="ValueLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRequest">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="Params">
            <type type="ident" def="FacetRequestParam"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRefine">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Start">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchParams">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="pointer" name="Query">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="CursorType">
            <type type="ident" def="SearchParams_CursorType"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="MatchedCountAccuracy">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="SortSpec">
            <elmtype type="pointer">
              <type type="ident" def="SortSpec"/>
            </elmtype>
          </field>
          <field type="pointer" name="ScorerSpec">
            <type type="ident" def="ScorerSpec"/>
          </field>
          <field type="pointer" name="FieldSpec">
            <type type="ident" def="FieldSpec"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ParsingMode">
            <type type="ident" def="SearchParams_ParsingMode"/>
          </field>
          <field type="pointer" name="AutoDiscoverFacetCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="IncludeFacet">
            <elmtype type="pointer">
              <type type="ident" def="FacetRequest"/>
            </elmtype>
          </field>
          <field type="slice" name="FacetRefine">
            <elmtype type="pointer">
              <type type="ident" def="FacetRefine"/>
            </elmtype>
          </field>
          <field type="pointer" name="FacetAutoDetectParam">
            <type type="ident" def="FacetAutoDetectParam"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="SearchParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetResultValue">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetResult">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchResult">
          <field type="pointer" name="Document">
            <type type="ident" def="Document"/>
          </field>
          <field type="slice" name="Expression">
            <elmtype type="pointer">
              <type type="ident" def="Field"/>
            </elmtype>
          </field>
          <field type="slice" name="Score">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchResponse">
          <field type="slice" name="Result">
            <elmtype type="pointer">
              <type type="ident" def="SearchResult"/>
            </elmtype>
          </field>
          <field type="pointer" name="MatchedCount">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="FacetResult">
            <elmtype type="pointer">
              <type type="ident" def="FacetResult"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Scope_Type"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Scope_Type"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Scope_Type"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Entry_Permission"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entry_Permission"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Entry_Permission"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry_Permission"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldValue_ContentType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FieldValue_ContentType"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldValue_ContentType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_ContentType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FacetValue_ContentType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FacetValue_ContentType"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FacetValue_ContentType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue_ContentType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Document_Storage"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Document_Storage"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Document_Storage"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document_Storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Consistency"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Consistency"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Source"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Source"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Source"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Source"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Mode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Mode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams_Freshness"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams_Freshness"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec_Scorer"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec_Scorer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchParams_CursorType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SearchParams_CursorType"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchParams_CursorType"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams_CursorType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SearchParams_ParsingMode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams_ParsingMode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Scope_Type"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Entry_Permission"/>
          </returnsList>
        </function>
        <function name="GetDisplayName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetOwner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetEntries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entry"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FieldValue_ContentType"/>
          </returnsList>
        </function>
        <function name="GetLanguage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetGeo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetLng">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="FieldValue_ContentType"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </returnsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetLanguage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetOrderId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetStorage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Document_Storage"/>
          </returnsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetFacet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Facet"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </returnsList>
        </function>
        <function name="GetErrorDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </returnsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexSpec_Source"/>
          </returnsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexSpec_Mode"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldTypes"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetStorage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAmountUsed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Document"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetFreshness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </returnsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetStartDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetIncludeStartDoc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Document"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetFetchSchema">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStartIndexName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetIncludeStartIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetIndexNamePrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexSpec_Source"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </returnsList>
        </function>
        <function name="GetIndexMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="IndexMetadata"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="IndexSpec_Source"/>
          </returnsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="IndexSpec"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSortExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetSortDescending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetDefaultValueText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetDefaultValueNumeric">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetScorer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetMatchScorerParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldSpec_Expression"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValueLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRange"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetValueConstraint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValueLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </returnsList>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetCursorType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="SearchParams_CursorType"/>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetMatchedCountAccuracy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetSortSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SortSpec"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetScorerSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFieldSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetParsingMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </returnsList>
        </function>
        <function name="GetAutoDiscoverFacetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetIncludeFacet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRequest"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetFacetRefine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRefine"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetFacetAutoDetectParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetResultValue"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </returnsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetScore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SearchResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMatchedCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFacetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="Scope_USER_BY_CANONICAL_ID"/>
        <name value="Scope_USER_BY_EMAIL"/>
        <name value="Scope_GROUP_BY_CANONICAL_ID"/>
        <name value="Scope_GROUP_BY_EMAIL"/>
        <name value="Scope_GROUP_BY_DOMAIN"/>
        <name value="Scope_ALL_USERS"/>
        <name value="Scope_ALL_AUTHENTICATED_USERS"/>
        <name value="Scope_Type_name"/>
        <name value="Scope_Type_value"/>
        <name value="Entry_READ"/>
        <name value="Entry_WRITE"/>
        <name value="Entry_FULL_CONTROL"/>
        <name value="Entry_Permission_name"/>
        <name value="Entry_Permission_value"/>
        <name value="FieldValue_TEXT"/>
        <name value="FieldValue_HTML"/>
        <name value="FieldValue_ATOM"/>
        <name value="FieldValue_DATE"/>
        <name value="FieldValue_NUMBER"/>
        <name value="FieldValue_GEO"/>
        <name value="FieldValue_ContentType_name"/>
        <name value="FieldValue_ContentType_value"/>
        <name value="FacetValue_ATOM"/>
        <name value="FacetValue_DATE"/>
        <name value="FacetValue_NUMBER"/>
        <name value="FacetValue_ContentType_name"/>
        <name value="FacetValue_ContentType_value"/>
        <name value="Document_DISK"/>
        <name value="Document_Storage_name"/>
        <name value="Document_Storage_value"/>
        <name value="SearchServiceError_OK"/>
        <name value="SearchServiceError_INVALID_REQUEST"/>
        <name value="SearchServiceError_TRANSIENT_ERROR"/>
        <name value="SearchServiceError_INTERNAL_ERROR"/>
        <name value="SearchServiceError_PERMISSION_DENIED"/>
        <name value="SearchServiceError_TIMEOUT"/>
        <name value="SearchServiceError_CONCURRENT_TRANSACTION"/>
        <name value="SearchServiceError_ErrorCode_name"/>
        <name value="SearchServiceError_ErrorCode_value"/>
        <name value="IndexSpec_GLOBAL"/>
        <name value="IndexSpec_PER_DOCUMENT"/>
        <name value="IndexSpec_Consistency_name"/>
        <name value="IndexSpec_Consistency_value"/>
        <name value="IndexSpec_SEARCH"/>
        <name value="IndexSpec_DATASTORE"/>
        <name value="IndexSpec_CLOUD_STORAGE"/>
        <name value="IndexSpec_Source_name"/>
        <name value="IndexSpec_Source_value"/>
        <name value="IndexSpec_PRIORITY"/>
        <name value="IndexSpec_BACKGROUND"/>
        <name value="IndexSpec_Mode_name"/>
        <name value="IndexSpec_Mode_value"/>
        <name value="IndexDocumentParams_SYNCHRONOUSLY"/>
        <name value="IndexDocumentParams_WHEN_CONVENIENT"/>
        <name value="IndexDocumentParams_Freshness_name"/>
        <name value="IndexDocumentParams_Freshness_value"/>
        <name value="ScorerSpec_RESCORING_MATCH_SCORER"/>
        <name value="ScorerSpec_MATCH_SCORER"/>
        <name value="ScorerSpec_Scorer_name"/>
        <name value="ScorerSpec_Scorer_value"/>
        <name value="SearchParams_NONE"/>
        <name value="SearchParams_SINGLE"/>
        <name value="SearchParams_PER_RESULT"/>
        <name value="SearchParams_CursorType_name"/>
        <name value="SearchParams_CursorType_value"/>
        <name value="SearchParams_STRICT"/>
        <name value="SearchParams_RELAXED"/>
        <name value="SearchParams_ParsingMode_name"/>
        <name value="SearchParams_ParsingMode_value"/>
        <name value="Default_FieldValue_Type"/>
        <name value="Default_FieldValue_Language"/>
        <name value="Default_FacetValue_Type"/>
        <name value="Default_Document_Language"/>
        <name value="Default_Document_Storage"/>
        <name value="Default_IndexSpec_Consistency"/>
        <name value="Default_IndexSpec_Source"/>
        <name value="Default_IndexSpec_Mode"/>
        <name value="Default_IndexDocumentParams_Freshness"/>
        <name value="Default_ListDocumentsParams_IncludeStartDoc"/>
        <name value="Default_ListDocumentsParams_Limit"/>
        <name value="Default_ListIndexesParams_Limit"/>
        <name value="Default_ListIndexesParams_IncludeStartIndex"/>
        <name value="Default_ListIndexesParams_Source"/>
        <name value="Default_DeleteSchemaParams_Source"/>
        <name value="Default_SortSpec_SortDescending"/>
        <name value="Default_ScorerSpec_Scorer"/>
        <name value="Default_ScorerSpec_Limit"/>
        <name value="Default_FacetAutoDetectParam_ValueLimit"/>
        <name value="Default_SearchParams_CursorType"/>
        <name value="Default_SearchParams_Limit"/>
        <name value="Default_SearchParams_ParsingMode"/>
        <name value="Default_SearchParams_AutoDiscoverFacetCount"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/aetesting">
      <types/>
      <functions>
        <function name="FakeSingleContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/remote_api">
      <types>
        <type name="RpcError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Request">
          <field type="pointer" name="ServiceName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Request">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="RequestId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ApplicationError">
          <field type="pointer" name="Code">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Detail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RpcError">
          <field type="pointer" name="Code">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Detail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Response">
          <field type="slice" name="Response">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Exception">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ApplicationError">
            <type type="ident" def="ApplicationError"/>
          </field>
          <field type="slice" name="JavaException">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="RpcError">
            <type type="ident" def="RpcError"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="RpcError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RpcError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="RpcError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetServiceName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetException">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetApplicationError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </returnsList>
        </function>
        <function name="GetJavaException">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRpcError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="RpcError_UNKNOWN"/>
        <name value="RpcError_CALL_NOT_FOUND"/>
        <name value="RpcError_PARSE_ERROR"/>
        <name value="RpcError_SECURITY_VIOLATION"/>
        <name value="RpcError_OVER_QUOTA"/>
        <name value="RpcError_REQUEST_TOO_LARGE"/>
        <name value="RpcError_CAPABILITY_DISABLED"/>
        <name value="RpcError_FEATURE_DISABLED"/>
        <name value="RpcError_BAD_REQUEST"/>
        <name value="RpcError_RESPONSE_TOO_LARGE"/>
        <name value="RpcError_CANCELLED"/>
        <name value="RpcError_REPLAY_ERROR"/>
        <name value="RpcError_DEADLINE_EXCEEDED"/>
        <name value="RpcError_ErrorCode_name"/>
        <name value="RpcError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/modules">
      <types>
        <type name="ModulesServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="ModulesServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetModulesRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetModulesResponse">
          <field type="slice" name="Module">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetVersionsRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetVersionsResponse">
          <field type="slice" name="Version">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultVersionRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultVersionResponse">
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetNumInstancesRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetNumInstancesResponse">
          <field type="pointer" name="Instances">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetNumInstancesRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Instances">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetNumInstancesResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StartModuleRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StartModuleResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StopModuleRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StopModuleResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetHostnameRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Instance">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetHostnameResponse">
          <field type="pointer" name="Hostname">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ModulesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ModulesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetInstances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetInstances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetInstance">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ModulesServiceError_OK"/>
        <name value="ModulesServiceError_INVALID_MODULE"/>
        <name value="ModulesServiceError_INVALID_VERSION"/>
        <name value="ModulesServiceError_INVALID_INSTANCES"/>
        <name value="ModulesServiceError_TRANSIENT_ERROR"/>
        <name value="ModulesServiceError_UNEXPECTED_STATE"/>
        <name value="ModulesServiceError_ErrorCode_name"/>
        <name value="ModulesServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/demos/helloworld">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/taskqueue">
      <types>
        <type name="TaskQueueServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueMode_Mode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueAddRequest_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueQueryTasksResponse_Task_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="TaskQueueServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskPayload">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueRetryParameters">
          <field type="pointer" name="RetryLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="AgeLimitSec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="MinBackoffSec">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxBackoffSec">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxDoublings">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAcl">
          <field type="slice" name="UserEmail">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="WriterEmail">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueHttpHeader">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueMode">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </field>
          <field type="slice" name="Url">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </elmtype>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Transaction">
            <type type="selector">
              <prefix value="appengine"/>
              <item value="Transaction"/>
            </type>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Crontimetable">
            <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
          </field>
          <field type="slice" name="Description">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Payload">
            <type type="ident" def="TaskPayload"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest_Header">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest_CronTimetable">
          <field type="slice" name="Schedule">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Timezone">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddResponse">
          <field type="slice" name="ChosenTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddRequest">
          <field type="slice" name="AddRequest">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddResponse">
          <field type="slice" name="Taskresult">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddResponse_TaskResult">
          <field type="pointer" name="Result">
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="ChosenTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteResponse">
          <field type="slice" name="Result">
            <elmtype type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueForceRunRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueForceRunResponse">
          <field type="pointer" name="Result">
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="BucketRefillPerSecond">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="BucketCapacity">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="UserSpecifiedRate">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="MaxConcurrentRequests">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="TaskQueueAcl"/>
          </field>
          <field type="slice" name="HeaderOverride">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="MaxRows">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesResponse">
          <field type="slice" name="Queue">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesResponse_Queue">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="BucketRefillPerSecond">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="BucketCapacity">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="UserSpecifiedRate">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Paused">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="MaxConcurrentRequests">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="TaskQueueAcl"/>
          </field>
          <field type="slice" name="HeaderOverride">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </elmtype>
          </field>
          <field type="pointer" name="CreatorName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="MaxNumTasks">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueScannerQueueInfo">
          <field type="pointer" name="ExecutedLastMinute">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ExecutedLastHour">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="SamplingDurationSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="RequestsInFlight">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EnforcedRate">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsResponse">
          <field type="slice" name="Queuestats">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsResponse_QueueStats">
          <field type="pointer" name="NumTasks">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OldestEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ScannerInfo">
            <type type="ident" def="TaskQueueScannerQueueInfo"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePauseQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Pause">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePauseQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePurgeQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePurgeQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteGroupRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteGroupResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="StartTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="StartEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="StartTag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="MaxRows">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse">
          <field type="slice" name="Task">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task">
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Url">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </field>
          <field type="pointer" name="RetryCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </elmtype>
          </field>
          <field type="pointer" name="BodySize">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="CreationTimeUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Crontimetable">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
          </field>
          <field type="pointer" name="Runlog">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
          </field>
          <field type="slice" name="Description">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Payload">
            <type type="ident" def="TaskPayload"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="FirstTryUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ExecutionCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_Header">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_CronTimetable">
          <field type="slice" name="Schedule">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Timezone">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_RunLog">
          <field type="pointer" name="DispatchedUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="LagUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ElapsedUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ResponseCode">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="RetryReason">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchTaskRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchTaskResponse">
          <field type="pointer" name="Task">
            <type type="ident" def="TaskQueueQueryTasksResponse"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateStorageLimitRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateStorageLimitResponse">
          <field type="pointer" name="NewLimit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="LeaseSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxTasks">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="GroupByTag">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksResponse">
          <field type="slice" name="Task">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksResponse_Task">
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="RetryCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueModifyTaskLeaseRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="LeaseSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueModifyTaskLeaseResponse">
          <field type="pointer" name="UpdatedEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode_Mode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode_Mode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetRetryLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetAgeLimitSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetMinBackoffSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetMaxBackoffSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetMaxDoublings">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetUserEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetWriterEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </returnsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueAddRequest_Header"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="appengine"/>
                <item value="Transaction"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCrontimetable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </returnsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSchedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTimezone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetChosenTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAddRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueAddRequest"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTaskresult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </returnsList>
        </function>
        <function name="GetChosenTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetBucketRefillPerSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetBucketCapacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetUserSpecifiedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxConcurrentRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </returnsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </returnsList>
        </function>
        <function name="GetHeaderOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueHttpHeader"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxRows">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetBucketRefillPerSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetBucketCapacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetUserSpecifiedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetPaused">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxConcurrentRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </returnsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </returnsList>
        </function>
        <function name="GetHeaderOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueHttpHeader"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetCreatorName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxNumTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetExecutedLastMinute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetExecutedLastHour">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetSamplingDurationSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetRequestsInFlight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetEnforcedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueuestats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetNumTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetOldestEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetScannerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetStartTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetStartEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetStartTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMaxRows">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </returnsList>
        </function>
        <function name="GetRetryCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="GetBodySize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetCreationTimeUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetCrontimetable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRunlog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </returnsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </returnsList>
        </function>
        <function name="GetFirstTryUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetExecutionCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetSchedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTimezone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDispatchedUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLagUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetElapsedUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetResponseCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetRetryReason">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetNewLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLeaseSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="GetMaxTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetGroupByTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetRetryCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetLeaseSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetUpdatedEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="TaskQueueServiceError_OK"/>
        <name value="TaskQueueServiceError_UNKNOWN_QUEUE"/>
        <name value="TaskQueueServiceError_TRANSIENT_ERROR"/>
        <name value="TaskQueueServiceError_INTERNAL_ERROR"/>
        <name value="TaskQueueServiceError_TASK_TOO_LARGE"/>
        <name value="TaskQueueServiceError_INVALID_TASK_NAME"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_NAME"/>
        <name value="TaskQueueServiceError_INVALID_URL"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_RATE"/>
        <name value="TaskQueueServiceError_PERMISSION_DENIED"/>
        <name value="TaskQueueServiceError_TASK_ALREADY_EXISTS"/>
        <name value="TaskQueueServiceError_TOMBSTONED_TASK"/>
        <name value="TaskQueueServiceError_INVALID_ETA"/>
        <name value="TaskQueueServiceError_INVALID_REQUEST"/>
        <name value="TaskQueueServiceError_UNKNOWN_TASK"/>
        <name value="TaskQueueServiceError_TOMBSTONED_QUEUE"/>
        <name value="TaskQueueServiceError_DUPLICATE_TASK_NAME"/>
        <name value="TaskQueueServiceError_SKIPPED"/>
        <name value="TaskQueueServiceError_TOO_MANY_TASKS"/>
        <name value="TaskQueueServiceError_INVALID_PAYLOAD"/>
        <name value="TaskQueueServiceError_INVALID_RETRY_PARAMETERS"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_MODE"/>
        <name value="TaskQueueServiceError_ACL_LOOKUP_ERROR"/>
        <name value="TaskQueueServiceError_TRANSACTIONAL_REQUEST_TOO_LARGE"/>
        <name value="TaskQueueServiceError_INCORRECT_CREATOR_NAME"/>
        <name value="TaskQueueServiceError_TASK_LEASE_EXPIRED"/>
        <name value="TaskQueueServiceError_QUEUE_PAUSED"/>
        <name value="TaskQueueServiceError_INVALID_TAG"/>
        <name value="TaskQueueServiceError_DATASTORE_ERROR"/>
        <name value="TaskQueueServiceError_ErrorCode_name"/>
        <name value="TaskQueueServiceError_ErrorCode_value"/>
        <name value="TaskQueueMode_PUSH"/>
        <name value="TaskQueueMode_PULL"/>
        <name value="TaskQueueMode_Mode_name"/>
        <name value="TaskQueueMode_Mode_value"/>
        <name value="TaskQueueAddRequest_GET"/>
        <name value="TaskQueueAddRequest_POST"/>
        <name value="TaskQueueAddRequest_HEAD"/>
        <name value="TaskQueueAddRequest_PUT"/>
        <name value="TaskQueueAddRequest_DELETE"/>
        <name value="TaskQueueAddRequest_RequestMethod_name"/>
        <name value="TaskQueueAddRequest_RequestMethod_value"/>
        <name value="TaskQueueQueryTasksResponse_Task_GET"/>
        <name value="TaskQueueQueryTasksResponse_Task_POST"/>
        <name value="TaskQueueQueryTasksResponse_Task_HEAD"/>
        <name value="TaskQueueQueryTasksResponse_Task_PUT"/>
        <name value="TaskQueueQueryTasksResponse_Task_DELETE"/>
        <name value="TaskQueueQueryTasksResponse_Task_RequestMethod_name"/>
        <name value="TaskQueueQueryTasksResponse_Task_RequestMethod_value"/>
        <name value="Default_TaskQueueRetryParameters_MinBackoffSec"/>
        <name value="Default_TaskQueueRetryParameters_MaxBackoffSec"/>
        <name value="Default_TaskQueueRetryParameters_MaxDoublings"/>
        <name value="Default_TaskQueueAddRequest_Method"/>
        <name value="Default_TaskQueueAddRequest_Mode"/>
        <name value="Default_TaskQueueUpdateQueueRequest_Mode"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_Paused"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_Mode"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_CreatorName"/>
        <name value="Default_TaskQueueFetchQueueStatsRequest_MaxNumTasks"/>
        <name value="Default_TaskQueueQueryTasksRequest_MaxRows"/>
        <name value="Default_TaskQueueQueryTasksResponse_Task_RetryCount"/>
        <name value="Default_TaskQueueQueryTasksResponse_Task_ExecutionCount"/>
        <name value="Default_TaskQueueQueryAndOwnTasksRequest_GroupByTag"/>
        <name value="Default_TaskQueueQueryAndOwnTasksResponse_Task_RetryCount"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/base">
      <types>
        <type type="struct" name="StringProto">
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Integer32Proto">
          <field type="pointer" name="Value">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Integer64Proto">
          <field type="pointer" name="Value">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BoolProto">
          <field type="pointer" name="Value">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DoubleProto">
          <field type="pointer" name="Value">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BytesProto">
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="VoidProto">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int32"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="float64"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VoidProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VoidProto"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine">
      <types>
        <type type="struct" name="Certificate">
          <field type="ident" def="string" name="KeyName"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="MultiError" type="slice">
          <elmtype type="ident" def="error"/>
        </type>
        <type name="BlobKey" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GeoPoint">
          <field type="ident" def="float64" name="Lat"/>
          <field type="ident" def="float64" name="Lng"/>
        </type>
      </types>
      <functions>
        <function name="IsTimeoutError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Namespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DefaultVersionHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ModuleName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ModuleHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="VersionID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="InstanceID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Datacenter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ServerSoftware">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="RequestID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="AccessToken">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PublicCertificates">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ServiceAccount">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SignBytes">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsOverQuota">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="MultiError"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IsDevAppServer">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </returnsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="ident" def="GeoPoint"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/user">
      <types>
        <type name="UserServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="UserServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLoginURLRequest">
          <field type="pointer" name="DestinationUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedIdentity">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLoginURLResponse">
          <field type="pointer" name="LoginUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLogoutURLRequest">
          <field type="pointer" name="DestinationUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLogoutURLResponse">
          <field type="pointer" name="LogoutUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetOAuthUserRequest">
          <field type="pointer" name="Scope">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetOAuthUserResponse">
          <field type="pointer" name="Email">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserOrganization">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IsAdmin">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ClientId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CheckOAuthSignatureRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CheckOAuthSignatureResponse">
          <field type="pointer" name="OauthConsumerKey">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="UserServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UserServiceError_ErrorCode"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="UserServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDestinationUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetFederatedIdentity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLoginUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetDestinationUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetLogoutUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetScopes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetUserId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetUserOrganization">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetIsAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetClientId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetScopes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="GetOauthConsumerKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="UserServiceError_OK"/>
        <name value="UserServiceError_REDIRECT_URL_TOO_LONG"/>
        <name value="UserServiceError_NOT_ALLOWED"/>
        <name value="UserServiceError_OAUTH_INVALID_TOKEN"/>
        <name value="UserServiceError_OAUTH_INVALID_REQUEST"/>
        <name value="UserServiceError_OAUTH_ERROR"/>
        <name value="UserServiceError_ErrorCode_name"/>
        <name value="UserServiceError_ErrorCode_value"/>
        <name value="Default_GetOAuthUserResponse_IsAdmin"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="testing"/>
    <import path="fmt"/>
    <import path="regexp"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="golang.org/x/net/context"/>
    <import path="google.golang.org/appengine/internal"/>
    <import path="google.golang.org/appengine/internal/base"/>
    <import path="time"/>
    <import path="google.golang.org/appengine/internal/app_identity"/>
    <import path="google.golang.org/appengine/internal/modules"/>
    <import path="net/http"/>
    <import path="reflect"/>
    <import path="google.golang.org/appengine"/>
    <import path="google.golang.org/appengine/internal/aetesting"/>
    <import path="google.golang.org/appengine/internal/xmpp"/>
    <import path="errors"/>
    <import path="google.golang.org/appengine/internal/user"/>
    <import path="strings"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="net/url"/>
    <import path="strconv"/>
    <import path="google.golang.org/appengine/internal/urlfetch"/>
    <import path="google.golang.org/appengine/internal/taskqueue"/>
    <import path="google.golang.org/appengine/internal/datastore"/>
    <import path="google.golang.org/appengine/internal/search"/>
    <import path="unicode/utf8"/>
    <import path="google.golang.org/appengine/internal/remote_api"/>
    <import path="google.golang.org/appengine/log"/>
    <import path="google.golang.org/appengine/user"/>
    <import path="bytes"/>
    <import path="log"/>
    <import path="math/rand"/>
    <import path="google.golang.org/appengine/internal/memcache"/>
    <import path="encoding/gob"/>
    <import path="encoding/json"/>
    <import path="google.golang.org/appengine/internal/mail"/>
    <import path="net/mail"/>
    <import path="google.golang.org/appengine/internal/log"/>
    <import path="sync"/>
    <import path="net"/>
    <import path="runtime"/>
    <import path="net/http/httptest"/>
    <import path="os"/>
    <import path="bufio"/>
    <import path="os/exec"/>
    <import path="sync/atomic"/>
    <import path="math"/>
    <import path="google.golang.org/appengine/internal/image"/>
    <import path="html/template"/>
    <import path="google.golang.org/appengine/datastore"/>
    <import path="google.golang.org/appengine/taskqueue"/>
    <import path="encoding/base64"/>
    <import path="unicode"/>
    <import path="google.golang.org/appengine/internal/channel"/>
  </imports>
</project>
