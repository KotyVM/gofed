<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="docker-io-1.5.0-15.gita61716e.fc23">
  <packages>
    <package importpath="github.com/docker/docker/daemon/graphdriver">
      <types>
        <type name="FsMagic" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type name="InitFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Driver"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="ProtoDriver" type="interface">
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Remove">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Exists">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Status">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="array">
                  <elmtype type="ident" def="string"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="Cleanup">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Driver" type="interface">
          <method name="Diff">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="archive"/>
                <item value="Archive"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Changes">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="archive"/>
                  <item value="Change"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ApplyDiff">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="archive"/>
                <item value="ArchiveReader"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DiffSize">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NaiveDiffDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="ProtoDriver"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Driver"/>
          </returnsList>
        </function>
        <function name="Diff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="naiveDiffDriver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="naiveDiffDriver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="archive"/>
                <item value="Change"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ApplyDiff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="naiveDiffDriver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DiffSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="naiveDiffDriver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetFSMagic">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="FsMagic"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetFSMagic">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="FsMagic"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="InitFunc"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Driver"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Driver"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="FsMagicBtrfs"/>
        <name value="FsMagicAufs"/>
        <name value="FsMagicExtfs"/>
        <name value="FsMagicCramfs"/>
        <name value="FsMagicRamFs"/>
        <name value="FsMagicTmpFs"/>
        <name value="FsMagicSquashFs"/>
        <name value="FsMagicNfsFs"/>
        <name value="FsMagicReiserFs"/>
        <name value="FsMagicSmbFs"/>
        <name value="FsMagicJffs2Fs"/>
        <name value="FsMagicZfs"/>
        <name value="FsMagicUnsupported"/>
        <name value="DefaultDriver"/>
        <name value="ErrNotSupported"/>
        <name value="ErrPrerequisites"/>
        <name value="ErrIncompatibleFS"/>
        <name value="FsNames"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/parsers/kernel">
      <types>
        <type type="struct" name="Utsname">
          <field type="array" name="Release">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Utsname" type="selector">
          <prefix value="syscall"/>
          <item value="Utsname"/>
        </type>
        <type type="struct" name="KernelVersionInfo">
          <field type="ident" def="int" name="Kernel"/>
          <field type="ident" def="int" name="Major"/>
          <field type="ident" def="int" name="Minor"/>
          <field type="ident" def="string" name="Flavor"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KernelVersionInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="CompareKernelVersion">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="KernelVersionInfo"/>
            </type>
            <type type="pointer">
              <type type="ident" def="KernelVersionInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="GetKernelVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="KernelVersionInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseRelease">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="KernelVersionInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/api/client">
      <types>
        <type type="struct" name="DockerCli">
          <field type="ident" def="string" name="proto"/>
          <field type="ident" def="string" name="addr"/>
          <field type="pointer" name="configFile">
            <type type="selector">
              <prefix value="registry"/>
              <item value="ConfigFile"/>
            </type>
          </field>
          <field type="selector" name="in">
            <prefix value="io"/>
            <item value="ReadCloser"/>
          </field>
          <field type="selector" name="out">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="err">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="string" name="keyFile"/>
          <field type="pointer" name="tlsConfig">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="string" name="scheme"/>
          <field type="ident" def="uintptr" name="inFd"/>
          <field type="ident" def="uintptr" name="outFd"/>
          <field type="ident" def="bool" name="isTerminalIn"/>
          <field type="ident" def="bool" name="isTerminalOut"/>
          <field type="pointer" name="transport">
            <type type="selector">
              <prefix value="http"/>
              <item value="Transport"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="HTTPClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="CloseWrite">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tlsClientCon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdHelp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdBuild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdLogin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdLogout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdWait">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdStop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdRestart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdUnpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdPause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdRename">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdInspect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdTop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdRmi">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdHistory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdRm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdKill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdImport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdPush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdPull">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WalkTree">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Table"/>
              </type>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="engine"/>
                  <item value="Table"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="DockerCli"/>
                </type>
                <type type="ident" def="bool"/>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="engine"/>
                    <item value="Env"/>
                  </type>
                </type>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="CmdPs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdCommit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdExport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdDiff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdAttach">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdSearch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cidFile"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cidFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdCreate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdRun">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdCp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdSave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdLoad">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Display">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Cmd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Subcmd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="LoadConfigFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CheckTtyInput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDockerCli">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="DockerCli"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrConnectionRefused"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/broadcastwriter">
      <types>
        <type type="struct" name="BroadcastWriter">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="buf">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Buffer"/>
            </type>
          </field>
          <field type="pointer" name="jsLogBuf">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Buffer"/>
            </type>
          </field>
          <field type="map" name="streams">
            <keytype type="ident" def="string"/>
            <valtype type="parenthesis">
              <type type="map">
                <keytype type="selector">
                  <prefix value="io"/>
                  <item value="WriteCloser"/>
                </keytype>
                <type type="struct" name=""/>
              </type>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="AddWriter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BroadcastWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BroadcastWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Clean">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BroadcastWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="BroadcastWriter"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/vendor/src/code.google.com/p/go/src/pkg/archive/tar">
      <types>
        <type type="struct" name="Writer">
          <field type="selector" name="w">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="int64" name="nb"/>
          <field type="ident" def="int64" name="pad"/>
          <field type="ident" def="bool" name="closed"/>
          <field type="ident" def="bool" name="usedBinary"/>
          <field type="ident" def="bool" name="preferPax"/>
          <field type="array" name="hdrBuff">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="array" name="paxHdrBuff">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reader">
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="int64" name="pad"/>
          <field type="ident" def="numBytesReader" name="curr"/>
          <field type="array" name="hdrBuff">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Header">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int64" name="Mode"/>
          <field type="ident" def="int" name="Uid"/>
          <field type="ident" def="int" name="Gid"/>
          <field type="ident" def="int64" name="Size"/>
          <field type="selector" name="ModTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="byte" name="Typeflag"/>
          <field type="ident" def="string" name="Linkname"/>
          <field type="ident" def="string" name="Uname"/>
          <field type="ident" def="string" name="Gname"/>
          <field type="ident" def="int64" name="Devmajor"/>
          <field type="ident" def="int64" name="Devminor"/>
          <field type="selector" name="AccessTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="ChangeTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="map" name="Xattrs">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </returnsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </returnsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="regFileReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="sparseFileReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FileInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
          </returnsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ModTime">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </returnsList>
        </function>
        <function name="Sys">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="ident" def="headerFileInfo"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </returnsList>
        </function>
        <function name="FileInfoHeader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrWriteTooLong"/>
        <name value="ErrFieldTooLong"/>
        <name value="ErrWriteAfterClose"/>
        <name value="ErrHeader"/>
        <name value="TypeReg"/>
        <name value="TypeRegA"/>
        <name value="TypeLink"/>
        <name value="TypeSymlink"/>
        <name value="TypeChar"/>
        <name value="TypeBlock"/>
        <name value="TypeDir"/>
        <name value="TypeFifo"/>
        <name value="TypeCont"/>
        <name value="TypeXHeader"/>
        <name value="TypeXGlobalHeader"/>
        <name value="TypeGNULongName"/>
        <name value="TypeGNULongLink"/>
        <name value="TypeGNUSparse"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/networkdriver/portallocator">
      <types>
        <type type="struct" name="ErrPortAlreadyAllocated">
          <field type="ident" def="string" name="ip"/>
          <field type="ident" def="int" name="port"/>
        </type>
      </types>
      <functions>
        <function name="NewErrPortAlreadyAllocated">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="ErrPortAlreadyAllocated"/>
          </returnsList>
        </function>
        <function name="IP">
          <recvList>
            <type type="ident" def="ErrPortAlreadyAllocated"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Port">
          <recvList>
            <type type="ident" def="ErrPortAlreadyAllocated"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="IPPort">
          <recvList>
            <type type="ident" def="ErrPortAlreadyAllocated"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ErrPortAlreadyAllocated"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="RequestPort">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReleasePort">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReleaseAll">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="BeginPortRange"/>
        <name value="EndPortRange"/>
        <name value="ErrAllPortsAllocated"/>
        <name value="ErrUnknownProtocol"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/api">
      <types/>
      <functions>
        <function name="ValidateHost">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DisplayablePorts">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Table"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="FormGroup">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MatchesContentType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="LoadOrCreateTrustKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="libtrust"/>
              <item value="PrivateKey"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="APIVERSION"/>
        <name value="DEFAULTHTTPHOST"/>
        <name value="DEFAULTUNIXSOCKET"/>
        <name value="DefaultDockerfileName"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/utils">
      <types>
        <type type="struct" name="KeyValuePair">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
        </type>
        <type type="struct" name="WriteFlusher">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="w">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="flusher">
            <prefix value="http"/>
            <item value="Flusher"/>
          </field>
        </type>
        <type type="struct" name="StatusError">
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="int" name="StatusCode"/>
        </type>
        <type type="struct" name="WriteCounter">
          <field type="ident" def="int64" name="Count"/>
          <field type="selector" name="Writer">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type type="struct" name="StreamFormatter">
          <field type="ident" def="bool" name="json"/>
        </type>
        <type type="struct" name="StdoutFormater">
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="pointer" name="">
            <type type="ident" def="StreamFormatter"/>
          </field>
        </type>
        <type type="struct" name="StderrFormater">
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="pointer" name="">
            <type type="ident" def="StreamFormatter"/>
          </field>
        </type>
        <type type="struct" name="JSONError">
          <field type="ident" def="int" name="Code"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type type="struct" name="JSONProgress">
          <field type="ident" def="uintptr" name="terminalFd"/>
          <field type="ident" def="int" name="Current"/>
          <field type="ident" def="int" name="Total"/>
          <field type="ident" def="int64" name="Start"/>
        </type>
        <type type="struct" name="JSONMessage">
          <field type="ident" def="string" name="Stream"/>
          <field type="ident" def="string" name="Status"/>
          <field type="pointer" name="Progress">
            <type type="ident" def="JSONProgress"/>
          </field>
          <field type="ident" def="string" name="ProgressMessage"/>
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="From"/>
          <field type="ident" def="int64" name="Time"/>
          <field type="pointer" name="Error">
            <type type="ident" def="JSONError"/>
          </field>
          <field type="ident" def="string" name="ErrorMessage"/>
        </type>
        <type name="VersionInfo" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="HTTPRequestDecorator" type="interface">
          <method name="ChangeRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="HTTPUserAgentDecorator">
          <field type="slice" name="versions">
            <elmtype type="ident" def="VersionInfo"/>
          </field>
        </type>
        <type type="struct" name="HTTPMetaHeadersDecorator">
          <field type="map" name="Headers">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="HTTPAuthDecorator">
          <field type="ident" def="string" name="login"/>
          <field type="ident" def="string" name="password"/>
        </type>
        <type type="struct" name="HTTPRequestFactory">
          <field type="slice" name="decorators">
            <elmtype type="ident" def="HTTPRequestDecorator"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="TreeSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsFileOwner">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Download">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Trunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="SelfPath">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DockerInitPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetTotalUsedFds">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="ValidateID">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyEscapable">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HashData">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="NewWriteFlusher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="WriteFlusher"/>
            </type>
          </returnsList>
        </function>
        <function name="NewHTTPRequestError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ShellQuoteArguments">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="TestDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetCallerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="CopyFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReplaceOrAppendEnvValues">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="DoesEnvExist">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ReadSymlinkedDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateContextDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StringsContainsNoCase">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ReadDockerIgnore">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewWriteCounter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="WriteCounter"/>
            </type>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteCounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TempDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewStreamFormatter">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </returnsList>
        </function>
        <function name="FormatStream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="FormatStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="FormatError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="FormatProgress">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="JSONProgress"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </returnsList>
        </function>
        <function name="Json">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdoutFormater"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StderrFormater"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="progressReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="progressReader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ProgressReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StreamFormatter"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="progressReader"/>
            </type>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONProgress"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Display">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONMessage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DisplayJSONMessagesStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHTTPUserAgentDecorator">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="VersionInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="HTTPRequestDecorator"/>
          </returnsList>
        </function>
        <function name="ChangeRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPUserAgentDecorator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ChangeRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPMetaHeadersDecorator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHTTPAuthDecorator">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="HTTPRequestDecorator"/>
          </returnsList>
        </function>
        <function name="ChangeRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPAuthDecorator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewHTTPRequestFactory">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="HTTPRequestDecorator"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="HTTPRequestFactory"/>
            </type>
          </returnsList>
        </function>
        <function name="AddDecorator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPRequestFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="HTTPRequestDecorator"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetDecorators">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPRequestFactory"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="HTTPRequestDecorator"/>
            </type>
          </returnsList>
        </function>
        <function name="NewRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPRequestFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="HTTPRequestDecorator"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReportError">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="CreatePidFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RemovePidFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/builder/parser">
      <types>
        <type type="struct" name="Node">
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="Next">
            <type type="ident" def="Node"/>
          </field>
          <field type="slice" name="Children">
            <elmtype type="pointer">
              <type type="ident" def="Node"/>
            </elmtype>
          </field>
          <field type="map" name="Attributes">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="ident" def="string" name="Original"/>
        </type>
      </types>
      <functions>
        <function name="Dump">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="TOKEN_WHITESPACE"/>
        <name value="TOKEN_LINE_CONTINUATION"/>
        <name value="TOKEN_COMMENT"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/execdriver/lxc">
      <types>
        <type type="struct" name="InitArgs">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="Ip"/>
          <field type="ident" def="string" name="WorkDir"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="Mtu"/>
          <field type="ident" def="string" name="Console"/>
          <field type="ident" def="int" name="Pipe"/>
          <field type="ident" def="string" name="Root"/>
          <field type="ident" def="string" name="CapAdd"/>
          <field type="ident" def="string" name="CapDrop"/>
        </type>
        <type type="struct" name="TtyConsole">
          <field type="pointer" name="MasterPty">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
          <field type="pointer" name="SlavePty">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="ExitStatus"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Terminate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="KillLxc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsRunning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="info"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Info"/>
            </type>
          </returnsList>
        </function>
        <function name="GetPidsForContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Clean">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTtyConsole">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ProcessConfig"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Master">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AttachPipes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ProcessConfig"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ResourceStats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="LxcTemplate"/>
        <name value="LxcTemplateCompiled"/>
        <name value="ErrCannotParse"/>
        <name value="DriverName"/>
        <name value="ErrExec"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/execdriver/execdrivers">
      <types/>
      <functions>
        <function name="NewDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="sysinfo"/>
                <item value="SysInfo"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/fileutils">
      <types/>
      <functions>
        <function name="Matches">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/parsers">
      <types/>
      <functions>
        <function name="ParseHost">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseUnixAddr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseTCPAddr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseRepositoryTag">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="PartParser">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseKeyValueOpt">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParsePortRange">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/promise">
      <types/>
      <functions>
        <function name="Go">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="3">
              <type type="ident" def="error"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/parsers/filters">
      <types>
        <type name="Args" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="slice">
            <elmtype type="ident" def="string"/>
          </valtype>
        </type>
      </types>
      <functions>
        <function name="ParseFlag">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Args"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Args"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ToParam">
          <recvList/>
          <paramsList>
            <type type="ident" def="Args"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FromParam">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Args"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Match">
          <recvList>
            <type type="ident" def="Args"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrorBadFormat"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/stdcopy">
      <types>
        <type name="StdType" type="array">
          <elmtype type="ident" def="byte"/>
        </type>
        <type type="struct" name="StdWriter">
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="StdType" name="prefix"/>
          <field type="slice" name="sizeBuf">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewStdWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="StdType"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="StdWriter"/>
            </type>
          </returnsList>
        </function>
        <function name="StdCopy">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="StdWriterPrefixLen"/>
        <name value="StdWriterFdIndex"/>
        <name value="StdWriterSizeIndex"/>
        <name value="Stdin"/>
        <name value="Stdout"/>
        <name value="Stderr"/>
        <name value="ErrInvalidStdHeader"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/urlutil">
      <types/>
      <functions>
        <function name="IsURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsGitURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsGitTransport">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/events">
      <types>
        <type type="struct" name="Events">
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="slice" name="events">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="JSONMessage"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="subscribers">
            <elmtype type="ident" def="listener"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Events"/>
            </type>
          </returnsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="SubscribersCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/trust">
      <types>
        <type type="struct" name="TrustStore">
          <field type="ident" def="string" name="path"/>
          <field type="pointer" name="caPool">
            <type type="selector">
              <prefix value="x509"/>
              <item value="CertPool"/>
            </type>
          </field>
          <field type="selector" name="graph">
            <prefix value="trustgraph"/>
            <item value="TrustGraph"/>
          </field>
          <field type="selector" name="expiration">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="pointer" name="fetcher">
            <type type="selector">
              <prefix value="time"/>
              <item value="Timer"/>
            </type>
          </field>
          <field type="selector" name="fetchTime">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="autofetch"/>
          <field type="pointer" name="httpClient">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="map" name="baseEndpoints">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTrustStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TrustStore"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TrustStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdCheckKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TrustStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdUpdateBase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TrustStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/timeoutconn">
      <types/>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/parsers/operatingsystem">
      <types/>
      <functions>
        <function name="GetOperatingSystem">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsContainerized">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/devicemapper">
      <types>
        <type name="CDmTask" type="selector">
          <prefix value="C"/>
          <item value="struct_dm_task"/>
        </type>
        <type name="CLoopInfo64" type="selector">
          <prefix value="C"/>
          <item value="struct_loop_info64"/>
        </type>
        <type type="struct" name="LoopInfo64">
          <field type="ident" def="uint64" name="loDevice"/>
          <field type="ident" def="uint64" name="loInode"/>
          <field type="ident" def="uint64" name="loRdevice"/>
          <field type="ident" def="uint64" name="loOffset"/>
          <field type="ident" def="uint64" name="loSizelimit"/>
          <field type="ident" def="uint32" name="loNumber"/>
          <field type="ident" def="uint32" name="loEncrypt_type"/>
          <field type="ident" def="uint32" name="loEncrypt_key_size"/>
          <field type="ident" def="uint32" name="loFlags"/>
          <field type="array" name="loFileName">
            <elmtype type="ident" def="uint8"/>
          </field>
          <field type="array" name="loCryptName">
            <elmtype type="ident" def="uint8"/>
          </field>
          <field type="array" name="loEncryptKey">
            <elmtype type="ident" def="uint8"/>
          </field>
          <field type="array" name="loInit">
            <elmtype type="ident" def="uint64"/>
          </field>
        </type>
        <type name="DevmapperLogger" type="interface">
          <method name="DMLog">
            <paramsList>
              <type type="ident" def="int"/>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="ident" def="int"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Task">
          <field type="pointer" name="unmanaged">
            <type type="ident" def="CDmTask"/>
          </field>
        </type>
        <type type="struct" name="Deps">
          <field type="ident" def="uint32" name="Count"/>
          <field type="ident" def="uint32" name="Filler"/>
          <field type="slice" name="Device">
            <elmtype type="ident" def="uint64"/>
          </field>
        </type>
        <type type="struct" name="Info">
          <field type="ident" def="int" name="Exists"/>
          <field type="ident" def="int" name="Suspended"/>
          <field type="ident" def="int" name="LiveTable"/>
          <field type="ident" def="int" name="InactiveTable"/>
          <field type="ident" def="int32" name="OpenCount"/>
          <field type="ident" def="uint32" name="EventNr"/>
          <field type="ident" def="uint32" name="Major"/>
          <field type="ident" def="uint32" name="Minor"/>
          <field type="ident" def="int" name="ReadOnly"/>
          <field type="ident" def="int32" name="TargetCount"/>
        </type>
        <type name="TaskType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="AddNodeType" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="DevmapperLogCallback">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="C"/>
              <item value="int"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="char"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="C"/>
              <item value="int"/>
            </type>
            <type type="selector">
              <prefix value="C"/>
              <item value="int"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="char"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DeviceIdExists">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="TaskCreateNamed">
          <recvList/>
          <paramsList>
            <type type="ident" def="TaskType"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TaskCreate">
          <recvList/>
          <paramsList>
            <type type="ident" def="TaskType"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetSector">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetCookie">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint"/>
            </type>
            <type type="ident" def="uint16"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetAddNode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="AddNodeType"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetRo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AddTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDeps">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Deps"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDriverVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetNextTarget">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="LoopbackSetCapacity">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FindLoopDeviceFor">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="UdevWait">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LogInitVerbose">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="LogInit">
          <recvList/>
          <paramsList>
            <type type="ident" def="DevmapperLogger"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetDevDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetLibraryVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UdevSyncSupported">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="UdevSetSyncSupport">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="CookieSupported">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RemoveDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetBlockDeviceSize">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BlockDeviceDiscard">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreatePool">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="uint32"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReloadPool">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="uint32"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDeps">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Deps"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDriverVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetStatus">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetTransactionId">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SuspendDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ResumeDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ActivateDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CreateSnapDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AttachLoopDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="LogLevelFatal"/>
        <name value="LogLevelErr"/>
        <name value="LogLevelWarn"/>
        <name value="LogLevelNotice"/>
        <name value="LogLevelInfo"/>
        <name value="LogLevelDebug"/>
        <name value="BlkGetSize64"/>
        <name value="BlkDiscard"/>
        <name value="LoopSetFd"/>
        <name value="LoopCtlGetFree"/>
        <name value="LoopGetStatus64"/>
        <name value="LoopSetStatus64"/>
        <name value="LoopClrFd"/>
        <name value="LoopSetCapacity"/>
        <name value="LoFlagsAutoClear"/>
        <name value="LoFlagsReadOnly"/>
        <name value="LoFlagsPartScan"/>
        <name value="LoKeySize"/>
        <name value="LoNameSize"/>
        <name value="DmUdevDisableSubsystemRulesFlag"/>
        <name value="DmUdevDisableDiskRulesFlag"/>
        <name value="DmUdevDisableOtherRulesFlag"/>
        <name value="DmUdevDisableLibraryFallback"/>
        <name value="DmGetLibraryVersion"/>
        <name value="DmGetNextTarget"/>
        <name value="DmLogInitVerbose"/>
        <name value="DmSetDevDir"/>
        <name value="DmTaskAddTarget"/>
        <name value="DmTaskCreate"/>
        <name value="DmTaskDestroy"/>
        <name value="DmTaskGetDeps"/>
        <name value="DmTaskGetInfo"/>
        <name value="DmTaskGetDriverVersion"/>
        <name value="DmTaskRun"/>
        <name value="DmTaskSetAddNode"/>
        <name value="DmTaskSetCookie"/>
        <name value="DmTaskSetMessage"/>
        <name value="DmTaskSetName"/>
        <name value="DmTaskSetRo"/>
        <name value="DmTaskSetSector"/>
        <name value="DmUdevWait"/>
        <name value="DmUdevSetSyncSupport"/>
        <name value="DmUdevGetSyncSupport"/>
        <name value="DmCookieSupported"/>
        <name value="LogWithErrnoInit"/>
        <name value="DeviceCreate"/>
        <name value="DeviceReload"/>
        <name value="DeviceRemove"/>
        <name value="DeviceRemoveAll"/>
        <name value="DeviceSuspend"/>
        <name value="DeviceResume"/>
        <name value="DeviceInfo"/>
        <name value="DeviceDeps"/>
        <name value="DeviceRename"/>
        <name value="DeviceVersion"/>
        <name value="DeviceStatus"/>
        <name value="DeviceTable"/>
        <name value="DeviceWaitevent"/>
        <name value="DeviceList"/>
        <name value="DeviceClear"/>
        <name value="DeviceMknodes"/>
        <name value="DeviceListVersions"/>
        <name value="DeviceTargetMsg"/>
        <name value="DeviceSetGeometry"/>
        <name value="AddNodeOnResume"/>
        <name value="AddNodeOnCreate"/>
        <name value="ErrTaskRun"/>
        <name value="ErrTaskSetName"/>
        <name value="ErrTaskSetMessage"/>
        <name value="ErrTaskSetAddNode"/>
        <name value="ErrTaskSetRo"/>
        <name value="ErrTaskAddTarget"/>
        <name value="ErrTaskSetSector"/>
        <name value="ErrTaskGetDeps"/>
        <name value="ErrTaskGetInfo"/>
        <name value="ErrTaskGetDriverVersion"/>
        <name value="ErrTaskSetCookie"/>
        <name value="ErrNilCookie"/>
        <name value="ErrAttachLoopbackDevice"/>
        <name value="ErrGetBlockSize"/>
        <name value="ErrUdevWait"/>
        <name value="ErrSetDevDir"/>
        <name value="ErrGetLibraryVersion"/>
        <name value="ErrCreateRemoveTask"/>
        <name value="ErrRunRemoveDevice"/>
        <name value="ErrInvalidAddNode"/>
        <name value="ErrGetLoopbackBackingFile"/>
        <name value="ErrLoopbackSetCapacity"/>
        <name value="ErrBusy"/>
        <name value="ErrDeviceIdExists"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/networkdriver/ipallocator">
      <types/>
      <functions>
        <function name="RegisterSubnet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RequestIP">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReleaseIP">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoAvailableIPs"/>
        <name value="ErrIPAlreadyAllocated"/>
        <name value="ErrIPOutOfRange"/>
        <name value="ErrNetworkAlreadyRegistered"/>
        <name value="ErrBadSubnet"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/systemd">
      <types/>
      <functions>
        <function name="SdNotify">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ListenFD">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="net"/>
                <item value="Listener"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SdBooted">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="SdNotifyNoSocket"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/aufs">
      <types>
        <type type="struct" name="Driver">
          <field type="ident" def="string" name="root"/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="active">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Unmount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Migrate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="array">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Diff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DiffSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ApplyDiff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="archive"/>
                <item value="Change"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="MsRemount"/>
        <name value="MsRemount"/>
        <name value="ErrAufsNotSupported"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/builtins">
      <types/>
      <functions>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/httputils">
      <types/>
      <functions>
        <function name="ResumableRequestReader">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="ResumableRequestReaderWithInitialResponse">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int64"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resumableRequestReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resumableRequestReader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/reexec">
      <types/>
      <functions>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Self">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Command">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Command">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/overlay">
      <types>
        <type name="ApplyDiffProtoDriver" type="interface">
          <method name="ApplyDiff">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="archive"/>
                <item value="ArchiveReader"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ActiveMount">
          <field type="ident" def="int" name="count"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="bool" name="mounted"/>
        </type>
        <type type="struct" name="Driver">
          <field type="ident" def="string" name="home"/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="active">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="ActiveMount"/>
            </valtype>
          </field>
        </type>
        <type name="CopyFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="NaiveDiffDriverWithApply">
          <recvList/>
          <paramsList>
            <type type="ident" def="ApplyDiffProtoDriver"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </returnsList>
        </function>
        <function name="ApplyDiff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="naiveDiffDriverWithApply"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="array">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ApplyDiff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrApplyDiffFallback"/>
        <name value="CopyHardlink"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/archive">
      <types>
        <type name="ChangeType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Change">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="ChangeType" name="Kind"/>
        </type>
        <type type="struct" name="FileInfo">
          <field type="pointer" name="parent">
            <type type="ident" def="FileInfo"/>
          </field>
          <field type="ident" def="string" name="name"/>
          <field type="pointer" name="stat">
            <type type="selector">
              <prefix value="system"/>
              <item value="Stat"/>
            </type>
          </field>
          <field type="map" name="children">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="FileInfo"/>
            </valtype>
          </field>
          <field type="slice" name="capability">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="added"/>
        </type>
        <type name="Archive" type="selector">
          <prefix value="io"/>
          <item value="ReadCloser"/>
        </type>
        <type name="ArchiveReader" type="selector">
          <prefix value="io"/>
          <item value="Reader"/>
        </type>
        <type name="Compression" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="TarOptions">
          <field type="slice" name="IncludeFiles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ExcludePatterns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="Compression" name="Compression"/>
          <field type="ident" def="bool" name="NoLchown"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="Archiver">
          <field type="func" name="Untar">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="TarOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="TempArchive">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="int64" name="read"/>
          <field type="ident" def="bool" name="closed"/>
        </type>
      </types>
      <functions>
        <function name="Generate">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnpackLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ArchiveReader"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ApplyLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ArchiveReader"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Change"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="changesByPath"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Changes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LookUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </returnsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FileInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </returnsList>
        </function>
        <function name="ChangesDirs">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ChangesSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="ExportChanges">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="Change"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CanonicalTarNameForPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CanonicalTarNameForPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsArchive">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="DetectCompression">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Compression"/>
          </returnsList>
        </function>
        <function name="DecompressStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CompressStream">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="Compression"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Extension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compression"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Tar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Compression"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TarWithOptions">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unpack">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Untar">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="TarOptions"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TarUntar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TarUntar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UntarPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UntarPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyWithTar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyFileWithTar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Archiver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyFileWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdStream">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTempArchive">
          <recvList/>
          <paramsList>
            <type type="ident" def="Archive"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TempArchive"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ChangeModify"/>
        <name value="ChangeAdd"/>
        <name value="ChangeDelete"/>
        <name value="ErrNotImplemented"/>
        <name value="Uncompressed"/>
        <name value="Bzip2"/>
        <name value="Gzip"/>
        <name value="Xz"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/truncindex">
      <types>
        <type type="struct" name="TruncIndex">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="pointer" name="trie">
            <type type="selector">
              <prefix value="patricia"/>
              <item value="Trie"/>
            </type>
          </field>
          <field type="map" name="ids">
            <keytype type="ident" def="string"/>
            <type type="struct" name=""/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTruncIndex">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TruncIndex"/>
            </type>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TruncIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TruncIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TruncIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrEmptyPrefix"/>
        <name value="ErrAmbiguousPrefix"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/system">
      <types>
        <type type="struct" name="Stat">
          <field type="ident" def="uint32" name="mode"/>
          <field type="ident" def="uint32" name="uid"/>
          <field type="ident" def="uint32" name="gid"/>
          <field type="ident" def="uint64" name="rdev"/>
          <field type="ident" def="int64" name="size"/>
          <field type="selector" name="mtim">
            <prefix value="syscall"/>
            <item value="Timespec"/>
          </field>
        </type>
        <type type="struct" name="MemInfo">
          <field type="ident" def="int64" name="MemTotal"/>
          <field type="ident" def="int64" name="MemFree"/>
          <field type="ident" def="int64" name="SwapTotal"/>
          <field type="ident" def="int64" name="SwapFree"/>
        </type>
      </types>
      <functions>
        <function name="Lgetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lsetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lgetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lsetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LUtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UtimesNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="Timespec"/>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Umask">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Umask">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Uid">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Gid">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Rdev">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="uint64"/>
          </returnsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Mtim">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="Timespec"/>
            </type>
          </returnsList>
        </function>
        <function name="GetLastModification">
          <recvList>
            <type type="ident" def="Stat"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="Timespec"/>
            </type>
          </returnsList>
        </function>
        <function name="Mknod">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mkdev">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="Mknod">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mkdev">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint32"/>
          </returnsList>
        </function>
        <function name="ReadMemInfo">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReadMemInfo">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="MemInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lstat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Stat"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Lstat">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Stat"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrMalformed"/>
        <name value="ErrNotSupportedPlatform"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/jsonlog">
      <types>
        <type type="struct" name="JSONLog">
          <field type="ident" def="string" name="Log"/>
          <field type="ident" def="string" name="Stream"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MarshalJSONBuf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONLog"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Format">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONLog"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONLog"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="WriteLog">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/namesgenerator">
      <types/>
      <functions>
        <function name="GetRandomName">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/version">
      <types>
        <type name="Version" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="LessThan">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="LessThanOrEqualTo">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GreaterThan">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GreaterThanOrEqualTo">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/runconfig">
      <types>
        <type name="NetworkMode" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="IpcMode" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PidMode" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="DeviceMapping">
          <field type="ident" def="string" name="PathOnHost"/>
          <field type="ident" def="string" name="PathInContainer"/>
          <field type="ident" def="string" name="CgroupPermissions"/>
        </type>
        <type type="struct" name="RestartPolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="MaximumRetryCount"/>
        </type>
        <type type="struct" name="HostConfig">
          <field type="slice" name="Binds">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ContainerIDFile"/>
          <field type="slice" name="LxcConf">
            <elmtype type="selector">
              <prefix value="utils"/>
              <item value="KeyValuePair"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="selector" name="PortBindings">
            <prefix value="nat"/>
            <item value="PortMap"/>
          </field>
          <field type="slice" name="Links">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="PublishAllPorts"/>
          <field type="slice" name="Dns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DnsSearch">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ExtraHosts">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="VolumesFrom">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Devices">
            <elmtype type="ident" def="DeviceMapping"/>
          </field>
          <field type="ident" def="NetworkMode" name="NetworkMode"/>
          <field type="ident" def="IpcMode" name="IpcMode"/>
          <field type="ident" def="PidMode" name="PidMode"/>
          <field type="slice" name="CapAdd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="CapDrop">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="slice" name="SecurityOpt">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="ReadonlyRootfs"/>
        </type>
        <type type="struct" name="ConfigAndHostConfig">
          <field type="ident" def="Config" name=""/>
          <field type="ident" def="HostConfig" name="HostConfig"/>
        </type>
        <type type="struct" name="ExecConfig">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="Detach"/>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="Domainname"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CpuShares"/>
          <field type="ident" def="string" name="Cpuset"/>
          <field type="ident" def="bool" name="AttachStdin"/>
          <field type="ident" def="bool" name="AttachStdout"/>
          <field type="ident" def="bool" name="AttachStderr"/>
          <field type="slice" name="PortSpecs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="ExposedPorts">
            <keytype type="selector">
              <prefix value="nat"/>
              <item value="Port"/>
            </keytype>
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="bool" name="OpenStdin"/>
          <field type="ident" def="bool" name="StdinOnce"/>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cmd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Image"/>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Entrypoint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="NetworkDisabled"/>
          <field type="ident" def="string" name="MacAddress"/>
          <field type="slice" name="OnBuild">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="HostConfig"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseDevice">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="DeviceMapping"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Merge">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsPrivate">
          <recvList>
            <type type="ident" def="NetworkMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsHost">
          <recvList>
            <type type="ident" def="NetworkMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsContainer">
          <recvList>
            <type type="ident" def="NetworkMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsNone">
          <recvList>
            <type type="ident" def="NetworkMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsPrivate">
          <recvList>
            <type type="ident" def="IpcMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsHost">
          <recvList>
            <type type="ident" def="IpcMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsContainer">
          <recvList>
            <type type="ident" def="IpcMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="ident" def="IpcMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Container">
          <recvList>
            <type type="ident" def="IpcMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IsPrivate">
          <recvList>
            <type type="ident" def="PidMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsHost">
          <recvList>
            <type type="ident" def="PidMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="ident" def="PidMode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="MergeConfigs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="HostConfig"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ConfigAndHostConfig"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerHostConfigFromJob">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="HostConfig"/>
            </type>
          </returnsList>
        </function>
        <function name="ExecConfigFromJob">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ExecConfig"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ParseExec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ExecConfig"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerConfigFromJob">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </returnsList>
        </function>
        <function name="Compare">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrInvalidWorkingDirectory"/>
        <name value="ErrConflictContainerNetworkAndLinks"/>
        <name value="ErrConflictContainerNetworkAndDns"/>
        <name value="ErrConflictNetworkHostname"/>
        <name value="ErrConflictHostNetworkAndDns"/>
        <name value="ErrConflictHostNetworkAndLinks"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon">
      <types>
        <type type="struct" name="Mount">
          <field type="ident" def="string" name="MountToPath"/>
          <field type="pointer" name="container">
            <type type="ident" def="Container"/>
          </field>
          <field type="pointer" name="volume">
            <type type="selector">
              <prefix value="volumes"/>
              <item value="Volume"/>
            </type>
          </field>
          <field type="ident" def="bool" name="Writable"/>
          <field type="ident" def="bool" name="copyData"/>
          <field type="pointer" name="from">
            <type type="ident" def="Container"/>
          </field>
        </type>
        <type type="struct" name="State">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="Running"/>
          <field type="ident" def="bool" name="Paused"/>
          <field type="ident" def="bool" name="Restarting"/>
          <field type="ident" def="bool" name="OOMKilled"/>
          <field type="ident" def="int" name="Pid"/>
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="string" name="Error"/>
          <field type="selector" name="StartedAt">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="chan" dir="3" name="waitChan">
            <type type="struct" name=""/>
          </field>
        </type>
        <type name="PortMapping" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type type="struct" name="NetworkSettings">
          <field type="ident" def="string" name="IPAddress"/>
          <field type="ident" def="int" name="IPPrefixLen"/>
          <field type="ident" def="string" name="MacAddress"/>
          <field type="ident" def="string" name="LinkLocalIPv6Address"/>
          <field type="ident" def="int" name="LinkLocalIPv6PrefixLen"/>
          <field type="ident" def="string" name="GlobalIPv6Address"/>
          <field type="ident" def="int" name="GlobalIPv6PrefixLen"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="IPv6Gateway"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="map" name="PortMapping">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="PortMapping"/>
          </field>
          <field type="selector" name="Ports">
            <prefix value="nat"/>
            <item value="PortMap"/>
          </field>
        </type>
        <type name="History" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Container"/>
          </elmtype>
        </type>
        <type type="struct" name="Daemon">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="repository"/>
          <field type="ident" def="string" name="sysInitPath"/>
          <field type="pointer" name="containers">
            <type type="ident" def="contStore"/>
          </field>
          <field type="pointer" name="execCommands">
            <type type="ident" def="execStore"/>
          </field>
          <field type="pointer" name="graph">
            <type type="selector">
              <prefix value="graph"/>
              <item value="Graph"/>
            </type>
          </field>
          <field type="pointer" name="repositories">
            <type type="selector">
              <prefix value="graph"/>
              <item value="TagStore"/>
            </type>
          </field>
          <field type="pointer" name="idIndex">
            <type type="selector">
              <prefix value="truncindex"/>
              <item value="TruncIndex"/>
            </type>
          </field>
          <field type="pointer" name="sysInfo">
            <type type="selector">
              <prefix value="sysinfo"/>
              <item value="SysInfo"/>
            </type>
          </field>
          <field type="pointer" name="volumes">
            <type type="selector">
              <prefix value="volumes"/>
              <item value="Repository"/>
            </type>
          </field>
          <field type="pointer" name="eng">
            <type type="selector">
              <prefix value="engine"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="pointer" name="config">
            <type type="ident" def="Config"/>
          </field>
          <field type="pointer" name="containerGraph">
            <type type="selector">
              <prefix value="graphdb"/>
              <item value="Database"/>
            </type>
          </field>
          <field type="selector" name="driver">
            <prefix value="graphdriver"/>
            <item value="Driver"/>
          </field>
          <field type="selector" name="execDriver">
            <prefix value="execdriver"/>
            <item value="Driver"/>
          </field>
          <field type="pointer" name="trustStore">
            <type type="selector">
              <prefix value="trust"/>
              <item value="TrustStore"/>
            </type>
          </field>
          <field type="pointer" name="statsCollector">
            <type type="ident" def="statsCollector"/>
          </field>
        </type>
        <type type="struct" name="StreamConfig">
          <field type="pointer" name="stdout">
            <type type="selector">
              <prefix value="broadcastwriter"/>
              <item value="BroadcastWriter"/>
            </type>
          </field>
          <field type="pointer" name="stderr">
            <type type="selector">
              <prefix value="broadcastwriter"/>
              <item value="BroadcastWriter"/>
            </type>
          </field>
          <field type="selector" name="stdin">
            <prefix value="io"/>
            <item value="ReadCloser"/>
          </field>
          <field type="selector" name="stdinPipe">
            <prefix value="io"/>
            <item value="WriteCloser"/>
          </field>
        </type>
        <type type="struct" name="Container">
          <field type="pointer" name="">
            <type type="ident" def="State"/>
          </field>
          <field type="ident" def="string" name="root"/>
          <field type="ident" def="string" name="basefs"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Path"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Config">
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="string" name="ImageID"/>
          <field type="pointer" name="NetworkSettings">
            <type type="ident" def="NetworkSettings"/>
          </field>
          <field type="ident" def="string" name="ResolvConfPath"/>
          <field type="ident" def="string" name="HostnamePath"/>
          <field type="ident" def="string" name="HostsPath"/>
          <field type="ident" def="string" name="LogPath"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Driver"/>
          <field type="ident" def="string" name="ExecDriver"/>
          <field type="pointer" name="command">
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Command"/>
            </type>
          </field>
          <field type="ident" def="StreamConfig" name=""/>
          <field type="pointer" name="daemon">
            <type type="ident" def="Daemon"/>
          </field>
          <field type="ident" def="string" name="MountLabel"/>
          <field type="ident" def="string" name="ProcessLabel"/>
          <field type="ident" def="string" name="AppArmorProfile"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="bool" name="UpdateDns"/>
          <field type="map" name="Volumes">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="VolumesRW">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="pointer" name="hostConfig">
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="HostConfig"/>
            </type>
          </field>
          <field type="map" name="activeLinks">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="links"/>
                <item value="Link"/>
              </type>
            </valtype>
          </field>
          <field type="pointer" name="monitor">
            <type type="ident" def="containerMonitor"/>
          </field>
          <field type="pointer" name="execCommands">
            <type type="ident" def="execStore"/>
          </field>
          <field type="map" name="AppliedVolumesFrom">
            <keytype type="ident" def="string"/>
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Pidfile"/>
          <field type="ident" def="string" name="Root"/>
          <field type="ident" def="bool" name="AutoRestart"/>
          <field type="slice" name="Dns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DnsSearch">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="EnableIPv6"/>
          <field type="ident" def="bool" name="EnableIptables"/>
          <field type="ident" def="bool" name="EnableIpForward"/>
          <field type="ident" def="bool" name="EnableIpMasq"/>
          <field type="selector" name="DefaultIp">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="string" name="BridgeIface"/>
          <field type="ident" def="string" name="BridgeIP"/>
          <field type="ident" def="string" name="FixedCIDR"/>
          <field type="ident" def="string" name="FixedCIDRv6"/>
          <field type="ident" def="bool" name="InterContainerCommunication"/>
          <field type="ident" def="string" name="GraphDriver"/>
          <field type="slice" name="GraphOptions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ExecDriver"/>
          <field type="ident" def="int" name="Mtu"/>
          <field type="ident" def="string" name="SocketGroup"/>
          <field type="ident" def="bool" name="EnableCors"/>
          <field type="ident" def="bool" name="DisableNetwork"/>
          <field type="ident" def="bool" name="EnableSelinuxSupport"/>
          <field type="map" name="Context">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
          <field type="ident" def="string" name="TrustKeyPath"/>
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ContainerWait">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Export">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mount"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="VolumePaths">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <type type="struct" name=""/>
            </type>
          </returnsList>
        </function>
        <function name="VolumeMounts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Mount"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="ContainerTop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerStop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="NewState">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="StateString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="WaitRunning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WaitStop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsRunning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetPid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="GetExitCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="SetRunning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetStopped">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ExitStatus"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetRestarting">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ExitStatus"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="IsRestarting">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="SetPaused">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="SetUnpaused">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="IsPaused">
          <recvList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ContainerStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerRestart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerResize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerExecResize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerRename">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerPause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerUnpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="PortMappingAPI">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetworkSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Table"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="ExitOnNext">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerMonitor"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerMonitor"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerMonitor"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Container"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Containers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerKill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerInspect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerExecInspect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ImageDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="DeleteImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Table"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="History"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="History"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="History"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="History"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Sort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="History"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="ContainerExport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="execConfig"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="execConfig"/>
            </type>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execStore"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerExecCreate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerExecStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="pointer">
              <type type="ident" def="execConfig"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetExecIDs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="execConfig"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerRm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="DeleteVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Rm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="contStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="contStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="contStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="contStore"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Container"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Register">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LogToDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="broadcastwriter"/>
                <item value="BroadcastWriter"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetFullContainerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Children">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Container"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Parents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RegisterLink">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RegisterLinks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDaemon">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDaemonFromDirectory">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unmount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="archive"/>
                <item value="Change"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Diff">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="ExitStatus"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ResourceStats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SubscribeToContainerStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="chan" dir="3">
              <type type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnsubscribeToContainerStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="chan" dir="3">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Nuke">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Graph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="graph"/>
                <item value="Graph"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Repositories">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="graph"/>
                <item value="TagStore"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Config">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </returnsList>
        </function>
        <function name="SystemConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="sysinfo"/>
                <item value="SysInfo"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="SystemInitPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GraphDriver">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </returnsList>
        </function>
        <function name="ExecutionDriver">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Driver"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="graphdb"/>
                <item value="Database"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="ImageGetCached">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerCreate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="HostConfig"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GenerateSecurityOpt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="IpcMode"/>
            </type>
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="PidMode"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerCopy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="FromDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ToDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WriteHostConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LogEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Output">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StdinPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="StdoutPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="StderrPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="StdoutLogPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="StderrLogPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="AllocateNetwork">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReleaseNetwork">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="RestoreNetwork">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="KillSig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Restart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ExportRw">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Export">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Changes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="archive"/>
                <item value="Change"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unmount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReadLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RootfsPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exposes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="nat"/>
              <item value="Port"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetPtyMaster">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HostConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="SetHostConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DisableLink">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetProcessLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetMountLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ResourceStats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="InstallFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="ContainerCommit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Commit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ContainerChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainerAttach">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Attach">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Daemon"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="StreamConfig"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="chan" dir="3">
              <type type="ident" def="error"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultPathEnv"/>
        <name value="ErrNotATTY"/>
        <name value="ErrNoTTY"/>
        <name value="ErrContainerStart"/>
        <name value="ErrContainerStartTimeout"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/nat">
      <types>
        <type type="struct" name="PortBinding">
          <field type="ident" def="string" name="HostIp"/>
          <field type="ident" def="string" name="HostPort"/>
        </type>
        <type name="PortMap" type="map">
          <keytype type="ident" def="Port"/>
          <valtype type="slice">
            <elmtype type="ident" def="PortBinding"/>
          </valtype>
        </type>
        <type name="PortSet" type="map">
          <keytype type="ident" def="Port"/>
          <type type="struct" name=""/>
        </type>
        <type name="Port" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="portSorter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="portSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="portSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Sort">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Port"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="ident" def="Port"/>
                <type type="ident" def="Port"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Port"/>
          </returnsList>
        </function>
        <function name="ParsePort">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Proto">
          <recvList>
            <type type="ident" def="Port"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Port">
          <recvList>
            <type type="ident" def="Port"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Int">
          <recvList>
            <type type="ident" def="Port"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="SplitProtoPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ParsePortSpecs">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="Port"/>
              <type type="struct" name=""/>
            </type>
            <type type="map">
              <keytype type="ident" def="Port"/>
              <valtype type="slice">
                <elmtype type="ident" def="PortBinding"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="PortSpecTemplate"/>
        <name value="PortSpecTemplateFormat"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/listenbuffer">
      <types/>
      <functions>
        <function name="NewListenBuffer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="chan" dir="3">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="defaultListener"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Addr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="defaultListener"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="defaultListener"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/units">
      <types/>
      <functions>
        <function name="HumanSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="BytesSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="FromHumanSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RAMInBytes">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HumanDuration">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="KB"/>
        <name value="MB"/>
        <name value="GB"/>
        <name value="TB"/>
        <name value="PB"/>
        <name value="KiB"/>
        <name value="MiB"/>
        <name value="GiB"/>
        <name value="TiB"/>
        <name value="PiB"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/ioutils">
      <types>
        <type type="struct" name="NopWriter"/>
        <type type="struct" name="NopFlusher"/>
      </types>
      <functions>
        <function name="Write">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nopWriteCloser"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NopWriteCloser">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NopFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writeCloserWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewWriteCloserWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readCloserWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewReadCloserWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readerErrWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewReaderErrWrapper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </returnsList>
        </function>
        <function name="NewBufReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </returnsList>
        </function>
        <function name="NewBufReaderWithDrainbufAndBuffer">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bufReader"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/daemon/execdriver/native">
      <types>
        <type type="struct" name="TtyConsole">
          <field type="pointer" name="MasterPty">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="IsRunning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="info"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Exec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ProcessConfig"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewDriver">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="StartCallback"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="ExitStatus"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Kill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unpause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Terminate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="execdriver"/>
              <item value="Info"/>
            </type>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetPidsForContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Clean">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ResourceStats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTtyConsole">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="ProcessConfig"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Master">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AttachPipes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="execdriver"/>
                <item value="Pipes"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TtyConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DriverName"/>
        <name value="Version"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/execdriver/native/template">
      <types/>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Config"/>
              </type>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/image">
      <types>
        <type type="struct" name="Image">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Parent"/>
          <field type="ident" def="string" name="Comment"/>
          <field type="selector" name="Created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Container"/>
          <field type="selector" name="ContainerConfig">
            <prefix value="runconfig"/>
            <item value="Config"/>
          </field>
          <field type="ident" def="string" name="DockerVersion"/>
          <field type="ident" def="string" name="Author"/>
          <field type="pointer" name="Config">
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="string" name="Architecture"/>
          <field type="ident" def="string" name="OS"/>
          <field type="ident" def="int64" name="Size"/>
          <field type="ident" def="Graph" name="graph"/>
        </type>
        <type name="Graph" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Image"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ImageRoot">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Driver">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="graphdriver"/>
                <item value="Driver"/>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="LoadImage">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="StoreImage">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetGraph">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Graph"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SaveSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveCheckSum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetCheckSum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RawJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TarLayer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="Archive"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="History">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Image"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WalkHistory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="Image"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetParent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetParentsSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="Depth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CheckDepth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewImgJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Image"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="MaxImageDepth"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/pubsub">
      <types>
        <type type="struct" name="Publisher">
          <field type="selector" name="m">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="ident" def="int" name="buffer"/>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="map" name="subscribers">
            <keytype type="ident" def="subscriber"/>
            <type type="struct" name=""/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewPublisher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Subscribe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="chan" dir="3">
              <type type="interface"/>
            </type>
          </returnsList>
        </function>
        <function name="Evict">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="chan" dir="3">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Publish">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Publisher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/iptables">
      <types>
        <type name="Action" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Table" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Chain">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="ident" def="Table" name="Table"/>
        </type>
        <type type="struct" name="ChainError">
          <field type="ident" def="string" name="Chain"/>
          <field type="slice" name="Output">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChainError"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewChain">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="Table"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RemoveExistingChain">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Table"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Forward">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Link">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Prerouting">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Output">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Chain"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Raw">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="Append"/>
        <name value="Delete"/>
        <name value="Insert"/>
        <name value="Nat"/>
        <name value="Filter"/>
        <name value="ErrIptablesNotFound"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/links">
      <types>
        <type type="struct" name="Link">
          <field type="ident" def="string" name="ParentIP"/>
          <field type="ident" def="string" name="ChildIP"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="ChildEnvironment">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="selector">
              <prefix value="nat"/>
              <item value="Port"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="IsEnabled"/>
          <field type="pointer" name="eng">
            <type type="selector">
              <prefix value="engine"/>
              <item value="Engine"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewLink">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="map">
              <keytype type="selector">
                <prefix value="nat"/>
                <item value="Port"/>
              </keytype>
              <type type="struct" name=""/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Link"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Alias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Link"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ToEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Link"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Enable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Link"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Disable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Link"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/graphdb">
      <types>
        <type type="struct" name="Entity">
          <field type="ident" def="string" name="id"/>
        </type>
        <type type="struct" name="Edge">
          <field type="ident" def="string" name="EntityID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ParentID"/>
        </type>
        <type name="Entities" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="pointer">
            <type type="ident" def="Entity"/>
          </valtype>
        </type>
        <type name="Edges" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Edge"/>
          </elmtype>
        </type>
        <type name="WalkFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Database">
          <field type="pointer" name="conn">
            <type type="selector">
              <prefix value="sql"/>
              <item value="DB"/>
            </type>
          </field>
          <field type="selector" name="mux">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
        <type type="struct" name="WalkMeta">
          <field type="pointer" name="Parent">
            <type type="ident" def="Entity"/>
          </field>
          <field type="pointer" name="Entity">
            <type type="ident" def="Entity"/>
          </field>
          <field type="ident" def="string" name="FullPath"/>
          <field type="pointer" name="Edge">
            <type type="ident" def="Edge"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="PathDepth">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pathSorter"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pathSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pathSorter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="IsNonUniqueNameError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewDatabase">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="sql"/>
                <item value="DB"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RootEntity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Entities"/>
          </returnsList>
        </function>
        <function name="Walk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="WalkFunc"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Children">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="WalkMeta"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Parents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Refs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="RefPaths">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Edges"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Rename">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Paths">
          <recvList>
            <type type="ident" def="Entities"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="NewSqliteConn">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewSqliteConn">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Database"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/mflag">
      <types>
        <type name="Value" type="interface">
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Getter" type="interface">
          <method name="Get">
            <paramsList/>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
        </type>
        <type name="ErrorHandling" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="FlagSet">
          <field type="func" name="Usage">
            <paramsList/>
            <resultsList/>
          </field>
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="bool" name="parsed"/>
          <field type="map" name="actual">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Flag"/>
            </valtype>
          </field>
          <field type="map" name="formal">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Flag"/>
            </valtype>
          </field>
          <field type="slice" name="args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="ErrorHandling" name="errorHandling"/>
          <field type="selector" name="output">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="slice" name="nArgRequirements">
            <elmtype type="ident" def="nArgRequirement"/>
          </field>
        </type>
        <type type="struct" name="Flag">
          <field type="slice" name="Names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Usage"/>
          <field type="ident" def="Value" name="Value"/>
          <field type="ident" def="string" name="DefValue"/>
        </type>
      </types>
      <functions>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="boolValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="boolValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="boolValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IsBoolFlag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="boolValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="intValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="intValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="intValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="int64Value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="int64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="int64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uintValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uintValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uintValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint64Value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="uint64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="float64Value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="float64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="float64Value"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="durationValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="durationValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="durationValue"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="flagSlice"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="flagSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="flagSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Out">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </returnsList>
        </function>
        <function name="SetOutput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="VisitAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="Flag"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="VisitAll">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="Flag"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="Flag"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Visit">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="Flag"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Flag"/>
            </type>
          </returnsList>
        </function>
        <function name="IsSet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Lookup">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Flag"/>
            </type>
          </returnsList>
        </function>
        <function name="IsSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Require">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="nArgRequirementType"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="CheckArgs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PrintDefaults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="PrintDefaults">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="FlagCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="FlagCountUndeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="NFlag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="NFlag">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Arg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Arg">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NArg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="NArg">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Args">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Args">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="BoolVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="BoolVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Bool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </returnsList>
        </function>
        <function name="Bool">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </returnsList>
        </function>
        <function name="IntVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="int"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="IntVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="int"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Int">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="int"/>
            </type>
          </returnsList>
        </function>
        <function name="Int">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="int"/>
            </type>
          </returnsList>
        </function>
        <function name="Int64Var">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Int64Var">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Int64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </returnsList>
        </function>
        <function name="Int64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </returnsList>
        </function>
        <function name="UintVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="UintVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Uint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="uint"/>
            </type>
          </returnsList>
        </function>
        <function name="Uint">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="uint"/>
            </type>
          </returnsList>
        </function>
        <function name="Uint64Var">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Uint64Var">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Uint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </returnsList>
        </function>
        <function name="Uint64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </returnsList>
        </function>
        <function name="StringVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="StringVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Float64Var">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="float64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Float64Var">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="float64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Float64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="float64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </returnsList>
        </function>
        <function name="Float64">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="float64"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </returnsList>
        </function>
        <function name="DurationVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DurationVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Duration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Duration">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Var">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Value"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Var">
          <recvList/>
          <paramsList>
            <type type="ident" def="Value"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Parse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Parsed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Parse">
          <recvList/>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Parsed">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewFlagSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ErrorHandling"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </returnsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlagSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ErrorHandling"/>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="ErrHelp"/>
        <name value="ErrRetry"/>
        <name value="ContinueOnError"/>
        <name value="ExitOnError"/>
        <name value="PanicOnError"/>
        <name value="Exact"/>
        <name value="Max"/>
        <name value="Min"/>
        <name value="Usage"/>
        <name value="CommandLine"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/btrfs">
      <types>
        <type type="struct" name="Driver">
          <field type="ident" def="string" name="home"/>
        </type>
      </types>
      <functions>
        <function name="BtrfsBuildVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="BtrfsLibVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="BtrfsBuildVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="BtrfsLibVersion">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="array">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/networkfs/etchosts">
      <types>
        <type type="struct" name="Record">
          <field type="ident" def="string" name="Hosts"/>
          <field type="ident" def="string" name="IP"/>
        </type>
      </types>
      <functions>
        <function name="WriteTo">
          <recvList>
            <type type="ident" def="Record"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Build">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="Record"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Update">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/term">
      <types>
        <type type="struct" name="Termios">
          <field type="ident" def="uint32" name="Iflag"/>
          <field type="ident" def="uint32" name="Oflag"/>
          <field type="ident" def="uint32" name="Cflag"/>
          <field type="ident" def="uint32" name="Lflag"/>
          <field type="array" name="Cc">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint32" name="Ispeed"/>
          <field type="ident" def="uint32" name="Ospeed"/>
        </type>
        <type type="struct" name="Termios">
          <field type="ident" def="uint32" name="Iflag"/>
          <field type="ident" def="uint32" name="Oflag"/>
          <field type="ident" def="uint32" name="Cflag"/>
          <field type="ident" def="uint32" name="Lflag"/>
          <field type="array" name="Cc">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint32" name="Ispeed"/>
          <field type="ident" def="uint32" name="Ospeed"/>
        </type>
        <type type="struct" name="Termios">
          <field type="ident" def="uint64" name="Iflag"/>
          <field type="ident" def="uint64" name="Oflag"/>
          <field type="ident" def="uint64" name="Cflag"/>
          <field type="ident" def="uint64" name="Lflag"/>
          <field type="array" name="Cc">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint64" name="Ispeed"/>
          <field type="ident" def="uint64" name="Ospeed"/>
        </type>
        <type type="struct" name="State">
          <field type="ident" def="uint32" name="mode"/>
        </type>
        <type type="struct" name="Winsize">
          <field type="ident" def="uint16" name="Height"/>
          <field type="ident" def="uint16" name="Width"/>
          <field type="ident" def="uint16" name="x"/>
          <field type="ident" def="uint16" name="y"/>
        </type>
        <type type="struct" name="State">
          <field type="ident" def="Termios" name="termios"/>
        </type>
        <type type="struct" name="Winsize">
          <field type="ident" def="uint16" name="Height"/>
          <field type="ident" def="uint16" name="Width"/>
          <field type="ident" def="uint16" name="x"/>
          <field type="ident" def="uint16" name="y"/>
        </type>
        <type name="Termios" type="selector">
          <prefix value="syscall"/>
          <item value="Termios"/>
        </type>
        <type name="SHORT" type="ident">
          <type type="ident" def="int16"/>
        </type>
        <type type="struct" name="SMALL_RECT">
          <field type="ident" def="SHORT" name="Left"/>
          <field type="ident" def="SHORT" name="Top"/>
          <field type="ident" def="SHORT" name="Right"/>
          <field type="ident" def="SHORT" name="Bottom"/>
        </type>
        <type type="struct" name="COORD">
          <field type="ident" def="SHORT" name="X"/>
          <field type="ident" def="SHORT" name="Y"/>
        </type>
        <type name="WORD" type="ident">
          <type type="ident" def="uint16"/>
        </type>
        <type type="struct" name="CONSOLE_SCREEN_BUFFER_INFO">
          <field type="ident" def="COORD" name="dwSize"/>
          <field type="ident" def="COORD" name="dwCursorPosition"/>
          <field type="ident" def="WORD" name="wAttributes"/>
          <field type="ident" def="SMALL_RECT" name="srWindow"/>
          <field type="ident" def="COORD" name="dwMaximumWindowSize"/>
        </type>
      </types>
      <functions>
        <function name="MakeRaw">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRaw">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRaw">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetWinsize">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Winsize"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetWinsize">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="Winsize"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RestoreTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveState">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DisableEcho">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetRawTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRaw">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetWinsize">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Winsize"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetWinsize">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="Winsize"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="RestoreTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveState">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DisableEcho">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetRawTerminal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRaw">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetConsoleMode">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="uint32"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetConsoleMode">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetConsoleScreenBufferInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="CONSOLE_SCREEN_BUFFER_INFO"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="IGNBRK"/>
        <name value="PARMRK"/>
        <name value="INLCR"/>
        <name value="IGNCR"/>
        <name value="ECHONL"/>
        <name value="CSIZE"/>
        <name value="ICRNL"/>
        <name value="ISTRIP"/>
        <name value="PARENB"/>
        <name value="ECHO"/>
        <name value="ICANON"/>
        <name value="ISIG"/>
        <name value="IXON"/>
        <name value="BRKINT"/>
        <name value="INPCK"/>
        <name value="OPOST"/>
        <name value="CS8"/>
        <name value="IEXTEN"/>
        <name value="IGNBRK"/>
        <name value="PARMRK"/>
        <name value="INLCR"/>
        <name value="IGNCR"/>
        <name value="ECHONL"/>
        <name value="CSIZE"/>
        <name value="ICRNL"/>
        <name value="ISTRIP"/>
        <name value="PARENB"/>
        <name value="ECHO"/>
        <name value="ICANON"/>
        <name value="ISIG"/>
        <name value="IXON"/>
        <name value="BRKINT"/>
        <name value="INPCK"/>
        <name value="OPOST"/>
        <name value="CS8"/>
        <name value="IEXTEN"/>
        <name value="ErrInvalidState"/>
        <name value="ENABLE_ECHO_INPUT"/>
        <name value="ENABLE_INSERT_MODE"/>
        <name value="ENABLE_LINE_INPUT"/>
        <name value="ENABLE_MOUSE_INPUT"/>
        <name value="ENABLE_PROCESSED_INPUT"/>
        <name value="ENABLE_QUICK_EDIT_MODE"/>
        <name value="ENABLE_WINDOW_INPUT"/>
        <name value="ENABLE_PROCESSED_OUTPUT"/>
        <name value="ENABLE_WRAP_AT_EOL_OUTPUT"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/symlink">
      <types/>
      <functions>
        <function name="FollowSymlinkInScope">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/api/stats">
      <types>
        <type type="struct" name="ThrottlingData">
          <field type="ident" def="uint64" name="Periods"/>
          <field type="ident" def="uint64" name="ThrottledPeriods"/>
          <field type="ident" def="uint64" name="ThrottledTime"/>
        </type>
        <type type="struct" name="CpuUsage">
          <field type="ident" def="uint64" name="TotalUsage"/>
          <field type="slice" name="PercpuUsage">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="UsageInKernelmode"/>
          <field type="ident" def="uint64" name="UsageInUsermode"/>
        </type>
        <type type="struct" name="CpuStats">
          <field type="ident" def="CpuUsage" name="CpuUsage"/>
          <field type="ident" def="uint64" name="SystemUsage"/>
          <field type="ident" def="ThrottlingData" name="ThrottlingData"/>
        </type>
        <type type="struct" name="MemoryStats">
          <field type="ident" def="uint64" name="Usage"/>
          <field type="ident" def="uint64" name="MaxUsage"/>
          <field type="map" name="Stats">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="Failcnt"/>
          <field type="ident" def="uint64" name="Limit"/>
        </type>
        <type type="struct" name="BlkioStatEntry">
          <field type="ident" def="uint64" name="Major"/>
          <field type="ident" def="uint64" name="Minor"/>
          <field type="ident" def="string" name="Op"/>
          <field type="ident" def="uint64" name="Value"/>
        </type>
        <type type="struct" name="BlkioStats">
          <field type="slice" name="IoServiceBytesRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServicedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoQueuedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServiceTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoWaitTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoMergedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="SectorsRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
        </type>
        <type type="struct" name="Network">
          <field type="ident" def="uint64" name="RxBytes"/>
          <field type="ident" def="uint64" name="RxPackets"/>
          <field type="ident" def="uint64" name="RxErrors"/>
          <field type="ident" def="uint64" name="RxDropped"/>
          <field type="ident" def="uint64" name="TxBytes"/>
          <field type="ident" def="uint64" name="TxPackets"/>
          <field type="ident" def="uint64" name="TxErrors"/>
          <field type="ident" def="uint64" name="TxDropped"/>
        </type>
        <type type="struct" name="Stats">
          <field type="selector" name="Read">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="Network" name="Network"/>
          <field type="ident" def="CpuStats" name="CpuStats"/>
          <field type="ident" def="MemoryStats" name="MemoryStats"/>
          <field type="ident" def="BlkioStats" name="BlkioStats"/>
        </type>
      </types>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/registry/v2">
      <types>
        <type type="struct" name="URLBuilder">
          <field type="pointer" name="root">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="pointer" name="router">
            <type type="selector">
              <prefix value="mux"/>
              <item value="Router"/>
            </type>
          </field>
        </type>
        <type name="ErrorCode" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="ErrorCode" name="Code"/>
          <field type="ident" def="string" name="Message"/>
          <field type="interface" name="Detail"/>
        </type>
        <type type="struct" name="Errors">
          <field type="slice" name="Errors">
            <elmtype type="ident" def="Error"/>
          </field>
        </type>
        <type type="struct" name="ErrorDescriptor">
          <field type="ident" def="ErrorCode" name="Code"/>
          <field type="ident" def="string" name="Value"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Description"/>
          <field type="slice" name="HTTPStatusCodes">
            <elmtype type="ident" def="int"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewURLBuilder">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </returnsList>
        </function>
        <function name="NewURLBuilderFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewURLBuilderFromRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </returnsList>
        </function>
        <function name="BuildBaseURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildTagsURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildManifestURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildBlobURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildBlobUploadURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="url"/>
                <item value="Values"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="BuildBlobUploadChunkURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLBuilder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="url"/>
                <item value="Values"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="URL">
          <recvList>
            <type type="ident" def="clonedRoute"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Router">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="mux"/>
                <item value="Router"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="ParseErrorCode">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="ErrorCode"/>
          </returnsList>
        </function>
        <function name="Descriptor">
          <recvList>
            <type type="ident" def="ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="ErrorDescriptor"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Message">
          <recvList>
            <type type="ident" def="ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MarshalText">
          <recvList>
            <type type="ident" def="ErrorCode"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Errors"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ErrorCode"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="PushErr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Errors"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Errors"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Errors"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Errors"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="RouteNameBase"/>
        <name value="RouteNameManifest"/>
        <name value="RouteNameTags"/>
        <name value="RouteNameBlob"/>
        <name value="RouteNameBlobUpload"/>
        <name value="RouteNameBlobUploadChunk"/>
        <name value="RepositoryNameComponentRegexp"/>
        <name value="RepositoryNameRegexp"/>
        <name value="TagNameRegexp"/>
        <name value="ErrorCodeUnknown"/>
        <name value="ErrorCodeDigestInvalid"/>
        <name value="ErrorCodeSizeInvalid"/>
        <name value="ErrorCodeNameInvalid"/>
        <name value="ErrorCodeTagInvalid"/>
        <name value="ErrorCodeNameUnknown"/>
        <name value="ErrorCodeManifestUnknown"/>
        <name value="ErrorCodeManifestInvalid"/>
        <name value="ErrorCodeManifestUnverified"/>
        <name value="ErrorCodeBlobUnknown"/>
        <name value="ErrorCodeBlobUploadUnknown"/>
        <name value="ErrorDescriptors"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/networkdriver/portmapper">
      <types>
        <type name="UserlandProxy" type="interface">
          <method name="Start">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewProxyCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="UserlandProxy"/>
          </returnsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proxyCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proxyCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewMockProxyCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="UserlandProxy"/>
          </returnsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="mockProxyCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="mockProxyCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetIptablesChain">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="iptables"/>
                <item value="Chain"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Map">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unmap">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="NewProxy"/>
        <name value="ErrUnknownBackendAddressType"/>
        <name value="ErrPortMappedForIP"/>
        <name value="ErrPortNotMapped"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/registry">
      <types>
        <type type="struct" name="SearchResult">
          <field type="ident" def="int" name="StarCount"/>
          <field type="ident" def="bool" name="IsOfficial"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="IsTrusted"/>
          <field type="ident" def="string" name="Description"/>
        </type>
        <type type="struct" name="SearchResults">
          <field type="ident" def="string" name="Query"/>
          <field type="ident" def="int" name="NumResults"/>
          <field type="slice" name="Results">
            <elmtype type="ident" def="SearchResult"/>
          </field>
        </type>
        <type type="struct" name="RepositoryData">
          <field type="map" name="ImgList">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="ImgData"/>
            </valtype>
          </field>
          <field type="slice" name="Endpoints">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Tokens">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ImgData">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Checksum"/>
          <field type="ident" def="string" name="ChecksumPayload"/>
          <field type="ident" def="string" name="Tag"/>
        </type>
        <type type="struct" name="RegistryInfo">
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="bool" name="Standalone"/>
        </type>
        <type type="struct" name="FSLayer">
          <field type="ident" def="string" name="BlobSum"/>
        </type>
        <type type="struct" name="ManifestHistory">
          <field type="ident" def="string" name="V1Compatibility"/>
        </type>
        <type type="struct" name="ManifestData">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="ident" def="string" name="Architecture"/>
          <field type="slice" name="FSLayers">
            <elmtype type="pointer">
              <type type="ident" def="FSLayer"/>
            </elmtype>
          </field>
          <field type="slice" name="History">
            <elmtype type="pointer">
              <type type="ident" def="ManifestHistory"/>
            </elmtype>
          </field>
          <field type="ident" def="int" name="SchemaVersion"/>
        </type>
        <type name="APIVersion" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="IndexInfo">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Mirrors">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="Secure"/>
          <field type="ident" def="bool" name="Official"/>
        </type>
        <type type="struct" name="RepositoryInfo">
          <field type="pointer" name="Index">
            <type type="ident" def="IndexInfo"/>
          </field>
          <field type="ident" def="string" name="RemoteName"/>
          <field type="ident" def="string" name="LocalName"/>
          <field type="ident" def="string" name="CanonicalName"/>
          <field type="ident" def="bool" name="Official"/>
        </type>
        <type type="struct" name="Session">
          <field type="pointer" name="authConfig">
            <type type="ident" def="AuthConfig"/>
          </field>
          <field type="pointer" name="reqFactory">
            <type type="selector">
              <prefix value="utils"/>
              <item value="HTTPRequestFactory"/>
            </type>
          </field>
          <field type="pointer" name="indexEndpoint">
            <type type="ident" def="Endpoint"/>
          </field>
          <field type="pointer" name="jar">
            <type type="selector">
              <prefix value="cookiejar"/>
              <item value="Jar"/>
            </type>
          </field>
          <field type="ident" def="TimeoutType" name="timeout"/>
        </type>
        <type type="struct" name="Service">
          <field type="pointer" name="Config">
            <type type="ident" def="ServiceConfig"/>
          </field>
        </type>
        <type name="TimeoutType" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type type="struct" name="Endpoint">
          <field type="pointer" name="URL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="ident" def="APIVersion" name="Version"/>
          <field type="ident" def="bool" name="IsSecure"/>
          <field type="slice" name="AuthChallenges">
            <elmtype type="pointer">
              <type type="ident" def="AuthorizationChallenge"/>
            </elmtype>
          </field>
          <field type="pointer" name="URLBuilder">
            <type type="selector">
              <prefix value="v2"/>
              <item value="URLBuilder"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Options">
          <field type="selector" name="Mirrors">
            <prefix value="opts"/>
            <item value="ListOpts"/>
          </field>
          <field type="selector" name="InsecureRegistries">
            <prefix value="opts"/>
            <item value="ListOpts"/>
          </field>
        </type>
        <type type="struct" name="ServiceConfig">
          <field type="slice" name="InsecureRegistryCIDRs">
            <elmtype type="pointer">
              <type type="ident" def="netIPNet"/>
            </elmtype>
          </field>
          <field type="map" name="IndexConfigs">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="IndexInfo"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="AuthorizationChallenge">
          <field type="ident" def="string" name="Scheme"/>
          <field type="map" name="Parameters">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="AuthConfig">
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="Auth"/>
          <field type="ident" def="string" name="Email"/>
          <field type="ident" def="string" name="ServerAddress"/>
        </type>
        <type type="struct" name="ConfigFile">
          <field type="map" name="Configs">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="AuthConfig"/>
          </field>
          <field type="ident" def="string" name="rootPath"/>
        </type>
        <type type="struct" name="RequestAuthorization">
          <field type="pointer" name="authConfig">
            <type type="ident" def="AuthConfig"/>
          </field>
          <field type="pointer" name="registryEndpoint">
            <type type="ident" def="Endpoint"/>
          </field>
          <field type="ident" def="string" name="resource"/>
          <field type="ident" def="string" name="scope"/>
          <field type="slice" name="actions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="tokenLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="string" name="tokenCache"/>
          <field type="selector" name="tokenExpiration">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="APIVersion"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="V2RegistryEndpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetV2Authorization">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetV2ImageManifest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HeadV2ImageBlob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetV2ImageBlob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetV2ImageBlobReader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutV2ImageBlob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PutV2ImageManifest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetV2RemoteTags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewSession">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="AuthConfig"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="HTTPRequestFactory"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRemoteHistory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LookupRemoteImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRemoteImageJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRemoteImageLayer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRemoteTags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRepositoryData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RepositoryData"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PushImageChecksumRegistry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ImgData"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PushImageJSONRegistry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ImgData"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PushImageLayerRegistry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PushRegistryTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PushImageJSONIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ImgData"/>
              </elmtype>
            </type>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RepositoryData"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SearchRepositories">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SearchResults"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetAuthConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Session"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="AuthConfig"/>
            </type>
          </returnsList>
        </function>
        <function name="NewService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Options"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </returnsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Auth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Search">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ResolveRepository">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ResolveRepositoryInfo">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RepositoryInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ResolveIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ResolveIndexInfo">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRegistryConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="AddRequiredHeadersToRedirectedRequests">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HTTPRequestFactory">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="HTTPRequestFactory"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="simpleVersionInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="simpleVersionInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewEndpoint">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetEndpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepositoryInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="VersionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="APIVersion"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Ping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="RegistryInfo"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IndexServerAddress">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="IndexServerName">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="InstallFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Options"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="netIPNet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="netIPNet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewServiceConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Options"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </returnsList>
        </function>
        <function name="ValidateMirror">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateIndexName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateRepositoryName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewIndexInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetAuthConfigKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewRepositoryInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RepositoryInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetSearchTerm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepositoryInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ParseRepositoryInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RepositoryInfo"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NormalizeLocalName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewRequestAuthorization">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="AuthConfig"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </returnsList>
        </function>
        <function name="Authorize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestAuthorization"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LoadConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ConfigFile"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SaveConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ConfigFile"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Login">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="AuthConfig"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Endpoint"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="HTTPRequestFactory"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ResolveAuthConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="IndexInfo"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="AuthConfig"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="APIVersionUnknown"/>
        <name value="APIVersion1"/>
        <name value="APIVersion2"/>
        <name value="ErrAlreadyExists"/>
        <name value="ErrDoesNotExist"/>
        <name value="NoTimeout"/>
        <name value="ReceiveTimeout"/>
        <name value="ConnectTimeout"/>
        <name value="INDEXSERVER"/>
        <name value="REGISTRYSERVER"/>
        <name value="INDEXNAME"/>
        <name value="ErrInvalidRepositoryName"/>
        <name value="CONFIGFILE"/>
        <name value="ErrConfigFileMissing"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/networkdriver/bridge">
      <types/>
      <functions>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ifaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="networkInterface"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ifaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="networkInterface"/>
            </type>
          </returnsList>
        </function>
        <function name="InitDriver">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Allocate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Release">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="AllocatePort">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="LinkContainers">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultNetworkBridge"/>
        <name value="MaxAllocatedPortAttempts"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/sysinfo">
      <types>
        <type type="struct" name="SysInfo">
          <field type="ident" def="bool" name="MemoryLimit"/>
          <field type="ident" def="bool" name="SwapLimit"/>
          <field type="ident" def="bool" name="IPv4ForwardingDisabled"/>
          <field type="ident" def="bool" name="AppArmor"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="SysInfo"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/homedir">
      <types/>
      <functions>
        <function name="Key">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetShortcutString">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/builder">
      <types>
        <type type="struct" name="BuilderJob">
          <field type="pointer" name="Engine">
            <type type="selector">
              <prefix value="engine"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="pointer" name="Daemon">
            <type type="selector">
              <prefix value="daemon"/>
              <item value="Daemon"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Builder">
          <field type="pointer" name="Daemon">
            <type type="selector">
              <prefix value="daemon"/>
              <item value="Daemon"/>
            </type>
          </field>
          <field type="pointer" name="Engine">
            <type type="selector">
              <prefix value="engine"/>
              <item value="Engine"/>
            </type>
          </field>
          <field type="selector" name="OutStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="ErrStream">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="Verbose"/>
          <field type="ident" def="bool" name="UtilizeCache"/>
          <field type="ident" def="bool" name="Remove"/>
          <field type="ident" def="bool" name="ForceRemove"/>
          <field type="ident" def="bool" name="Pull"/>
          <field type="ident" def="bool" name="disableCommit"/>
          <field type="pointer" name="AuthConfig">
            <type type="selector">
              <prefix value="registry"/>
              <item value="AuthConfig"/>
            </type>
          </field>
          <field type="pointer" name="AuthConfigFile">
            <type type="selector">
              <prefix value="registry"/>
              <item value="ConfigFile"/>
            </type>
          </field>
          <field type="selector" name="OutOld">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="pointer" name="StreamFormatter">
            <type type="selector">
              <prefix value="utils"/>
              <item value="StreamFormatter"/>
            </type>
          </field>
          <field type="pointer" name="Config">
            <type type="selector">
              <prefix value="runconfig"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="map" name="TmpContainers">
            <keytype type="ident" def="string"/>
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="string" name="dockerfileName"/>
          <field type="pointer" name="dockerfile">
            <type type="selector">
              <prefix value="parser"/>
              <item value="Node"/>
            </type>
          </field>
          <field type="ident" def="string" name="image"/>
          <field type="ident" def="string" name="maintainer"/>
          <field type="ident" def="bool" name="cmdSet"/>
          <field type="selector" name="context">
            <prefix value="tarsum"/>
            <item value="TarSum"/>
          </field>
          <field type="ident" def="string" name="contextPath"/>
          <field type="ident" def="bool" name="noBaseImage"/>
        </type>
      </types>
      <functions>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BuilderJob"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="CmdBuild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BuilderJob"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdBuildConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BuilderJob"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="ContainsWildcards">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrDockerfileEmpty"/>
        <name value="NoBaseImageSpecifier"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/testutils">
      <types/>
      <functions>
        <function name="Timeout">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="RandomString">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/tailfile">
      <types/>
      <functions>
        <function name="TailFile">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrNonPositiveLinesNumber"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/networkdriver">
      <types/>
      <functions>
        <function name="CheckNameserverOverlaps">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CheckRouteOverlaps">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NetworkOverlaps">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NetworkRange">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </returnsList>
        </function>
        <function name="GetIfaceAddr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="net"/>
                <item value="Addr"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDefaultRouteIface">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoDefaultRoute"/>
        <name value="ErrNetworkOverlapsWithNameservers"/>
        <name value="ErrNetworkOverlaps"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/tarsum">
      <types>
        <type name="Version" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="TarSum" type="interface">
          <method name="GetSums">
            <paramsList/>
            <resultsList>
              <type type="ident" def="FileInfoSums"/>
            </resultsList>
          </method>
          <method name="Sum">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Version"/>
            </resultsList>
          </method>
          <method name="Hash">
            <paramsList/>
            <resultsList>
              <type type="ident" def="THash"/>
            </resultsList>
          </method>
        </type>
        <type name="THash" type="interface">
          <method name="Hash">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="hash"/>
                <item value="Hash"/>
              </type>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="FileInfoSumInterface" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Sum">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Pos">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int64"/>
            </resultsList>
          </method>
        </type>
        <type name="FileInfoSums" type="slice">
          <elmtype type="ident" def="FileInfoSumInterface"/>
        </type>
        <type name="BuilderContext" type="interface">
          <method name="Remove">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nopCloseFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nopCloseFlusher"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="VersionLabelForChecksum">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersions">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="Version"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Version"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetVersionFromTarsum">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Version"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTarSum">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="Version"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="TarSum"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTarSumHash">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="Version"/>
            <type type="ident" def="THash"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="TarSum"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewTarSumForLabel">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="TarSum"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Hash">
          <recvList>
            <type type="ident" def="tarSum"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="THash"/>
          </returnsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="ident" def="tarSum"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="Version"/>
          </returnsList>
        </function>
        <function name="NewTHash">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="selector">
                  <prefix value="hash"/>
                  <item value="Hash"/>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="THash"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="simpleTHash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Hash">
          <recvList>
            <type type="ident" def="simpleTHash"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="hash"/>
              <item value="Hash"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tarSum"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Sum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tarSum"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetSums">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tarSum"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FileInfoSums"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="fileInfoSum"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Sum">
          <recvList>
            <type type="ident" def="fileInfoSum"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Pos">
          <recvList>
            <type type="ident" def="fileInfoSum"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="FileInfoSumInterface"/>
          </returnsList>
        </function>
        <function name="GetAllFile">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="FileInfoSums"/>
          </returnsList>
        </function>
        <function name="GetDuplicatePaths">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="FileInfoSums"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SortByPos">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="SortByNames">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="SortBySums">
          <recvList>
            <type type="ident" def="FileInfoSums"/>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byName"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="bySum"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byPos"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tarSum"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="Version0"/>
        <name value="Version1"/>
        <name value="VersionDev"/>
        <name value="ErrNotVersion"/>
        <name value="ErrVersionNotImplemented"/>
        <name value="DefaultTHash"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/signal">
      <types/>
      <functions>
        <function name="Trap">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="CatchAll">
          <recvList/>
          <paramsList>
            <type type="chan" dir="3">
              <type type="selector">
                <prefix value="os"/>
                <item value="Signal"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="StopCatch">
          <recvList/>
          <paramsList>
            <type type="chan" dir="3">
              <type type="selector">
                <prefix value="os"/>
                <item value="Signal"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names>
        <name value="SIGCHLD"/>
        <name value="SIGWINCH"/>
        <name value="SignalMap"/>
        <name value="SIGCHLD"/>
        <name value="SIGWINCH"/>
        <name value="SignalMap"/>
        <name value="SignalMap"/>
        <name value="SignalMap"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/execdriver">
      <types>
        <type type="struct" name="StdConsole"/>
        <type type="struct" name="Pipes">
          <field type="selector" name="Stdin">
            <prefix value="io"/>
            <item value="ReadCloser"/>
          </field>
          <field type="selector" name="Stdout">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="Stderr">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
        </type>
        <type name="Context" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type name="StartCallback" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ProcessConfig"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </type>
        <type name="Info" type="interface">
          <method name="IsRunning">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="Terminal" type="interface">
          <method name="Resize">
            <paramsList>
              <type type="ident" def="int"/>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="TtyTerminal" type="interface">
          <method name="Master">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="os"/>
                  <item value="File"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ExitStatus">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="bool" name="OOMKilled"/>
        </type>
        <type name="Driver" type="interface">
          <method name="Run">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
              <type type="pointer">
                <type type="ident" def="Pipes"/>
              </type>
              <type type="ident" def="StartCallback"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="ExitStatus"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Exec">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
              <type type="pointer">
                <type type="ident" def="ProcessConfig"/>
              </type>
              <type type="pointer">
                <type type="ident" def="Pipes"/>
              </type>
              <type type="ident" def="StartCallback"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="int"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Kill">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Pause">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unpause">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Info">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Info"/>
            </resultsList>
          </method>
          <method name="GetPidsForContainer">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="int"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Terminate">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Command"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Clean">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Stats">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="ResourceStats"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Network">
          <field type="pointer" name="Interface">
            <type type="ident" def="NetworkInterface"/>
          </field>
          <field type="ident" def="int" name="Mtu"/>
          <field type="ident" def="string" name="ContainerID"/>
          <field type="ident" def="bool" name="HostNetworking"/>
        </type>
        <type type="struct" name="Ipc">
          <field type="ident" def="string" name="ContainerID"/>
          <field type="ident" def="bool" name="HostIpc"/>
        </type>
        <type type="struct" name="Pid">
          <field type="ident" def="bool" name="HostPid"/>
        </type>
        <type type="struct" name="NetworkInterface">
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="IPAddress"/>
          <field type="ident" def="int" name="IPPrefixLen"/>
          <field type="ident" def="string" name="MacAddress"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="ident" def="string" name="GlobalIPv6Address"/>
          <field type="ident" def="string" name="LinkLocalIPv6Address"/>
          <field type="ident" def="int" name="GlobalIPv6PrefixLen"/>
          <field type="ident" def="string" name="IPv6Gateway"/>
        </type>
        <type type="struct" name="Resources">
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CpuShares"/>
          <field type="ident" def="string" name="Cpuset"/>
        </type>
        <type type="struct" name="ResourceStats">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="libcontainer"/>
              <item value="ContainerStats"/>
            </type>
          </field>
          <field type="selector" name="Read">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int64" name="MemoryLimit"/>
          <field type="ident" def="uint64" name="SystemUsage"/>
        </type>
        <type type="struct" name="Mount">
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Destination"/>
          <field type="ident" def="bool" name="Writable"/>
          <field type="ident" def="bool" name="Private"/>
          <field type="ident" def="bool" name="Slave"/>
        </type>
        <type type="struct" name="ProcessConfig">
          <field type="selector" name="">
            <prefix value="exec"/>
            <item value="Cmd"/>
          </field>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="bool" name="Tty"/>
          <field type="ident" def="string" name="Entrypoint"/>
          <field type="slice" name="Arguments">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="Terminal" name="Terminal"/>
          <field type="ident" def="string" name="Console"/>
        </type>
        <type type="struct" name="Command">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Rootfs"/>
          <field type="ident" def="bool" name="ReadonlyRootfs"/>
          <field type="ident" def="string" name="InitPath"/>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="ident" def="string" name="ConfigPath"/>
          <field type="pointer" name="Network">
            <type type="ident" def="Network"/>
          </field>
          <field type="pointer" name="Ipc">
            <type type="ident" def="Ipc"/>
          </field>
          <field type="pointer" name="Pid">
            <type type="ident" def="Pid"/>
          </field>
          <field type="pointer" name="Resources">
            <type type="ident" def="Resources"/>
          </field>
          <field type="slice" name="Mounts">
            <elmtype type="ident" def="Mount"/>
          </field>
          <field type="slice" name="AllowedDevices">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="devices"/>
                <item value="Device"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="AutoCreatedDevices">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="devices"/>
                <item value="Device"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="CapAdd">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="CapDrop">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="ContainerPid"/>
          <field type="ident" def="ProcessConfig" name="ProcessConfig"/>
          <field type="ident" def="string" name="ProcessLabel"/>
          <field type="ident" def="string" name="MountLabel"/>
          <field type="slice" name="LxcConfig">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="AppArmorProfile"/>
        </type>
      </types>
      <functions>
        <function name="TweakCapabilities">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewStdConsole">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ProcessConfig"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Pipes"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="StdConsole"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AttachPipes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="Pipes"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StdConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewPipes">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Pipes"/>
            </type>
          </returnsList>
        </function>
        <function name="InitContainer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Command"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Config"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="SetupCgroups">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="Command"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Stats">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="ResourceStats"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotRunning"/>
        <name value="ErrWaitTimeoutReached"/>
        <name value="ErrDriverAlreadyRegistered"/>
        <name value="ErrDriverNotFound"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/api/server">
      <types>
        <type type="struct" name="HttpServer">
          <field type="pointer" name="srv">
            <type type="selector">
              <prefix value="http"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="selector" name="l">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
        </type>
        <type name="HttpApiFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="version"/>
              <item value="Version"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Server" type="interface">
          <method name="Serve">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AttachProfiler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="mux"/>
                <item value="Router"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="version"/>
              <item value="Version"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Server"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ServeApi">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="AcceptConnections">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/timeutils">
      <types/>
      <functions>
        <function name="FastMarshalJSON">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="RFC3339NanoFixed"/>
        <name value="JSONFormat"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/engine">
      <types>
        <type type="struct" name="Table">
          <field type="slice" name="Data">
            <elmtype type="pointer">
              <type type="ident" def="Env"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="sortKey"/>
          <field type="chan" dir="3" name="Chan">
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Output">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="dests">
            <elmtype type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </elmtype>
          </field>
          <field type="selector" name="tasks">
            <prefix value="sync"/>
            <item value="WaitGroup"/>
          </field>
          <field type="ident" def="bool" name="used"/>
        </type>
        <type type="struct" name="Input">
          <field type="selector" name="src">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="Job">
          <field type="pointer" name="Eng">
            <type type="ident" def="Engine"/>
          </field>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="env">
            <type type="ident" def="Env"/>
          </field>
          <field type="pointer" name="Stdout">
            <type type="ident" def="Output"/>
          </field>
          <field type="pointer" name="Stderr">
            <type type="ident" def="Output"/>
          </field>
          <field type="pointer" name="Stdin">
            <type type="ident" def="Input"/>
          </field>
          <field type="ident" def="Handler" name="handler"/>
          <field type="ident" def="Status" name="status"/>
          <field type="selector" name="end">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="bool" name="closeIO"/>
        </type>
        <type name="Status" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Hack" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="interface"/>
        </type>
        <type name="Env" type="slice">
          <elmtype type="ident" def="string"/>
        </type>
        <type type="struct" name="Decoder">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="json"/>
              <item value="Decoder"/>
            </type>
          </field>
        </type>
        <type name="Installer" type="interface">
          <method name="Install">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Engine"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Handler" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Status"/>
          </resultsList>
        </type>
        <type type="struct" name="Engine">
          <field type="map" name="handlers">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Handler"/>
          </field>
          <field type="ident" def="Handler" name="catchall"/>
          <field type="ident" def="Hack" name="hack"/>
          <field type="ident" def="string" name="id"/>
          <field type="selector" name="Stdout">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="Stderr">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="Stdin">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="ident" def="bool" name="Logging"/>
          <field type="selector" name="tasks">
            <prefix value="sync"/>
            <item value="WaitGroup"/>
          </field>
          <field type="selector" name="l">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="ident" def="bool" name="shutdown"/>
          <field type="slice" name="onShutdown">
            <elmtype type="func">
              <paramsList/>
              <resultsList/>
            </elmtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTable">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </returnsList>
        </function>
        <function name="SetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Sort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="ReverseSort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="WriteListTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ToListString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReadListFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Tail">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="NewOutput">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </returnsList>
        </function>
        <function name="Used">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="AddPipe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewInput">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Input"/>
            </type>
          </returnsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Input"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Input"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Input"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AddEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AddListTable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AddTable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Output"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Table"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CallString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="StatusString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Env">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </returnsList>
        </function>
        <function name="EnvExists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Getenv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GetenvBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="SetenvBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetenvSubEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </returnsList>
        </function>
        <function name="SetenvSubEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetenvInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="GetenvInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="SetenvInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetenvInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetenvList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetenvJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetenvJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetenvList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Setenv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DecodeEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="EncodeEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ImportEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Environ">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Logf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Printf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Errorf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Status"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Status"/>
          </returnsList>
        </function>
        <function name="StatusCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="SetCloseIO">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Hack_GetGlobalVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="interface"/>
          </returnsList>
        </function>
        <function name="Hack_SetGlobalVar">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="SetBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="GetInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
          </returnsList>
        </function>
        <function name="SetInt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="SetInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetSubEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </returnsList>
        </function>
        <function name="SetSubEnv">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewDecoder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Decoder"/>
            </type>
          </returnsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Decoder"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetAuto">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Import">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Map">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="MultiMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="InitMultiMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Env"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Handler"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Register">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Handler"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="RegisterCatchall">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Handler"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Job">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
          </returnsList>
        </function>
        <function name="OnShutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="IsShutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="ParseJob">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Job"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="StatusOK"/>
        <name value="StatusErr"/>
        <name value="StatusNotFound"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/chrootarchive">
      <types/>
      <functions>
        <function name="ApplyLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Untar">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="archive"/>
                <item value="TarOptions"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TarUntar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CopyFileWithTar">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UntarPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/networkfs/resolvconf">
      <types/>
      <functions>
        <function name="Get">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetIfChanged">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetLastModified">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="FilterResolvDns">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="GetNameservers">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetNameserversAsCIDR">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetSearchDomains">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Build">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/builder/command">
      <types/>
      <functions/>
      <names>
        <name value="Env"/>
        <name value="Maintainer"/>
        <name value="Add"/>
        <name value="Copy"/>
        <name value="From"/>
        <name value="Onbuild"/>
        <name value="Workdir"/>
        <name value="Run"/>
        <name value="Cmd"/>
        <name value="Entrypoint"/>
        <name value="Expose"/>
        <name value="Volume"/>
        <name value="User"/>
        <name value="Insert"/>
        <name value="Commands"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/common">
      <types/>
      <functions>
        <function name="TruncateID">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="GenerateRandomID">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="RandomString">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/volumes">
      <types>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="IsBindMount"/>
          <field type="ident" def="bool" name="Writable"/>
          <field type="map" name="containers">
            <keytype type="ident" def="string"/>
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="string" name="configPath"/>
          <field type="pointer" name="repository">
            <type type="ident" def="Repository"/>
          </field>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="Repository">
          <field type="ident" def="string" name="configPath"/>
          <field type="selector" name="driver">
            <prefix value="graphdriver"/>
            <item value="Driver"/>
          </field>
          <field type="map" name="volumes">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Volume"/>
            </valtype>
          </field>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Export">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Containers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="AddContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ToDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FromDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewRepository">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Repository"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repository"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repository"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="FindOrCreateVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repository"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Volume"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/graph">
      <types>
        <type type="struct" name="TagStore">
          <field type="ident" def="string" name="path"/>
          <field type="pointer" name="graph">
            <type type="ident" def="Graph"/>
          </field>
          <field type="map" name="Repositories">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Repository"/>
          </field>
          <field type="selector" name="trustKey">
            <prefix value="libtrust"/>
            <item value="PrivateKey"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="pullingPool">
            <keytype type="ident" def="string"/>
            <valtype type="chan" dir="3">
              <type type="struct" name=""/>
            </valtype>
          </field>
          <field type="map" name="pushingPool">
            <keytype type="ident" def="string"/>
            <valtype type="chan" dir="3">
              <type type="struct" name=""/>
            </valtype>
          </field>
        </type>
        <type name="Repository" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type type="struct" name="Graph">
          <field type="ident" def="string" name="Root"/>
          <field type="pointer" name="idIndex">
            <type type="selector">
              <prefix value="truncindex"/>
              <item value="TruncIndex"/>
            </type>
          </field>
          <field type="selector" name="driver">
            <prefix value="graphdriver"/>
            <item value="Driver"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="CmdViz">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="ident" def="Repository"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Repository"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="ident" def="Repository"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Repository"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="NewTagStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
            <type type="selector">
              <prefix value="libtrust"/>
              <item value="PrivateKey"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="LookupImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ByID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="ImageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DeleteAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="Repository"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetRepoRefs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </returnsList>
        </function>
        <function name="ValidateTagName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Engine"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="CmdSet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdGet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdLookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdTarLayer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdPush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdPull">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="WriteStatus">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="StreamFormatter"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="CmdLoad">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdLoad">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdImport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdHistory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="NewGraph">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="IsNotExist">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="runconfig"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Register">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="image"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="archive"/>
              <item value="ArchiveReader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="TempLayerArchive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="utils"/>
                <item value="StreamFormatter"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="archive"/>
                <item value="TempArchive"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mktemp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="SetupInitLayer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Map">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="image"/>
                  <item value="Image"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ByParent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="image"/>
                    <item value="Image"/>
                  </type>
                </elmtype>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Heads">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="image"/>
                  <item value="Image"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ImageRoot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Driver">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Graph"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </returnsList>
        </function>
        <function name="CmdImageExport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="engine"/>
                <item value="Job"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Status"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DEFAULTTAG"/>
        <name value="ErrV2RegistryUnavailable"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/pkg/pools">
      <types>
        <type type="struct" name="BufioReaderPool">
          <field type="ident" def="int" name="size"/>
        </type>
        <type type="struct" name="BufioWriterPool">
          <field type="ident" def="int" name="size"/>
        </type>
        <type type="struct" name="BufioReaderPool">
          <field type="selector" name="pool">
            <prefix value="sync"/>
            <item value="Pool"/>
          </field>
        </type>
        <type type="struct" name="BufioWriterPool">
          <field type="selector" name="pool">
            <prefix value="sync"/>
            <item value="Pool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewReadCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewWriteCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewReadCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioReaderPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewWriteCloserWrapper">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BufioWriterPool"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="BufioReader32KPool"/>
        <name value="BufioWriter32KPool"/>
        <name value="BufioReader32KPool"/>
        <name value="BufioWriter32KPool"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/graphtest">
      <types>
        <type type="struct" name="Driver">
          <field type="selector" name="">
            <prefix value="graphdriver"/>
            <item value="Driver"/>
          </field>
          <field type="ident" def="string" name="root"/>
          <field type="ident" def="int" name="refCount"/>
        </type>
      </types>
      <functions>
        <function name="InitLoopbacks">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetDriver">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
          </returnsList>
        </function>
        <function name="PutDriver">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DriverTestCreateEmpty">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DriverTestCreateBase">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DriverTestCreateSnap">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/devmapper">
      <types>
        <type type="struct" name="Driver">
          <field type="pointer" name="">
            <type type="ident" def="DeviceSet"/>
          </field>
          <field type="ident" def="string" name="home"/>
        </type>
        <type type="struct" name="Transaction">
          <field type="ident" def="uint64" name="OpenTransactionId"/>
          <field type="ident" def="string" name="DeviceIdHash"/>
          <field type="ident" def="int" name="DeviceId"/>
        </type>
        <type type="struct" name="DevInfo">
          <field type="ident" def="string" name="Hash"/>
          <field type="ident" def="int" name="DeviceId"/>
          <field type="ident" def="uint64" name="Size"/>
          <field type="ident" def="uint64" name="TransactionId"/>
          <field type="ident" def="bool" name="Initialized"/>
          <field type="pointer" name="devices">
            <type type="ident" def="DeviceSet"/>
          </field>
          <field type="ident" def="int" name="mountCount"/>
          <field type="ident" def="string" name="mountPath"/>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="MetaData">
          <field type="map" name="Devices">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="DevInfo"/>
            </valtype>
          </field>
          <field type="selector" name="devicesLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="DeviceSet">
          <field type="ident" def="MetaData" name=""/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="string" name="root"/>
          <field type="ident" def="string" name="devicePrefix"/>
          <field type="ident" def="uint64" name="TransactionId"/>
          <field type="ident" def="int" name="NextDeviceId"/>
          <field type="slice" name="deviceIdMap">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="dataLoopbackSize"/>
          <field type="ident" def="int64" name="metaDataLoopbackSize"/>
          <field type="ident" def="uint64" name="baseFsSize"/>
          <field type="ident" def="string" name="filesystem"/>
          <field type="ident" def="string" name="mountOptions"/>
          <field type="slice" name="mkfsArgs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="dataDevice"/>
          <field type="ident" def="string" name="dataLoopFile"/>
          <field type="ident" def="string" name="metadataDevice"/>
          <field type="ident" def="string" name="metadataLoopFile"/>
          <field type="ident" def="bool" name="doBlkDiscard"/>
          <field type="ident" def="uint32" name="thinpBlockSize"/>
          <field type="ident" def="string" name="thinPoolDevice"/>
          <field type="ident" def="Transaction" name=""/>
        </type>
        <type type="struct" name="DiskUsage">
          <field type="ident" def="uint64" name="Used"/>
          <field type="ident" def="uint64" name="Total"/>
          <field type="ident" def="uint64" name="Available"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="string" name="PoolName"/>
          <field type="ident" def="string" name="DataFile"/>
          <field type="ident" def="string" name="DataLoopback"/>
          <field type="ident" def="string" name="MetadataFile"/>
          <field type="ident" def="string" name="MetadataLoopback"/>
          <field type="ident" def="DiskUsage" name="Data"/>
          <field type="ident" def="DiskUsage" name="Metadata"/>
          <field type="ident" def="uint64" name="SectorSize"/>
          <field type="ident" def="bool" name="UdevSyncSupported"/>
        </type>
        <type type="struct" name="DevStatus">
          <field type="ident" def="int" name="DeviceId"/>
          <field type="ident" def="uint64" name="Size"/>
          <field type="ident" def="uint64" name="TransactionId"/>
          <field type="ident" def="uint64" name="SizeInSectors"/>
          <field type="ident" def="uint64" name="MappedSectors"/>
          <field type="ident" def="uint64" name="HighestMappedSector"/>
        </type>
      </types>
      <functions>
        <function name="Mounted">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ProbeFsType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="array">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DevName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="DMLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="ResizePool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="AddDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DeleteDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MountDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="UnmountDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="HasDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="HasActivatedDevice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="GetDeviceStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="DevStatus"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="DataDevicePath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="MetadataDevicePath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="Status"/>
            </type>
          </returnsList>
        </function>
        <function name="NewDeviceSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="DeviceSet"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="DefaultDataLoopbackSize"/>
        <name value="DefaultMetaDataLoopbackSize"/>
        <name value="DefaultBaseFsSize"/>
        <name value="DefaultThinpBlockSize"/>
        <name value="MaxDeviceId"/>
        <name value="DeviceIdMapSz"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/daemon/graphdriver/vfs">
      <types>
        <type type="struct" name="Driver">
          <field type="ident" def="string" name="home"/>
        </type>
      </types>
      <functions>
        <function name="Init">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="selector">
              <prefix value="graphdriver"/>
              <item value="Driver"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="array">
                <elmtype type="ident" def="string"/>
              </elmtype>
            </type>
          </returnsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Driver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/mount">
      <types>
        <type type="struct" name="MountInfo">
          <field type="ident" def="int" name="Id"/>
          <field type="ident" def="int" name="Parent"/>
          <field type="ident" def="int" name="Major"/>
          <field type="ident" def="int" name="Minor"/>
          <field type="ident" def="string" name="Root"/>
          <field type="ident" def="string" name="Mountpoint"/>
          <field type="ident" def="string" name="Opts"/>
          <field type="ident" def="string" name="Optional"/>
          <field type="ident" def="string" name="Fstype"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="VfsOpts"/>
        </type>
      </types>
      <functions>
        <function name="MakeShared">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRShared">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakePrivate">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRPrivate">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeSlave">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRSlave">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeUnbindable">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="MakeRUnbindable">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="PidMountInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MountInfo"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="GetMounts">
          <recvList/>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MountInfo"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mounted">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Mount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ForceMount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Unmount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ForceUnmount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="BIND"/>
        <name value="DIRSYNC"/>
        <name value="MANDLOCK"/>
        <name value="NOATIME"/>
        <name value="NODEV"/>
        <name value="NODIRATIME"/>
        <name value="NOEXEC"/>
        <name value="NOSUID"/>
        <name value="UNBINDABLE"/>
        <name value="RUNBINDABLE"/>
        <name value="PRIVATE"/>
        <name value="RPRIVATE"/>
        <name value="SHARED"/>
        <name value="RSHARED"/>
        <name value="SLAVE"/>
        <name value="RSLAVE"/>
        <name value="RBIND"/>
        <name value="RELATIME"/>
        <name value="RELATIVE"/>
        <name value="REMOUNT"/>
        <name value="STRICTATIME"/>
        <name value="SYNCHRONOUS"/>
        <name value="RDONLY"/>
        <name value="RDONLY"/>
        <name value="NOSUID"/>
        <name value="NODEV"/>
        <name value="NOEXEC"/>
        <name value="SYNCHRONOUS"/>
        <name value="DIRSYNC"/>
        <name value="REMOUNT"/>
        <name value="MANDLOCK"/>
        <name value="NOATIME"/>
        <name value="NODIRATIME"/>
        <name value="BIND"/>
        <name value="RBIND"/>
        <name value="UNBINDABLE"/>
        <name value="RUNBINDABLE"/>
        <name value="PRIVATE"/>
        <name value="RPRIVATE"/>
        <name value="SLAVE"/>
        <name value="RSLAVE"/>
        <name value="SHARED"/>
        <name value="RSHARED"/>
        <name value="RELATIME"/>
        <name value="STRICTATIME"/>
        <name value="RDONLY"/>
        <name value="NOSUID"/>
        <name value="NOEXEC"/>
        <name value="SYNCHRONOUS"/>
        <name value="NOATIME"/>
        <name value="BIND"/>
        <name value="DIRSYNC"/>
        <name value="MANDLOCK"/>
        <name value="NODEV"/>
        <name value="NODIRATIME"/>
        <name value="UNBINDABLE"/>
        <name value="RUNBINDABLE"/>
        <name value="PRIVATE"/>
        <name value="RPRIVATE"/>
        <name value="SHARED"/>
        <name value="RSHARED"/>
        <name value="SLAVE"/>
        <name value="RSLAVE"/>
        <name value="RBIND"/>
        <name value="RELATIVE"/>
        <name value="RELATIME"/>
        <name value="REMOUNT"/>
        <name value="STRICTATIME"/>
      </names>
    </package>
    <package importpath="github.com/docker/docker/opts">
      <types>
        <type type="struct" name="ListOpts">
          <field type="pointer" name="values">
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </field>
          <field type="ident" def="ValidatorFctType" name="validator"/>
        </type>
        <type name="ValidatorFctType" type="func">
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="ValidatorFctListType" type="func">
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="IpOpt">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ErrBadEnvVariable">
          <field type="ident" def="string" name="msg"/>
        </type>
      </types>
      <functions>
        <function name="ListVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="HostListVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="IPListVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="DnsSearchListVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="IPVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IP"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="LabelListVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="NewListOpts">
          <recvList/>
          <paramsList>
            <type type="ident" def="ValidatorFctType"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="ListOpts"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList/>
        </function>
        <function name="GetMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <type type="struct" name=""/>
            </type>
          </returnsList>
        </function>
        <function name="GetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </returnsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="bool"/>
          </returnsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListOpts"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="int"/>
          </returnsList>
        </function>
        <function name="ValidateAttach">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateLink">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidatePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateEnv">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateIPAddress">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateMACAddress">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateDnsSearch">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateExtraHost">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="ValidateLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewIpOpt">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IP"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="IpOpt"/>
            </type>
          </returnsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IpOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IpOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
        <function name="ParseEnvFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <returnsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ErrBadEnvVariable"/>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="ident" def="string"/>
          </returnsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/docker/pkg/proxy">
      <types>
        <type type="struct" name="UDPProxy">
          <field type="pointer" name="listener">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPConn"/>
            </type>
          </field>
          <field type="pointer" name="frontendAddr">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPAddr"/>
            </type>
          </field>
          <field type="pointer" name="backendAddr">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPAddr"/>
            </type>
          </field>
          <field type="ident" def="connTrackMap" name="connTrackTable"/>
          <field type="selector" name="connTrackLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="TCPProxy">
          <field type="pointer" name="listener">
            <type type="selector">
              <prefix value="net"/>
              <item value="TCPListener"/>
            </type>
          </field>
          <field type="pointer" name="frontendAddr">
            <type type="selector">
              <prefix value="net"/>
              <item value="TCPAddr"/>
            </type>
          </field>
          <field type="pointer" name="backendAddr">
            <type type="selector">
              <prefix value="net"/>
              <item value="TCPAddr"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StubProxy">
          <field type="selector" name="frontendAddr">
            <prefix value="net"/>
            <item value="Addr"/>
          </field>
          <field type="selector" name="backendAddr">
            <prefix value="net"/>
            <item value="Addr"/>
          </field>
        </type>
        <type name="Proxy" type="interface">
          <method name="Run">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="FrontendAddr">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="net"/>
                <item value="Addr"/>
              </type>
            </resultsList>
          </method>
          <method name="BackendAddr">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="net"/>
                <item value="Addr"/>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewUDPProxy">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="UDPAddr"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="UDPAddr"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="UDPProxy"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UDPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UDPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="FrontendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UDPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="BackendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UDPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="NewTCPProxy">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="TCPAddr"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="TCPAddr"/>
              </type>
            </type>
          </paramsList>
          <returnsList>
            <type type="pointer">
              <type type="ident" def="TCPProxy"/>
            </type>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TCPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TCPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="FrontendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TCPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="BackendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TCPProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StubProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StubProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList/>
        </function>
        <function name="FrontendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StubProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="BackendAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StubProxy"/>
            </type>
          </recvList>
          <paramsList/>
          <returnsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </returnsList>
        </function>
        <function name="NewStubProxy">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Proxy"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
        <function name="NewProxy">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <returnsList>
            <type type="ident" def="Proxy"/>
            <type type="ident" def="error"/>
          </returnsList>
        </function>
      </functions>
      <names>
        <name value="UDPConnTrackTimeout"/>
        <name value="UDPBufSize"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="testing"/>
    <import path="encoding/json"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="path"/>
    <import path="path/filepath"/>
    <import path="sync"/>
    <import path="github.com/docker/docker/pkg/archive"/>
    <import path="github.com/docker/docker/pkg/symlink"/>
    <import path="github.com/docker/docker/daemon/graphdriver"/>
    <import path="github.com/docker/docker/daemon/graphdriver/vfs"/>
    <import path="fmt"/>
    <import path="github.com/Sirupsen/logrus"/>
    <import path="github.com/docker/docker/pkg/common"/>
    <import path="bytes"/>
    <import path="reflect"/>
    <import path="strings"/>
    <import path="testing/iotest"/>
    <import path="time"/>
    <import path="errors"/>
    <import path="strconv"/>
    <import path="syscall"/>
    <import path="crypto/md5"/>
    <import path="archive/tar"/>
    <import path="log"/>
    <import path="bufio"/>
    <import path="crypto/sha1"/>
    <import path="crypto/sha256"/>
    <import path="encoding/hex"/>
    <import path="net/http"/>
    <import path="os/exec"/>
    <import path="regexp"/>
    <import path="runtime"/>
    <import path="github.com/docker/docker/autogen/dockerversion"/>
    <import path="github.com/docker/docker/pkg/fileutils"/>
    <import path="github.com/docker/docker/pkg/ioutils"/>
    <import path="github.com/docker/docker/pkg/term"/>
    <import path="github.com/docker/docker/pkg/timeutils"/>
    <import path="github.com/docker/docker/pkg/units"/>
    <import path="github.com/docker/docker/pkg/mflag"/>
    <import path="crypto/x509"/>
    <import path="net/url"/>
    <import path="github.com/docker/libtrust/trustgraph"/>
    <import path="github.com/docker/docker/engine"/>
    <import path="github.com/docker/libtrust"/>
    <import path="github.com/docker/docker/pkg/parsers"/>
    <import path="github.com/docker/docker/nat"/>
    <import path="github.com/docker/docker/opts"/>
    <import path="github.com/docker/docker/utils"/>
    <import path="github.com/docker/docker/registry/v2"/>
    <import path="crypto/sha512"/>
    <import path="net/http/cookiejar"/>
    <import path="github.com/docker/docker/pkg/httputils"/>
    <import path="github.com/docker/docker/pkg/tarsum"/>
    <import path="net"/>
    <import path="net/http/httptest"/>
    <import path="github.com/gorilla/mux"/>
    <import path="crypto/tls"/>
    <import path="github.com/docker/docker/pkg/timeoutconn"/>
    <import path="github.com/docker/docker/pkg/parsers/kernel"/>
    <import path="encoding/base64"/>
    <import path="math/rand"/>
    <import path="github.com/tchap/go-patricia/patricia"/>
    <import path="unsafe"/>
    <import path="os/signal"/>
    <import path="C"/>
    <import path="sort"/>
    <import path="github.com/docker/docker/vendor/src/code.google.com/p/go/src/pkg/archive/tar"/>
    <import path="compress/gzip"/>
    <import path="crypto/rand"/>
    <import path="crypto"/>
    <import path="hash"/>
    <import path="github.com/coreos/go-systemd/activation"/>
    <import path="github.com/docker/libcontainer/cgroups"/>
    <import path="encoding/binary"/>
    <import path="sync/atomic"/>
    <import path="text/tabwriter"/>
    <import path="github.com/docker/docker/pkg/homedir"/>
    <import path="unicode/utf8"/>
    <import path="database/sql"/>
    <import path="code.google.com/p/gosqlite/sqlite3"/>
    <import path="github.com/docker/docker/pkg/reexec"/>
    <import path="flag"/>
    <import path="github.com/docker/docker/pkg/jsonlog"/>
    <import path="github.com/docker/docker/pkg/pools"/>
    <import path="github.com/docker/docker/pkg/system"/>
    <import path="compress/bzip2"/>
    <import path="github.com/docker/docker/pkg/promise"/>
    <import path="github.com/docker/docker/api"/>
    <import path="net/http/httputil"/>
    <import path="github.com/docker/docker/vendor/src/github.com/kr/pty"/>
    <import path="github.com/docker/docker/pkg/mount"/>
    <import path="github.com/kr/pty"/>
    <import path="github.com/docker/docker/pkg/networkfs/resolvconf"/>
    <import path="github.com/docker/docker/pkg/iptables"/>
    <import path="unicode"/>
    <import path="text/template"/>
    <import path="github.com/docker/docker/builder/command"/>
    <import path="github.com/docker/docker/api/stats"/>
    <import path="code.google.com/p/go.net/websocket"/>
    <import path="github.com/docker/docker/builtins"/>
    <import path="github.com/docker/docker/daemon"/>
    <import path="github.com/docker/docker/registry"/>
    <import path="github.com/docker/docker/runconfig"/>
    <import path="github.com/docker/docker/builder"/>
    <import path="github.com/docker/docker/daemon/execdriver"/>
    <import path="github.com/docker/docker/image"/>
    <import path="github.com/docker/docker/api/client"/>
    <import path="github.com/docker/docker/graph"/>
    <import path="github.com/docker/docker/api/server"/>
    <import path="github.com/docker/docker/pkg/chrootarchive"/>
    <import path="github.com/docker/docker/pkg/parsers/filters"/>
    <import path="github.com/docker/docker/pkg/truncindex"/>
    <import path="github.com/docker/docker/pkg/testutils"/>
    <import path="github.com/docker/docker/daemon/execdriver/lxc"/>
    <import path="github.com/docker/docker/daemon/execdriver/native"/>
    <import path="github.com/docker/docker/pkg/signal"/>
    <import path="github.com/docker/docker/volumes"/>
    <import path="github.com/docker/libcontainer/label"/>
    <import path="github.com/docker/libcontainer/selinux"/>
    <import path="github.com/docker/docker/pkg/pubsub"/>
    <import path="github.com/docker/libcontainer/system"/>
    <import path="github.com/docker/libcontainer"/>
    <import path="github.com/docker/docker/pkg/tailfile"/>
    <import path="github.com/docker/docker/pkg/graphdb"/>
    <import path="github.com/docker/docker/pkg/parsers/operatingsystem"/>
    <import path="github.com/docker/docker/pkg/broadcastwriter"/>
    <import path="github.com/docker/docker/daemon/graphdriver/overlay"/>
    <import path="github.com/docker/docker/daemon/graphdriver/devmapper"/>
    <import path="github.com/docker/docker/daemon/graphdriver/btrfs"/>
    <import path="github.com/docker/docker/daemon/graphdriver/aufs"/>
    <import path="github.com/docker/docker/daemon/execdriver/execdrivers"/>
    <import path="github.com/docker/docker/daemon/networkdriver/bridge"/>
    <import path="github.com/docker/docker/daemon/networkdriver/portallocator"/>
    <import path="github.com/docker/docker/pkg/namesgenerator"/>
    <import path="github.com/docker/docker/pkg/sysinfo"/>
    <import path="github.com/docker/docker/trust"/>
    <import path="github.com/go-fsnotify/fsnotify"/>
    <import path="github.com/docker/libcontainer/devices"/>
    <import path="github.com/docker/docker/links"/>
    <import path="github.com/docker/docker/pkg/networkfs/etchosts"/>
    <import path="github.com/docker/docker/daemon/networkdriver"/>
    <import path="github.com/docker/libcontainer/netlink"/>
    <import path="github.com/docker/docker/pkg/proxy"/>
    <import path="math/big"/>
    <import path="github.com/docker/docker/daemon/networkdriver/portmapper"/>
    <import path="github.com/docker/docker/daemon/networkdriver/ipallocator"/>
    <import path="github.com/docker/docker/daemon/graphdriver/graphtest"/>
    <import path="github.com/docker/docker/pkg/devicemapper"/>
    <import path="github.com/docker/libcontainer/security/capabilities"/>
    <import path="github.com/docker/docker/daemon/execdriver/native/template"/>
    <import path="github.com/docker/libcontainer/namespaces"/>
    <import path="github.com/docker/libcontainer/apparmor"/>
    <import path="github.com/docker/libcontainer/cgroups/fs"/>
    <import path="github.com/docker/libcontainer/cgroups/systemd"/>
    <import path="github.com/docker/libcontainer/console"/>
    <import path="github.com/docker/libcontainer/namespaces/nsenter"/>
    <import path="github.com/docker/libcontainer/mount"/>
    <import path="github.com/syndtr/gocapability/capability"/>
    <import path="github.com/docker/libcontainer/utils"/>
    <import path="github.com/docker/libcontainer/mount/nodes"/>
    <import path="github.com/docker/docker"/>
    <import path="github.com/docker/docker/events"/>
    <import path="github.com/docker/docker/builder/parser"/>
    <import path="github.com/docker/docker/pkg/urlutil"/>
    <import path="mime"/>
    <import path="github.com/docker/docker/pkg/version"/>
    <import path="expvar"/>
    <import path="net/http/pprof"/>
    <import path="github.com/docker/libcontainer/user"/>
    <import path="github.com/docker/docker/pkg/listenbuffer"/>
    <import path="github.com/docker/docker/pkg/stdcopy"/>
    <import path="github.com/docker/docker/pkg/systemd"/>
  </imports>
</project>
